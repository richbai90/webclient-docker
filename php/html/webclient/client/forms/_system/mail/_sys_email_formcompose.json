{"espForm":{"configuration":{"settings":{"name":"_sys_email_formcompose","title":"Untitled","description":"used by webclient","options":{"allowResize":"true","showMenubar":"false","showToolbar":"false","showStatusBar":"false"}},"javascript":{"methods":{"method":[{"name":"(Globals)","code":"var _use_first_found = false;\nvar _array_mailbox_names = new Array();\nvar emailpriority = 3;\nvar _use_html_template = true;\nvar currentHTMLContent = \"\";\n\nvar _email_attachments = new Array();\nvar _email_inline_attachments = new Array();\nvar bProcessEmailAuditTrail = false;\n\nvar _arrValidatedAddresses = new Array();\nvar _array_BCC = new Array();\nvar _array_CC = new Array();\nvar _array_TO = new Array();\n\n\n\/\/-- check all inline images and make sure they have a swcid att\nfunction set_inlineimages_swcid(rte)\n{\n\tvar arrImages = rte.getEditorWindow(\"tb_body\").document.getElementsByTagName(\"img\");\n\tfor(var i=0;i<arrImages.length;i++)\n\t{\n\t\tvar swcid = arrImages[i].getAttribute(\"swcid\");\n\t\tif(swcid==null || swcid==\"\")\n\t\t{\n\t\t\tvar strSrc = arrImages[i].getAttribute(\"src\");\n\t\t\tfor(strCID in _swdoc._email_inline_attachments)\n\t\t\t{\n\t\t\t\tif(app.pfu(unescape(strSrc.toLowerCase()))==app.pfu(_swdoc._email_inline_attachments[strCID].wwwpath.toLowerCase()))\n\t\t\t\t{\n\t\t\t\t\tarrImages[i].setAttribute(\"swcid\",strCID);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\/\/-- insert email signature\nfunction tb_body_InsertEmailSignature(rteName,rte)\n{\n\t\/\/-- popup item selector\n\tvar strMailboxName = app.global.GetMailboxNameByPos(mainform.lb_from.value);\n\tvar strParams = \"_parentformid=\" + _uniqueformid + \"&_mailbox=\" + strMailboxName;\n\tvar oForm = app._open_system_form(\"_sys_email_selectsignature\", \"mail\", \"\", strParams, true,  null, null, window,250,250);\n\tif(oForm._swdoc._selected_signature!=\"\")\n\t{\n\t\tif(!rte._swplainmode)\n\t\t{\n\t\t\trte.insertHTML(oForm._swdoc._selected_html_signature,rteName)\n\t\t\t\/\/-- store any embedded file attachments\n\t\t\tfor(strContentID in oForm._swdoc._signature_inline_attachments)\n\t\t\t{\n\t\t\t\t_swdoc._email_inline_attachments[strContentID] = oForm._swdoc._signature_inline_attachments[strContentID];\n\t\t\t}\n\t\t\t\/\/-- make sure newly added images has swcid\n\t\t\t_swdoc.set_inlineimages_swcid(rte);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmainform.tb_body._insert_text_at_cursor(oForm._swdoc._selected_signature);\n\t\t}\n\t}\n}\n\n\/\/-- trap when rte loses focus so we can store edited html\nfunction tb_body_OnRichTextEditorBlur(rte,strBodyHTML, strEmailReadyHTML,strPlainText)\n{\n\tif(!_swdoc._bMergeMessageMode) \n\t{\n\t\t\/\/-- plain text value\n\t\t_eva(mainform.tb_body , strPlainText);\n\t\treturn true;\n\t}\n\t\n\t\/\/-- if in merge mode then make sure we record change\n\tvar _currentHTML = app.global.GetCurrentEpocTime();\n\tif(_swdoc._modified_merge_messages[_swdoc._current_merge_message])\n\t{\n\t\t_currentHTML = _swdoc._modified_merge_messages[_swdoc._current_merge_message].strEmailReadyHTML;\n\t}\n\tif(_currentHTML!=strEmailReadyHTML)\n\t{\n\t\tvar strSubject = mainform.tb_subject.text; \n\n\t\n\t\t_swdoc._modified_merge_messages[_swdoc._current_merge_message] = new Object();\n\t\t_swdoc._modified_merge_messages[_swdoc._current_merge_message].subject = strSubject;\n\n\t\tif(_swdoc._use_html_template)\n\t\t{\n\t\t\t_swdoc._modified_merge_messages[_swdoc._current_merge_message].bodyHtml = strBodyHTML;\t\t\t\t\t\n\t\t\t_swdoc._modified_merge_messages[_swdoc._current_merge_message].strEmailReadyHTML = strEmailReadyHTML;\t\t\t\t\t\t\n\t\t}\n\t\t_swdoc._modified_merge_messages[_swdoc._current_merge_message].body = strPlainText;\t\t\n\t}\n\telse\n\t{\n\t\n\t}\n}\n\n\n\/\/-- called when image as been insert into html editor\nfunction fl_imageinsert_OnFileUploaded(strFileName,strFileType, strFileSize,strFileDate,strWwwPath,strOrigFileName)\n{\n\t\/\/-- call rich text editor to insert image\n\tvar attValue = app.global.GetCurrentEpocTime();\n\tvar SWCID = attValue + \"_hornbill\";\n\t_swdoc._email_inline_attachments[SWCID] = new Object()\n\t_swdoc._email_inline_attachments[SWCID].srcfilename = strFileName;\t\n\t_swdoc._email_inline_attachments[SWCID].origfilename = strOrigFileName;\n\t_swdoc._email_inline_attachments[SWCID].wwwpath = strWwwPath;\n\n\tmainform._targetframe.WYSIWYG.insertImage(strWwwPath, \"\", \"\", \"\", \"0\", \"\", \"\", \"\", \"tb_body\",SWCID);\n}\n\n\/\/-- called when file attachement has been added\nfunction fl_attachments_OnFileUploaded(strFileName,strFileType, strFileSize,strFileDate,strWwwPath,strOrigFileName)\n{\n\tvar strPickList = mainform.lb_attachments.pickList;\n\tvar arrInfo = strFileName.split(\".\");\n\t\n\t_swdoc._email_attachments[strFileName] = new Object();\n\t_swdoc._email_attachments[strFileName].attvalue = arrInfo[1];\t\n\t_swdoc._email_attachments[strFileName].origfilename = strOrigFileName;\n\t_swdoc._email_attachments[strFileName].wwwpath = strWwwPath;\t\n\t\n\tif(strPickList!=\"\")strPickList+=\"|\";\n\tstrPickList += strOrigFileName +\"^\" + arrInfo[1];\n\t\n\tmainform.lb_attachments.pickList = strPickList;\n\t_eva(mainform.lb_attachments , arrInfo[1]);\n\t\n\t_een(mainform.btn_remove_attach , true);\n\t_een(mainform.btn_view , true);\n}\n\n\n\nvar _modified_merge_messages = new Array();\nvar _current_merge_message = 0;\nvar _intMessageCount = 0;\nvar _bMergeMessageMode=false;\nfunction _load_merge_messages()\n{\n\t_swdoc._bMergeMessageMode = true;\n\t\/\/-- call xmlmc (that was passed into the form) to get merged messages - using passed in xmlmc info params\n\tvar xmlmc = _swdoc._form['_mergeMessageXmlmc'];\n\tif(xmlmc==undefined)\n\t{\n\t\tMessageBox(\"Error : The merge message xmlmc object was not passed into the form. Please contact your Administrator\");\n\t\t_swdoc.CloseForm();\n\t\treturn;\n\t}\n\t\n\tif(xmlmc.Invoke(\"mail\",\"getMergeMessageList\",0,_uniqueformid))\n\t{\n\t\t_swdoc._form['_mergedxml'] = xmlmc.xmlDOM;\n\t\t_swdoc._form['_mergedtable'] = xmlmc.GetParam('tableName');\n\t}\n\telse\n\t{\n\t\tMessageBox(\"Error : mail.getMergeMessageList failed.\\n\\n\" + xmlmc.GetLastError())\n\t\tapp.debug(xmlmc.xmlDOM.xml,\"global.ComposeCallUpdateEmail\",\"Get Merge Data\");\n\t\t_swdoc.CloseForm();\n\t\treturn;\n\t}\n\t\n\tvar arrMessages = _swdoc._form['_mergedxml'].getElementsByTagName(\"message\");\n\t_swdoc._intMessageCount = arrMessages.length;\n\tarrMessages = null;\t\n\t\/\/-- show next and back buttons and disable formatting\n\tif(_swdoc._intMessageCount>1)\n\t{\n\t\t_evi(mainform.btn_prev_msg , true);\n\t\t_een(mainform.btn_prev_msg , false);\t\n\t\t_evi(mainform.btn_next_msg , true);\t\t\n\t\t_evi(mainform.lbl_messages , true);\t\t\t\n\t\t\n\t\t_evi(mainform.mb_format , false);\n\t\t\n\t\t\/\/-- disable cc bcc\n\t\t_een(mainform.btn_to,false);\n\t\t_een(mainform.btn_cc,false);\n\t\t_een(mainform.btn_bcc,false);\t\n\t\t_een(mainform.tb_to , false);\n\t\t_een(mainform.tb_cc , false);\n\t\t_een(mainform.tb_bcc , false);\n\t}\n\n\t\n\n\t\/\/-- copy any call attachments - call xmlmc\n\tvar strCallInfo = _swdoc._form['_lastupdateCallInfo'];\n\tif(strCallInfo!=null)\n\t{\n\t\tvar arrCallInfo = strCallInfo.split(\".\");\n\t\tvar xmlmc = new XmlMethodCall();\n\t\txmlmc.SetParam(\"callRef\", arrCallInfo[0]);\n\t\txmlmc.SetParam(\"updateId\", arrCallInfo[1]);\t\n\t\tif(xmlmc.Invoke(\"helpdesk\",\"getCallFileAttachmentList\"))\n\t\t{\n\t\t\t\/\/-- loop through file atts and copy to server\n\t\t\t\/\/-- add to attachments list\n\t\t\tvar strAttPickList = \"\";\n\t\t\tvar intAttPickListValue = 0;\n\t\t\tvar boolFiles = false;\n\t\t\tvar arrFiles = xmlmc.xmlDOM.getElementsByTagName('callFileAttachment');\n\t\t\tfor(var x=0;x<arrFiles.length;x++)\n\t\t\t{\n\t\t\t\tvar strOrigFileName = app.xmlNodeTextByTag(arrFiles[x],\"fileName\")\n\t\t\t\n\t\t\t\t\/\/-- get fileid and call xmlmc to get call attachment (which will copy file to the server)\n\t\t\t\tvar anotherxmlmc = new XmlMethodCall();\n\t\t\t\tanotherxmlmc.SetParam(\"callRef\", arrCallInfo[0]);\n\t\t\t\tanotherxmlmc.SetParam(\"fileId\", app.xmlNodeTextByTag(arrFiles[x],\"fileID\"));\t\n\t\t\t\tanotherxmlmc.SetWebclientParam(\"_savecallfilesforemailattachment\", \"1\");\t\t\n\t\t\t\tif(anotherxmlmc.Invoke(\"helpdesk\",\"getCallFileAttachment\"))\n\t\t\t\t{\n\t\t\t\t\t\/\/-- add to _swdoc level array\n\t\t\t\t\t\n\t\t\t\t\tvar strAttFileName = anotherxmlmc.GetReturnValue(\"attachmentFileName\");\n\t\t\t\t\tvar strAttFileValue = anotherxmlmc.GetReturnValue(\"attachmentFileValue\");\n\t\t\t\t\t\n\t\t\t\t\t_swdoc._email_attachments[strAttFileName] = new Object();\n\t\t\t\t\t_swdoc._email_attachments[strAttFileName].attvalue = strAttFileValue;\t\n\t\t\t\t\t_swdoc._email_attachments[strAttFileName].origfilename = strOrigFileName;\n\t\t\t\t\t_swdoc._email_attachments[strAttFileName].wwwpath = anotherxmlmc.GetReturnValue(\"fileContent\");\n\t\t\t\t\n\t\t\t\t\tif(strAttPickList != \"\")strAttPickList += \"|\";\t\n\t\t\t\t\tstrAttPickList += strOrigFileName + \"^\" + strAttFileValue;\n\t\t\n\t\t\t\t\tif(!boolFiles)intAttPickListValue=strAttFileValue;\n\t\t\t\n\t\t\t\t\tboolFiles=true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\/\/-- if we had files\n\t\t\tif(boolFiles)\n\t\t\t{\n\t\t\t\t\/\/-- add filenames and values to picklist\n\t\t\t\tmainform.lb_attachments.pickList = strAttPickList;\n\t\t\t\t_eva(mainform.lb_attachments , intAttPickListValue);\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/if(_swdoc._form['_firstadd']==1)\n\t\/\/{\n\t\t\/\/-- use first mail add for selected mailbox - what does this mean?\n\t\/\/}\n\n\t\/\/-- load first message\n\treturn _swdoc._load_merge_message(0);\n\n}\n\nfunction _load_merge_message(intMessagePos)\n{\n\tif(intMessagePos==-1)return;\n\tif(intMessagePos==_swdoc._intMessageCount)return;\n\n\t\/\/-- if using html\n\tvar strBody = \"\";\t\n\tvar strHTMLBody = \"\";\n\tvar arrMessages = _swdoc._form['_mergedxml'].getElementsByTagName(\"message\");\n\tvar xmlMessage = arrMessages[intMessagePos];\n\tif(xmlMessage!=undefined)\n\t{\n\t\tvar arrFiles =  _swdoc._form['_mergedxml'].getElementsByTagName(\"mimeAttachment\")\n\t\t\/\/-- add any inline content files to _swdoc level mime array\n\t\tfor(var x=0;x<arrFiles.length;x++)\n\t\t{\n\t\t\tvar strFileName = app.xmlNodeTextByTag(arrFiles[x],\"fileName\");\n\t\t\tvar strContentId = app.xmlNodeTextByTag(arrFiles[x],\"contentId\");\t\n\t\t\tif(strContentId!=\"\")\n\t\t\t{\n\t\t\t\t\/\/--\n\t\t\t\t\/\/-- add any inline content files to _swdoc level mime array\n\t\t\t\t_swdoc._email_inline_attachments[strContentId] = new Object();\n\t\t\t\t_swdoc._email_inline_attachments[strContentId].attvalue = x;\t\n\t\t\t\t_swdoc._email_inline_attachments[strContentId].srcfilename = \"mime.\" + x + \".\"+strFileName;\t\n\t\t\t\t_swdoc._email_inline_attachments[strContentId].origfilename = strFileName;\t\n\t\t\t\t_swdoc._email_inline_attachments[strContentId].wwwpath = app.xmlNodeTextByTag(arrFiles[x],\"fileData\");\t\n \t\t\t}\n\t\t}\t\t\t\n\t\n\t\t_swdoc._current_merge_message= intMessagePos;\n\t\t\n\t\t\/\/-- set label\n\t\t_ete(mainform.lbl_messages , \"Message \" + (_swdoc._current_merge_message + 1) + \" of \" + _swdoc._intMessageCount);\t\t\n\n\t\t\/\/-- get body and subject (check if modified)\n\t\tif(_swdoc._modified_merge_messages[intMessagePos]!=undefined)\n\t\t{\n\t\t\t\/\/-- message has been modified so get modified version\n\t\t\tvar strSubject = _swdoc._modified_merge_messages[intMessagePos].subject;\n\t\t\tstrBody = _swdoc._modified_merge_messages[intMessagePos].body;\n\t\t\tstrHtmlBody = _swdoc._modified_merge_messages[intMessagePos].bodyHtml;\n\t\t}\n\t\telse\n\t\t{\t\t\n\t\t\tvar strSubject = app.xmlNodeTextByTag(xmlMessage,\"subject\");\n\t\t\tstrBody = app.xmlNodeTextByTag(xmlMessage,\"body\");\n\t\t\tstrHtmlBody = app.xmlNodeTextByTag(xmlMessage,\"htmlbody\");\n\t\t\tif(strHtmlBody==\"\" && _swdoc._use_html_template)\n\t\t\t{\n\t\t\t\t\/\/-- html is empty so get plain\n\t\t\t\tstrHtmlBody = strBody.replace(\/\\n\\r|\\n\/ig, \"<br>\");\t\n\t\t\t}\n\t\t}\n\n\t\t\/\/-- to address\n\t\tvar arrRecipients = xmlMessage.getElementsByTagName(\"recipient\");\n\t\tvar strToAddress =  app.xmlNodeTextByTag(arrRecipients[0],\"address\");\n\t\t\n\t\t\/\/-- address info\n\t\tvar oAddress = new Object();\n    \toAddress.email = strToAddress;\n    \toAddress.name = app.xmlNodeTextByTag(arrRecipients[0],\"name\");\n    \toAddress.transport = app.xmlNodeTextByTag(arrRecipients[0],\"transport\");\n    \t\n\t\t_eva(mainform.tb_subject , strSubject);\n\t\t_eva(mainform.tb_body , strBody);\n\t\t_swdoc.SetTitle(strSubject);\n\t\t\n\t\t\n\t\t\/\/-- 89028 - resolve and validate incoming address\t\n\t\t_swdoc._array_TO = new Array(); \/\/-- clear array\n\t\t_swdoc.resolve_email_addresschange(strToAddress, mainform.tb_to, _swdoc._array_TO, false, oAddress.name);\n\t\n\t}\n\t\n\treturn (_swdoc._use_html_template)?strHtmlBody:strBody;\n}\n\n\/\/-- can only update subject and body\nfunction _modify_merge_message(intMessagePos,strEmailReadyHTML, rte)\n{\n\t\/\/-- will modify mail merge - text an html\n\trte.onBlur(\"tb_body\");\t\n}\n\n\/\/-- handle mail merge sending\nfunction _send_mail_merge()\n{\n\tvar boolDeleteMerge = false;\n\tvar arrMessages = _swdoc._form['_mergedxml'].getElementsByTagName(\"message\");\n\tvar strMailboxName = app.global.GetMailboxNameByPos(mainform.lb_from.value);\n\t\/\/-- send modified messages\n\tfor(intMessagePos in _swdoc._modified_merge_messages)\n\t{\n\t\tvar xmlmc = new XmlMethodCall();\t\n\t\txmlmc.SetParam(\"mailbox\", strMailboxName);\n\n\t\t\/\/-- send to address info\n\t\tvar xmlMessage = arrMessages[intMessagePos];\n\t\tvar arrRecipients = xmlMessage.getElementsByTagName(\"recipient\");\n\t\tvar strToAddress =  app.xmlNodeTextByTag(arrRecipients[0],\"address\");\n\t\tif(strToAddress==\"\")continue; \/\/-- skip sending\n\n\t\tvar oAddress = new Object();\n    \toAddress.name = app.xmlNodeTextByTag(arrRecipients[0],\"name\");\n    \toAddress.transport = app.xmlNodeTextByTag(arrRecipients[0],\"transport\");\t\n\t\tvar strXML = \"<class>to<\/class>\";\n\t\t    strXML += \"<address>\"+ app.global.PrepareForXML(strToAddress)+\"<\/address>\";\t\n\t\t    strXML += \"<name>\"+app.global.PrepareForXML(oAddress.name)+\"<\/name>\"; \n\t\t    strXML += \"<transport>\" + oAddress.transport + \"<\/transport>\"; \n\t\txmlmc.SetParamAsComplexType(\"recipient\", strXML);\n\t\n\t\t\/\/-- subject \/ priority and body\n\t\txmlmc.SetParam(\"subject\",_swdoc._modified_merge_messages[intMessagePos].subject);\n\t\txmlmc.SetParam(\"priority\", _swdoc.emailpriority);\n\t\txmlmc.SetParam(\"body\",_swdoc._modified_merge_messages[intMessagePos].body);\t\t\t\n\t\tif(_swdoc._use_html_template)\n\t\t{\n\t\t\txmlmc.SetParam(\"htmlBody\", _swdoc._modified_merge_messages[intMessagePos].strEmailReadyHTML);\t\t\n\t\t}\n\n\t\t\/\/-- file attachments\n\t\tfor(strFileName in _swdoc._email_attachments)\n\t\t{\n\t\t\tvar strListFile = _swdoc._email_attachments[strFileName].origfilename\n\t\t\tvar strFileXML = \"<fileName>\" + app.global.PrepareForXML(strListFile) + \"<\/fileName><wcFileSrcName>\" + app.global.PrepareForXML(strFileName) + \"<\/wcFileSrcName>\";\n\t\t\txmlmc.SetParamAsComplexType(\"fileAttachment\", strFileXML);\n\t\t}\n\n\t\t\/\/-- inline content file attachments (inline images)\n\t\tfor(strCID in _swdoc._email_inline_attachments)\n\t\t{\n\t\t\tvar strListFile = _swdoc._email_inline_attachments[strCID].origfilename\n\t\t\tvar strSrcFile = _swdoc._email_inline_attachments[strCID].srcfilename;\t\n\t\t\tvar strFileXML = \"<fileName>\" + app.global.PrepareForXML(strListFile) + \"<\/fileName><wcFileSrcName>\" + app.global.PrepareForXML(strSrcFile) + \"<\/wcFileSrcName>\";\n\t\t\t\tstrFileXML += \"<contentId>\" + app.global.PrepareForXML(strCID) + \"<\/contentId>\";\t\t\n\t\t\txmlmc.SetParamAsComplexType(\"fileAttachment\", strFileXML);\n\t\t}\n\n\t\tif(!xmlmc.Invoke(\"mail\", \"sendMessage\"))\n\t\t{\n\t\t\tMessageBox(\"There was a problem sending a modified email. Please contact your Administator.\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_swdoc.attachMessageToCallProcess(xmlmc,intMessagePos);\n\t\t}\n\t\n\t\tboolDeleteMerge = true;\n\t\t\n\t}\n\n\t\/\/-- remove any modified messages from the mail merge table\n\tif(boolDeleteMerge)\n\t{\n\t\tvar counter = 0;\n\t\tvar xmlmc = new XmlMethodCall();\t\n\t\txmlmc.SetParam(\"tableName\", _swdoc._form['_mergedtable']);\n\t\tfor(intMessagePos in _swdoc._modified_merge_messages)\n\t\t{\n\t\t\tcounter++;\n\t\t\tintMessagePos--;intMessagePos++;\n\t\t\txmlmc.SetParam(\"messageId\", intMessagePos + 1);\n\t\t}\t\n\t\tif(!xmlmc.Invoke(\"mail\", \"deleteMergeMessages\"))\n\t\t{\n\t\t\tMessageBox(\"There was a problem removing a modified email from the mail merge table. Please contact your Administator.\");\n\t\t}\n\t\t\n\t\tif(counter==_swdoc._intMessageCount)\n\t\t{\n\t\t\t\/\/-- no need to send merge\n\t\t\t_swdoc.CloseForm();\n\t\t\treturn true;\n\t\t}\n\t}\t\n\n\t\/\/-- now send merge message api\n\tvar xmlmc = new XmlMethodCall();\t\n\txmlmc.SetParam(\"mailbox\", _swdoc._form['_mailbox']);\t\n\txmlmc.SetParam(\"tableName\", _swdoc._form['_mergedtable']);\t\t\n\txmlmc.SetParam(\"templateMailbox\", _swdoc._form['_mailbox']);\n\txmlmc.SetParam(\"templateName\", _swdoc._form['_templatename']);\t\n\txmlmc.SetParam(\"templateType\", _swdoc._form['_templatetype']);\t\n\t\n\t\/\/-- from address\n\tvar strTran = (mainform.lb_from.display.indexOf(\"(local)\")>0)?\"local\":\"inet\";\n\tvar address = (strTran ==\"local\")?\"Local\":app.global.GetMailboxEmailAddressByPos(mainform.lb_from.value);\n\t\n\tvar strXML = \"<class>from<\/class>\";\n\t\tstrXML += \"<address>\"+ app.global.PrepareForXML(address)+\"<\/address>\";\t\n\t\tstrXML += \"<name>\"+app.global.PrepareForXML(app.global.GetMailboxEmailDisplayNameByPos(mainform.lb_from.value))+\"<\/name>\"; \n\t\tstrXML += \"<transport>\" + strTran + \"<\/transport>\"; \n\t\txmlmc.SetParamAsComplexType(\"recipient\", strXML);\n\n\n\t\/\/-- file attachments\n\tfor(strFileName in _swdoc._email_attachments)\n\t{\n\t\tvar strListFile = _swdoc._email_attachments[strFileName].origfilename\n\t\tvar strFileXML = \"<fileName>\" + app.global.PrepareForXML(strListFile) + \"<\/fileName><wcFileSrcName>\" + app.global.PrepareForXML(strFileName) + \"<\/wcFileSrcName>\";\n\t\txmlmc.SetParamAsComplexType(\"fileAttachment\", strFileXML);\n\t}\n\n\t\/\/-- inline content file attachments (inline images)\n\tfor(strCID in _swdoc._email_inline_attachments)\n\t{\n\t\tvar strListFile = _swdoc._email_inline_attachments[strCID].origfilename\n\t\tvar strSrcFile = _swdoc._email_inline_attachments[strCID].srcfilename;\t\n\t\tvar strFileXML = \"<fileName>\" + app.global.PrepareForXML(strListFile) + \"<\/fileName><wcFileSrcName>\" + app.global.PrepareForXML(strSrcFile) + \"<\/wcFileSrcName>\";\n\t\t\tstrFileXML += \"<contentId>\" + app.global.PrepareForXML(strCID) + \"<\/contentId>\";\t\t\n\t\txmlmc.SetParamAsComplexType(\"fileAttachment\", strFileXML);\n\t}\n\t\t\n\t\/\/-- global tokens (??)\n\tvar strXML = \"<key>timespent<\/key><value>\"+ app.global.PrepareForXML(_swdoc._form['_timespent'])+\"<\/value>\";\n\txmlmc.SetParamAsComplexType(\"globalToken\", strXML);\n\t\n\tvar strXML = \"<key>lastupdate<\/key><value>\"+ app.global.PrepareForXML(_swdoc._form['_lastupdate'])+\"<\/value>\";\n\txmlmc.SetParamAsComplexType(\"globalToken\", strXML);\n\t\n\tvar strXML = \"<key>analyst_id<\/key><value>\"+app.global.PrepareForXML(app.session.analystid)+\"<\/value>\";\n\txmlmc.SetParamAsComplexType(\"globalToken\", strXML);\n\t\n\tvar strXML = \"<key>analyst_name<\/key><value>\"+app.global.PrepareForXML(app._analyst_name)+\"<\/value>\";\n\txmlmc.SetParamAsComplexType(\"globalToken\", strXML);\t\n\t\n\tvar strXML = \"<key>helpdeskrep<\/key><value>\"+app.global.PrepareForXML(app._analyst_name)+\"<\/value>\";\n\txmlmc.SetParamAsComplexType(\"globalToken\", strXML);\t\t\n\t\n\tvar strXML = \"<key>analyst_telephoneno<\/key><value>\"+app.global.PrepareForXML(app._analyst_telephone)+\"<\/value>\";\n\txmlmc.SetParamAsComplexType(\"globalToken\", strXML);\t\t\n\t\t\t\n\tif(!xmlmc.Invoke(\"mail\", \"sendMergeMessage\"))\n\t{\n\t\tMessageBox(\"There was a problem sending the mail merge. Please contact your Administator.\");\n\t}\n\telse\n\t{\n\t\t_swdoc.attachMessageToCallProcess(xmlmc);\n\t}\n\n\tvar xmlmc = new XmlMethodCall();\t\n\txmlmc.SetParam(\"tableName\", _swdoc._form['_mergedtable']);\n\txmlmc.Invoke(\"mail\", \"freeMailMergeTable\");\n\t\n\t\/\/-- no need to send merge\n\t_swdoc.CloseForm();\n\treturn true;\t\n}\n\n\nfunction attachMessageToCallProcess(xmlmc,intMessagePosition)\n{\n\tif(!_swdoc.bProcessEmailAuditTrail)return;\n\t\n\tvar arrAttachEmails = new Array();\n    var bIncludeAttachments = dd.GetGlobalParamAsNumber(\"Email Audit Trail\/IncludeAttachmentsInMessage\");\t\n    var strMoveMessageToFolder = \"\";\n  \tvar intMessageID = xmlmc.GetReturnValue('messageId');\n\tif(intMessageID==\"\")\n\t{\n\t\t\/\/-- mail merge to get message ids and callrefs and for each perform a message attach\n\t\tvar strMailbox = _swdoc._form['_mailbox'];\t\t\n\t\tvar arrMessageCallrefs = xmlmc.GetReturnValue(\"listId\").split(\"\\n\");\n\t\tfor(var x=0;x<arrMessageCallrefs.length;x++)\n\t\t{\n\t\t\tif(arrMessageCallrefs[x]==\"\")continue;\n\t\t\tvar arrInfo = arrMessageCallrefs[x].split(\"=\");\n\t\t\tvar intMessageID = arrInfo[0];\n\t\t\tvar intCallref = new Number(arrInfo[1].replace(\"F\",\"\"));\n\n\t    \tarrAttachEmails[intMessageID] = new Object();\n    \t\tarrAttachEmails[intMessageID].subject = _swdoc.getMessageSubject(intMessageID, strMailbox); \/\/-- have to call get message api in order to get subject\n    \t\tarrAttachEmails[intMessageID].callref = intCallref;\n   \t\t\tarrAttachEmails[intMessageID].udindex = _swdoc.getLastCallUpdateIndex(intCallref); \t\t\n\t\t}\n\t}\n\telse\n\t{\n\t\t\/\/-- sent a single mail merge message\n\t\tif(intMessagePosition==undefined) intMessagePosition=0;\n\t\t\n\t\tvar strMailbox = xmlmc._params['mailbox'];\t\t\n\t\tvar intCallref = _swdoc._form['_arrMailmergeCallrefs'][intMessagePosition];\n    \tvar strEmailSubject = xmlmc._params['subject'];\t\n    \tarrAttachEmails[intMessageID] = new Object();\n    \tarrAttachEmails[intMessageID].subject = strEmailSubject;\n    \tarrAttachEmails[intMessageID].callref = intCallref;\n   \t\tarrAttachEmails[intMessageID].udindex = _swdoc.getLastCallUpdateIndex(intCallref); \t\n\t}\n    \n    \n    for(strAttachItemID in arrAttachEmails)    \n    {\n        var oAttachInfo = arrAttachEmails[strAttachItemID];                                             \n    \tvar strEmailSubject = app._replaceIllegalFileCharacters(oAttachInfo.subject);\n \t\n    \t\/\/ The following function does a number of things. It tells the server to encode\n    \t\/\/ and attach the specified message to the call. It sets the state icon of the \n    \t\/\/ call update to \"mail-received\" in this instace. If the strMoveMessageToFolder\n    \t\/\/ contains a valid folder, it will move the specified mail message to the folder\n    \tapp.global.AttachMessageToCall(strMailbox,                               \/\/ Mailbox name\n                        \tstrAttachItemID,                          \/\/ Message ID\n                        \t\"Sent-\" + strEmailSubject + \".swm\",       \/\/ File name\n                        \toAttachInfo.callref,                      \/\/ Call reference\n                        \toAttachInfo.udindex,                      \/\/ UdIndex\n                        \t\"mail-sent\",                              \/\/ Indicate that this is a sent message\n                        \tbIncludeAttachments,                      \/\/ Include File attachments?\n                        \tstrMoveMessageToFolder);                  \/\/ Move the message to this folder - none\n\t}                            \n}\n\n\nfunction getLastCallUpdateIndex(intCallref) \n{\n\tvar xmlmc = new XmlMethodCall();\t\n\txmlmc.SetParam(\"callref\", intCallref);\t\n\tif(xmlmc.Invoke(\"helpdesk\",\"getLastCallUpdateIndex\"))\n\t{\n\t\treturn  xmlmc.GetReturnValue(\"index\")-1;\n\t}\n\treturn 0;\n}\n\nfunction getMessageSubject(intMsgID,strMailBox)\n{\n\tvar xmlmc = new XmlMethodCall();\t\n\txmlmc.SetParam(\"mailbox\", strMailBox);\t\t\n\txmlmc.SetParam(\"messageId\", intMsgID);\t\n\tif(xmlmc.Invoke(\"mail\",\"getMessage\"))\n\t{\n\t\treturn  xmlmc.GetReturnValue(\"subject\");\n\t}\n\treturn \"\";\n\n}"},{"name":"(User Defined Functions)","code":"function resolve_email_addresschange(strValue, targetEle, targetArray, bSkipSafariCheck, optRecipDisplayName)\n{\n\tif(strValue==\"\")\n\t{\n\t\tMessageBox(\"The provided recipient email or address book contact is missing. Please check your customer record to ensure an email address has been specified.\");\n\t\treturn;\n\t}\n\n\tif(bSkipSafariCheck==undefined)bSkipSafariCheck=false;\n\tvar arrAddress = strValue.split(\";\")\n\tfor(var x=0;x<arrAddress.length;x++)\n\t{\t\n\t\tvar oAddress = undefined;\n\t\tvar strCheckAddress = app.trim(arrAddress[x]);\n\t\tif(strCheckAddress==\"\")continue;\n\n\t\t\/\/--\n\t\t\/\/-- has email already been validated\n\t\tif(_swdoc._arrValidatedAddresses[strCheckAddress])\n\t\t{\n\t\t\tvar oAddress = _swdoc._arrValidatedAddresses[strCheckAddress];\n\t\t\ttargetArray[oAddress.email] = oAddress;\n\t\t}\n\t\telse\n\t\t{\t\t\n\t\t\t\/\/-- set error message\n\t\t\tvar strInvalidMsg = \"The email or address book contact (\" + strCheckAddress + \") is not valid. Please enter a valid email or address book contact name.\"\n\t\t\tif(optRecipDisplayName!=undefined && strValue!=optRecipDisplayName)\n    \t\t{\n   \t\t\t\tstrInvalidMsg = \"The email address (\" + strCheckAddress + \") for contact (\" + optRecipDisplayName + \") is not valid. Please enter a valid email or address book contact name.\" \n    \t\t}\t\n\t\t\n\t\t\n\t\t\t\/\/-- call addressbook to check and get back email, name and transport\n\t\t\tvar xmlmc = new XmlMethodCall;\n\t\t\txmlmc.SetParam(\"address\", strCheckAddress);\n\t\t\tif(xmlmc.Invoke(\"addressbook\", \"verifyAddress\"))\n\t\t\t{\n\t\t\t\t\/\/-- store address info\n    \t\t\tvar iCount = xmlmc.GetParam(\"addressCount\");\n    \t\t\tif(iCount==1)\n    \t\t\t{\n    \t\t\t\t\/\/-- add to array\n    \t\t\t\tvar xmlAddress = xmlmc.xmlDOM.getElementsByTagName(\"address\");\n    \t\t\t\tvar oAddress = new Object();\n    \t\t\t\toAddress.email = app.xmlNodeTextByTag(xmlAddress[0],\"email\");\n    \t\t\t\toAddress.name = app.xmlNodeTextByTag(xmlAddress[0],\"name\");\n    \t\t\t\toAddress.transport = app.xmlNodeTextByTag(xmlAddress[0],\"transport\");\n    \t\t\t\ttargetArray[oAddress.email] = oAddress;\n    \t\t\t}\n\t\t\t\telse if(iCount>1)\n\t\t\t\t{\n\t\t\t\t\tif(_swdoc._use_first_found)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar xmlAddress = xmlmc.xmlDOM.getElementsByTagName(\"address\");\n\t\t\t\t\t\tvar oAddress = new Object();\n    \t\t\t\t\toAddress.email = app.xmlNodeTextByTag(xmlAddress[0],\"email\");\n    \t\t\t\t\toAddress.name = app.xmlNodeTextByTag(xmlAddress[0],\"name\");\n    \t\t\t\t\toAddress.transport = app.xmlNodeTextByTag(xmlAddress[0],\"transport\");\n    \t\t\t\t\ttargetArray[oAddress.email] = oAddress;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n    \t\t\t\t\t\/\/-- show popup and let user select\n    \t\t\t\t\tif(app.isSafari && !bSkipSafariCheck)\n    \t\t\t\t\t{\n    \t\t\t\t\t\t\/\/-- handle obscure issue with opening a popup\n    \t\t\t\t\t\t_swdoc._resolveaddress_value = strCheckAddress;\n    \t\t\t\t\t\t_swdoc._resolveaddress_ele = targetEle;\t\n    \t\t\t\t\t\t_swdoc._resolveaddress_array = targetArray;\t\n    \t\t\t\t\t\t_swdoc._resolveaddress_name = optRecipDisplayName;\t\t\n    \t\t\t\t\t\tmainform.SetTimer(1, 50);\n    \t\t\t\t\t\treturn;\n    \t\t\t\t\t}\n    \t\t\t\t\telse\n    \t\t\t\t\t{\n    \t\t\t\t\t\tvar strParam = \"_email_check_string=\" + strCheckAddress;\n    \t\t\t\t\t\tvar oForm = app._open_system_form(\"_sys_email_namepicker\", \"mail\", \"\", strParam, true, null,null);\t\n    \t\t\t\t\t\tif(oForm.document._selected_email_address!=\"\")\n    \t\t\t\t\t\t{\n   \t\t\t\t\t\t\t\tvar xmlAddresses = xmlmc.xmlDOM.getElementsByTagName(\"address\");\n   \t\t\t\t\t\t\t\tfor(var y=0; y < xmlAddresses.length;y++)\n   \t\t\t\t\t\t\t\t{\n   \t\t\t\t\t\t\t\t\tvar xmlAddress = xmlAddresses[y];\n    \t\t\t\t\t\t\t\tvar strEmail = app.xmlNodeTextByTag(xmlAddress,\"email\");\n    \t\t\t\t\t\t\t\tif(strEmail==oForm.document._selected_email_address)\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\tvar oAddress = new Object();\n    \t\t\t\t\t\t\t\t\toAddress.email = app.xmlNodeTextByTag(xmlAddress,\"email\");\n    \t\t\t\t\t\t\t\t\toAddress.name = app.xmlNodeTextByTag(xmlAddress,\"name\");\n    \t\t\t\t\t\t\t\t\toAddress.transport = app.xmlNodeTextByTag(xmlAddress,\"transport\");\n    \t\t\t\t\t\t\t\t\ttargetArray[oAddress.email] = oAddress;\n    \t\t\t\t\t\t\t\t\tbreak;\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n\t\t\t\t\t}\n    \t\t\t}\n    \t\t\telse\n    \t\t\t{\n    \t\t\t\tMessageBox(strInvalidMsg);\n    \t\t\t}   \t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t    \t\t\/\/ Error\n\t    \t\tMessageBox(strInvalidMsg);\n\t\t\t}\n\t\t}\t\t\t\t\n\t}\/\/-- eof for loop\n\n\t\/\/-- change element text to show email names\n    var strTO = \"\";\n    for(strEmail in targetArray)\t\n    {\n    \tif(optRecipDisplayName!=undefined && targetArray[strEmail].name==strEmail)\n    \t{\n    \t\ttargetArray[strEmail].name = optRecipDisplayName;\n    \t}\n    \tstrTO += targetArray[strEmail].name + \"; \";\n    \t_swdoc._arrValidatedAddresses[targetArray[strEmail].name] =  targetArray[strEmail];\n    }\n    \n   \t_eva(targetEle , strTO);   \t\t\n   \t\n   \t\/\/-- 89503 - do not mark merged msgs as modified as cannot modify address for merged mail\n    \/\/if(_swdoc._intMessageCount>0)_swdoc._modify_merge_message(_swdoc._current_merge_message,\"\",mainform._targetframe.WYSIWYG);\t\t\n}"}]}}},"layouts":{"layout":[{"appearance":{"width":"650","height":"496","backgroundColor":"#fffff9","fillColour":"#ffffff","textColour":"#000000","font":{"@size":"8","#text":"Arial"}},"controls":{"control":[{"general":{"name":"tb_to","type":"Field"},"appearance":{"index":"0","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"76","left":"86","right":"643","bottom":"94"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"true","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"borderColor":"#b2b2b2","image":"#eeeeee","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"tb_cc","type":"Field"},"appearance":{"index":"1","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"99","left":"86","right":"643","bottom":"117"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","textLineCount":"0","textInputFormat":"Text","properties":{"borderColor":"#b2b2b2","image":"#eeeeee","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"tb_bcc","type":"Field"},"appearance":{"index":"2","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"122","left":"86","right":"643","bottom":"140"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","textLineCount":"0","textInputFormat":"Text","properties":{"borderColor":"#b2b2b2","image":"#eeeeee","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"tb_subject","type":"Field"},"appearance":{"index":"3","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"145","left":"86","right":"643","bottom":"163"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","textLineCount":"0","textInputFormat":"Text","properties":{"borderColor":"#b2b2b2","image":"#eeeeee","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"lb_attachments","type":"Field"},"appearance":{"index":"4","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"169","left":"86","right":"500","bottom":"187"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Pick List (Numeric Mode)","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","comboAutoUpdate":"false","comboNewValues":"true","useDDPickList":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"borderColor":"#b2b2b2","image":"#eeeeee","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"tb_body","type":"Field"},"appearance":{"index":"5","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"3-D Sunken"},"objectPlacement":{"position":{"top":"196","left":"12","right":"643","bottom":"488"},"scaling":{"top":"0","left":"0","right":"100","bottom":"100"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"true","url":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"borderColor":"#000000","image":"#eeeeee","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"btn_to","type":"EventButton","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"6","caption":"To..","backgroundColor":"#ffffff","foregroundColor":"#808080","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"76","left":"11","right":"79","bottom":"94"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900","eventButtonIcon":"ImageList=Mail Compose Messages;IconIndex=4"}}},{"general":{"name":"btn_cc","type":"EventButton","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"7","caption":"Cc..","backgroundColor":"#ffffff","foregroundColor":"#808080","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"99","left":"11","right":"79","bottom":"117"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900","eventButtonIcon":"ImageList=Mail Compose Messages;IconIndex=4"}}},{"general":{"name":"btn_bcc","type":"EventButton","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"8","caption":"Bcc..","backgroundColor":"#ffffff","foregroundColor":"#808080","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"122","left":"11","right":"79","bottom":"140"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900","eventButtonIcon":"ImageList=Mail Compose Messages;IconIndex=4"}}},{"general":{"name":"Text1","type":"Text","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"9","caption":"Subject","backgroundColor":"#ffffff","foregroundColor":"#808080","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"145","left":"11","right":"79","bottom":"163"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"lb_from","type":"Field"},"appearance":{"index":"10","backgroundColor":"#f8f8f8","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"53","left":"86","right":"643","bottom":"71"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Pick List (Numeric Mode)","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","comboAutoUpdate":"false","comboNewValues":"true","useDDPickList":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"borderColor":"#b2b2b2","image":"#eeeeee","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"Text2","type":"Text","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"11","caption":"From","backgroundColor":"#ffffff","foregroundColor":"#808080","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"53","left":"11","right":"79","bottom":"71"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"r_tbar","type":"Rectange","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"12","backgroundColor":"#f8f8f8","foregroundColor":"#969696","font":{"@size":"0"},"borderStyle":"Rectangle","fillStyle":"Vertical Gradient"},"objectPlacement":{"position":{"top":"0","left":"0","right":"654","bottom":"28"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor2":"#dddddd"}}},{"general":{"name":"btn_send","type":"EventButton","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"13","caption":"Send","backgroundColor":"#ffffff","foregroundColor":"#5f5f5f","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"1","left":"10","right":"68","bottom":"26"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900","eventButtonIcon":"ImageList=Mail Compose Messages;IconIndex=0"}}},{"general":{"name":"btn_attach","type":"EventButton","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"14","caption":"Attach File","backgroundColor":"#ffffff","foregroundColor":"#5f5f5f","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"1","left":"307","right":"392","bottom":"26"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900","eventButtonIcon":"ImageList=Mail Compose Messages;IconIndex=3"}}},{"general":{"name":"btn_high","type":"EventButton","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"15","caption":"Higher Priority","backgroundColor":"#ffffff","foregroundColor":"#5f5f5f","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"1","left":"87","right":"186","bottom":"26"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900","eventButtonIcon":"ImageList=Mail Compose Messages;IconIndex=6"}}},{"general":{"name":"btn_low","type":"EventButton","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"16","caption":"Lower Priority","backgroundColor":"#ffffff","foregroundColor":"#5f5f5f","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"1","left":"195","right":"294","bottom":"26"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900","eventButtonIcon":"ImageList=Mail Compose Messages;IconIndex=7"}}},{"general":{"name":"fl_attachments","type":"FileListTable","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false","showHeader":"true","verticalGridLines":"false","horizontalGridLines":"false","autoLoad":"true","allowMultiSelect":"false"}},"appearance":{"index":"17","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"260","left":"680","right":"878","bottom":"401"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"columns":{"controlInfo":[{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","name":"File Name","width":"160","image":"-1","dataColumn":"0"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","name":"Size","width":"80","image":"-1","dataColumn":"1"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","name":"Last Modified","width":"120","image":"-1","dataColumn":"2"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","name":"Full Local Path","width":"100","image":"-1","dataColumn":"3"}]},"sortColumn":"-1","sortDescending":"false","headerHeight":"18","rowHeight":"16","selectedColor":"#cae1ee","selectedTextColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"true","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","multiLine":"false"},"properties":{"highlightStyle":"1","borderColor":"#d3c9b6"}}},{"general":{"name":"Text3","type":"Text","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"18","caption":"Attachments","backgroundColor":"#ffffff","foregroundColor":"#808080","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"169","left":"11","right":"79","bottom":"187"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"btn_remove_attach","type":"EventButton"},"appearance":{"index":"19","caption":"Remove","backgroundColor":"#ffffff","foregroundColor":"#5f5f5f","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"164","left":"522","right":"579","bottom":"189"},"scaling":{"top":"0","left":"100","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"true","protected":"false","noMacroExpand":"false","multiLine":"false"},"properties":{"backgroundColor":"#ff9900"}}},{"general":{"name":"btn_view","type":"EventButton"},"appearance":{"index":"20","caption":"View","backgroundColor":"#ffffff","foregroundColor":"#5f5f5f","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"164","left":"587","right":"644","bottom":"189"},"scaling":{"top":"0","left":"100","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"true","protected":"false","noMacroExpand":"false","multiLine":"false"},"properties":{"backgroundColor":"#ff9900"}}},{"general":{"name":"lbl_messages","type":"Text","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"21","caption":"Message 1 of 3","backgroundColor":"#ffffff","foregroundColor":"#5f5f5f","font":{"@size":"8","#text":"Arial"},"alignment":"Center","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"2","left":"516","right":"618","bottom":"26"},"scaling":{"top":"0","left":"100","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"true","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","multiLine":"false"}}},{"general":{"name":"btn_prev_msg","type":"EventButton"},"appearance":{"index":"22","caption":"<","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"2","left":"491","right":"513","bottom":"26"},"scaling":{"top":"0","left":"100","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"true","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","multiLine":"false"},"properties":{"backgroundColor":"#ff9900"}}},{"general":{"name":"btn_next_msg","type":"EventButton"},"appearance":{"index":"23","caption":">","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"2","left":"622","right":"644","bottom":"26"},"scaling":{"top":"0","left":"100","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"true","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","multiLine":"false"},"properties":{"backgroundColor":"#ff9900"}}},{"general":{"name":"fl_imageinsert","type":"FileListTable","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false","showHeader":"true","verticalGridLines":"false","horizontalGridLines":"false","autoLoad":"true","allowMultiSelect":"false"}},"appearance":{"index":"24","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"80","left":"680","right":"878","bottom":"221"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"columns":{"controlInfo":[{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","name":"File Name","width":"160","image":"-1","dataColumn":"0"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","name":"Size","width":"80","image":"-1","dataColumn":"1"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","name":"Last Modified","width":"120","image":"-1","dataColumn":"2"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","name":"Full Local Path","width":"100","image":"-1","dataColumn":"3"}]},"sortColumn":"-1","sortDescending":"false","headerHeight":"18","rowHeight":"16","selectedColor":"#cae1ee","selectedTextColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"true","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","multiLine":"false"},"properties":{"highlightStyle":"1","borderColor":"#d3c9b6"}}},{"general":{"name":"mb_format","type":"MenuButton","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"25","caption":"Format","backgroundColor":"#ffffff","foregroundColor":"#5f5f5f","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"1","left":"408","right":"476","bottom":"26"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900","commands":"Plain Text^1|HTML^2|"}}},{"general":{"name":"lbl_notice","type":"Text"},"appearance":{"index":"26","caption":"Priority : Normal","backgroundColor":"#ffffcc","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"Rectangle","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"27","left":"0","right":"654","bottom":"47"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"borderColor":"#b2b2b2"}}},{"general":{"name":"imgbar","type":"Image"},"appearance":{"index":"27","caption":"&[app.webroot]\/webclient\/client\/images\/split-gray.png","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"0"},"alignment":"ExactSize","borderStyle":"None"},"objectPlacement":{"position":{"top":"6","left":"77","right":"79","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backMode":"1"}}},{"general":{"name":"imgbar1","type":"Image"},"appearance":{"index":"28","caption":"&[app.webroot]\/webclient\/client\/images\/split-gray.png","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"0"},"alignment":"ExactSize","borderStyle":"None"},"objectPlacement":{"position":{"top":"6","left":"297","right":"299","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backMode":"1"}}},{"general":{"name":"imgbar2","type":"Image"},"appearance":{"index":"29","caption":"&[app.webroot]\/webclient\/client\/images\/split-gray.png","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"0"},"alignment":"ExactSize","borderStyle":"None"},"objectPlacement":{"position":{"top":"6","left":"397","right":"399","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backMode":"1"}}}]},"javascript":{"methods":{"method":[{"name":"OnFormLoaded","code":"OnFormLoaded(bDataReloaded)\n{\n\tif(app.bWebClient==false) return false;\n\t\n\t\/\/-- 08.02.2011 - create html based text editor\n\tWYSIWYG.SwCreateNow('tb_body',SupportworksSettings);\n\t\n\t_swdoc.SetTitle(\"Untitled - Message\")\n\t_swdoc.emailpriority = 3;\n\n\tlb_from._systemlbmandatory = true;\n\tlb_attachments._systemlbmandatory = true;\n\n\tvar strMailbox = _swdoc.GetArg(\"_mailbox\");\n\n\t\/\/-- determine which email address mail can be sent from\n\tvar strPickListMail = app.global.GetEmailForm_AddressPickList(strMailbox);\n\tif(strPickListMail!=\"\")\t\t\n\t{\n\t\t\/\/-- display html editor or plain text editor\n\t\t_swdoc._use_html_template = (_swdoc._form['_usehtml']==1 || app._UseHtmlEmailFormat == \"1\");\n\t\tif(_swdoc._form['_usehtml']==0)\n\t\t{\n\t\t\t_swdoc._use_html_template = false;\n\t\t}\n\t\tWYSIWYG.SwPlainTextOnlyMode('tb_body',!_swdoc._use_html_template,true);\t\n\t\n\t\t\/\/-- set picklist options\n\t\tvar nFirstEmailAddress = app.global.GetEmailForm_DefaultAddressValue(strMailbox,_swdoc._form['_firstadd']);\n\t\tlb_from.pickList = \tstrPickListMail;\n\t\t\/\/MessageBox(strPickListMail +\":\"+nFirstEmailAddress)\n\t\t_eva(lb_from , nFirstEmailAddress);\n\t\t_evi(btn_attach , app._email_checkright(app._EM_CANATTACH,app.global.GetMailboxNameByPos(nFirstEmailAddress)));\t\n\t}\n\telse\n\t{\n\t\tMessageBox(\"You do not have permission to send email. Please contact your administrator.\");\n\t\t_swdoc.CloseForm();\n\t\treturn false;\n\t}\n\t\n\t\n\t\/\/-- init forms fields for example if we are replying or forwarding then get original message and set up field values\n\tvar strEmailAction = _swdoc.GetArg(\"_emailaction\"); \/\/-- RE:, FW: ,REA: (reply all)\n\tif(strEmailAction==\"\")strEmailAction=\"RE:\";\n\n\tif(strEmailAction==\"NEW:\")\n\t{\n\t\t\/\/-- check if we have attachments to copy\n\t\tvar attachments = _swdoc._form['attachments'];\n\t\tvar saveasattachments = \"\";\n\t\tvar attachmentsFormID = _swdoc._form['attachmentsformid'];\t\n\t\tif(attachments==undefined || attachments==\"\") return;\n\t\t\n\t\tvar arrAtts = attachments.split(\",\");\n\t\tfor(var x=0;x<arrAtts.length;x++)\n\t\t{\n\t\t\tvar saveAsFilename = \"att.\"+ (x+1) + \".\" + arrAtts[x];\n\t\t\tif(saveasattachments!=\"\")saveasattachments += \",\";\n\t\t\tsaveasattachments += saveAsFilename;\n\t\t\t\n\t\t\tvar fo = {};\n\t\t\tfo.origfilename = arrAtts[x];\n\t\t\t_swdoc._email_attachments[saveAsFilename] = fo;;\n\t\t}\n\t\t\t\t\n\t\tvar strURL = app._root + \"service\/form\/copyattachments\/index.php\";\n\t\tvar strParams = \"_filenames=\" + app.pfu(attachments) + \"&_saveasfilenames=\"+app.pfu(saveasattachments)+\"&_uniquefromformid=\" + attachmentsFormID + \"&_uniquetoformid=\" + top._uniqueformid;\n\t\tvar strRes =  app.get_http(strURL, strParams, true, false, null, null);\n\t\t\n\t\tif(strRes!=\"\")\n\t\t{\n\t\t\tvar boolFiles=false;\t\t\t\t\n\t\t\tvar strAttPickList\t= \"\";\n\t\t\tvar intAttPickListValue = 0;\n\t\t\tvar arrFiles = strRes.split(\"||\");\n\t\t\tfor(var x=0;x<arrFiles.length;x++)\n\t\t\t{\n\t\t\t\t\tvar fileInfo = arrFiles[x].split(\"|\");\n\t\t\t\t\tvar filePos = fileInfo[1].split(\".\")[1];\n\t\t\t\t\tvar fileName = fileInfo[0];\n\t\t\t\t\t\n\t\t\t\t\tif(strAttPickList != \"\")strAttPickList += \"|\";\t\n\t\t\t\t\tstrAttPickList += fileName + \"^\" + filePos;\n\t\t\n\t\t\t\t\tif(!boolFiles)intAttPickListValue=filePos;\n\t\t\t\t\tboolFiles=true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\/\/-- if we had files\n\t\t\tif(boolFiles)\n\t\t\t{\n\t\t\t\t\/\/-- add filenames and values to picklist\n\t\t\t\tmainform.lb_attachments.pickList = strAttPickList;\n\t\t\t\t_eva(mainform.lb_attachments , intAttPickListValue);\n\t\t\t}\n\n\t}\n\telse if(strEmailAction==\"CALLMERGE:\") \n\t{\n\t\t_swdoc.bProcessEmailAuditTrail = (app.dd.GetGlobalParamAsNumber(\"Email Audit Trail\/StoreEmailAuditTrail\")==1);\n\t\t\n\t\tWYSIWYG.SwSetHTMLValue(\"tb_body\",_swdoc._load_merge_messages());\n\t\tif(_swdoc._use_html_template)\n\t\t{\n\t\t\t\/\/-- check inline images to make sure they have a swcid\n\t\t\tvar arrImageSrcs = new Array();\n\t\t\tvar arrImages = WYSIWYG.getEditorWindow(\"tb_body\").document.getElementsByTagName(\"img\");\n\t\t\tfor(var i=0;i<arrImages.length;i++)\n \n\t\t\t{\n\t\t\t\tvar swcid = arrImages[i].getAttribute(\"swcid\");\n\t\t\t\tif(swcid==null || swcid==\"\")\n\t\t\t\t{\n\t\t\t\t\tvar strSrc = arrImages[i].getAttribute(\"src\");\n\t\t\t\t\tfor(strCID in _swdoc._email_inline_attachments)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(app.pfu(unescape(strSrc.toLowerCase()))==app.pfu(_swdoc._email_inline_attachments[strCID].wwwpath.toLowerCase()))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tarrImages[i].setAttribute(\"swcid\",strCID);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\t\n\t\treturn;\n\t}\n\t\n\t\/\/-- get email id that we are working with\n\tvar strOriginalEmailID = _swdoc.GetArg(\"_emailid\");\n\t\n\t\/\/-- for testing\n\t\/\/var strOriginalEmailID = 3;\n\t\/\/var strMailbox = \"_helpdesk\";\n\t\n\tvar xmlmc = new XmlMethodCall;\t\n\txmlmc.SetParam(\"mailbox\", strMailbox);\n\txmlmc.SetParam(\"messageId\", strOriginalEmailID);\n\tif(xmlmc.Invoke(\"mail\", \"getMessage\"))\n\t{\n\n\t\t\/\/-- get files\n\t\tvar arrFiles = xmlmc.xmlDOM.getElementsByTagName('fileAttachment'); \n\t\t\/\/-- no longer needed as php copies files for us when we called getMessage\n\t\t\/\/var arrFiles = app._copy_emailattachments_for_form(strOriginalEmailID,strMailbox,top._uniqueformid,xmlmc.xmlDOM);\t\n\t\t\n\t\t\/\/-- if REA: - get to, cc and bcc and from recipient (and set TO, BCC and CC)\n\t\t\/\/-- if RE: just get from (reply to person who sent the original email and set TO)\n\t\t\/\/-- if FW: do not set to field.\n\t\tif(strEmailAction!=\"FW:\")\n\t\t{\n\t\t\t\/\/--\n\t\t\t\/\/-- add any inline content files to _swdoc level mime array\n\t\t\tfor(var x=0;x<arrFiles.length;x++)\n\t\t\t{\n\t\t\t\tvar strFileName = app.xmlNodeTextByTag(arrFiles[x],\"fileName\");\n\t\t\t\tvar strContentId = app.xmlNodeTextByTag(arrFiles[x],\"contentId\");\t\n\t\t\t\tif(strContentId!=\"\")\n\t\t\t\t{\n\t\t\t\t\t\/\/--\n\t\t\t\t\t\/\/-- add any inline content files to _swdoc level mime array\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId] = new Object();\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId].attvalue = x;\t\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId].srcfilename = \"mime.\" + x + \".\"+strFileName;\t\t\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId].origfilename = strFileName;\t\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId].wwwpath = app.xmlNodeTextByTag(arrFiles[x],\"fileSource\");\n \t\t\t\t}\n\t\t\t}\t\t\n\t\t\t\n\t\t\tvar strFrom = \"\";\n\t\t\tvar strTo = \"\";\n\t\t\tvar strCc = \"\";\n\t\t\tvar strBcc = \"\";\n    \t\tvar arrRecipients = xmlmc.xmlDOM.getElementsByTagName(\"mailRecipient\");\n    \t\tfor(var x=0;x<arrRecipients.length;x++)\n    \t\t{\n    \t\t\tvar strType =app.xmlNodeTextByTag(arrRecipients[x],\"class\");\t\n    \t\t\tvar strName =  app.xmlNodeTextByTag(arrRecipients[x],\"address\");\n    \t\t\t\n    \t\t\tif(strType==\"to\")\n    \t\t\t{\n    \t\t\t\tif(strTo!=\"\")strTo +=\"; \";\n    \t\t\t\tstrTo += strName;\n    \t\t\t}\n    \t\t\telse if(strType==\"from\")\n    \t\t\t{\n    \t\t\t\tif(strFrom!=\"\")strFrom +=\"; \";\n    \t\t\t\t\n    \t\t\t\tstrFrom += strName;\n    \t\t\t}\n\t   \t\t\telse if(strType==\"cc\")\n    \t\t\t{\n    \t\t\t\tif(strCc!=\"\")strCc +=\"; \";\n    \t\t\t\tstrCc += strName;\n    \t\t\t}\n    \t\t\telse if(strType==\"bcc\")\n    \t\t\t{\n    \t\t\t\t\/\/if(strBcc!=\"\")strBcc +=\"; \";\n    \t\t\t\t\/\/strBcc += strName;    \t\t\t\n    \t\t\t}\n    \t\t}\n    \t\n\t\t\t\t\t\t\n\t\t\tif(strEmailAction==\"REA:\")\n    \t\t{\n    \t\t\tif(strTo!=\"\")strTo +=\";\" + strFrom;\n\t    \t\t\/\/-- call form events to parse out values\n\t    \t\t_swdoc._use_first_found = true;\n\t    \t\tif(strTo!=\"\") \n\t    \t\t{\n\t    \t\t\t_eva(tb_to , strTo);\n\t    \t\t\ttb_to_OnValueChanged(strTo);\t\n\t    \t\t}\n    \t\t\tif(strCc!=\"\") \n    \t\t\t{\n    \t\t\t\t_eva(tb_cc , strCc);\n    \t\t\t\ttb_cc_OnValueChanged(strCc);\n    \t\t\t}\n    \t\t\tif(strBcc!=\"\")\n    \t\t\t{\n    \t\t\t\t\/\/tb_bcc.value = strBcc;\t\n    \t\t\t\t\/\/tb_bcc_OnValueChanged(strBcc);\n    \t\t\t}\n    \t\t\t_swdoc._use_first_found = false;\t\n    \t\t}\n    \t\telse\n    \t\t{\n    \t\t\t\/\/-- just RE:\n    \t\t\t_swdoc._use_first_found = true;\t\n\t    \t\ttb_to_OnValueChanged(strFrom);\t\n\t    \t\t_swdoc._use_first_found = false;\t\n    \t\t}\n    \t}\n    \telse\n    \t{\n    \t\t\/\/-- copy attachments\n    \t\tvar defaultSelectedItem = 0;\n    \t\tvar strPickList = \"\";\t\t\n    \t\tvar y=0;\n\t\t\tfor(var x=0;x<arrFiles.length;x++)\n\t\t\t{\n\t\t\t\tvar strFileName = app.xmlNodeTextByTag(arrFiles[x],\"fileName\");\n\t\t\t\tvar strContentId = app.xmlNodeTextByTag(arrFiles[x],\"contentId\");\t\n\t\t\t\tif(strContentId!=\"\")\n\t\t\t\t{\n\t\t\t\t\t\/\/--\n\t\t\t\t\t\/\/-- add any inline content files to _swdoc level mime array\n\t\t\t\t\tvar mimeFile =  \"mime.\"+x+\".\"+strFileName;\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId] = new Object()\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId].attvalue = x;\t\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId].srcfilename = mimeFile;\t\t\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId].origfilename = strFileName;\t\n\t\t\t\t\t_swdoc._email_inline_attachments[strContentId].wwwpath = app.xmlNodeTextByTag(arrFiles[x],\"fileSource\");\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar attFile =  \"att.\"+x+\".\"+strFileName;\n\t\t\t\t\t_swdoc._email_attachments[attFile] = new Object();\n\t\t\t\t\t_swdoc._email_attachments[attFile].attvalue = x;\t\n\t\t\t\t\t_swdoc._email_attachments[attFile].srcfilename = attFile;\t\t\t\n\t\t\t\t\t_swdoc._email_attachments[attFile].origfilename = strFileName;\t\n\t\t\t\t\t_swdoc._email_attachments[attFile].wwwpath = app.xmlNodeTextByTag(arrFiles[x],\"fileSource\")\t\n\t\t\t\t\n\t\t\t\t\t\/\/-- construct picklist items\n\t\t\t\t\tif(strPickList!=\"\")strPickList+=\"|\";\n\t\t\t\t\tstrPickList += strFileName + \"^\" + x;\n\t\t\t\t\t\n\t\t\t\t\t\/\/-- default selected file name\n\t\t\t\t\tif(y==0)defaultSelectedItem = x;\n\t\t\t\t\ty++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tmainform.lb_attachments.pickList = strPickList;\n\t\t\t_eva(mainform.lb_attachments , defaultSelectedItem);\n    \t}\n    \t\/\/-- set priority based on original\n\t\t_swdoc.emailpriority = xmlmc.GetParam(\"priority\");\n\t\t    \t\t\n\t\t\/\/-- set from\n\t\n\t\t\/\/-- set subject\n\t\tvar strSubject = xmlmc.GetParam(\"subject\");\t\n\t\tif(strEmailAction==\"REA:\")strEmailAction=\"RE:\"\n\t\t_eva(tb_subject , strEmailAction + strSubject);\n\t\n\t\t\/\/-- set body vars\n\t\tvar strHtmlBody = xmlmc.GetParam(\"htmlBody\");\n\t\tvar strBody = xmlmc.GetParam(\"body\");\n\t\tif(strHtmlBody==\"\")\n\t\t{\n\t\t\tstrHtmlBody = strBody.replace(\/\\n\\r|\\n\/ig, \"<br>\")\n\t\t}\n\t\t\n\t\t\/\/-- fix old webclient emails where end of send email was incorrect\n\t\tstrHtmlBody = strHtmlBody.replace(\"<\/BODY><\/HEAD>\",\"<\/BODY><\/HTML>\");\n\t\n\t\t\n\t\tvar strTimeSent = app.string_replace(xmlmc.GetParam(\"timeSent\"),\"Z\",\"\");\n\t\tvar epochDateSent = app._gmt_epoch(app._parseDate(strTimeSent,\"yyyy-MM-dd HH:mm:ss\"));\n\t\tvar dateSent = app._date_from_epoch(epochDateSent,app._analyst_timezoneoffset);\n\t\tstrTimeSent = app._formatDate(dateSent,\"yyyy-MM-dd HH:mm:ss\"); \n\n\n\t\n\t\tif(_swdoc._use_html_template)\t\n\t\t{\n\t\t\tvar strEmailBody =\"<br><br>-----Original Message-----\";\n\t\t\tstrEmailBody +=\"<br>From: \"+ xmlmc.GetParam(\"senderName\");\n\t\t\tstrEmailBody +=\"<br>Sent: \" + strTimeSent;\n\t\t\tstrEmailBody +=\"<br>To: \" + xmlmc.GetParam(\"recipientName\");\n\t\t\tstrEmailBody +=\"<br>Subject: \" + strSubject;\n\t\t\tstrEmailBody +=\"<br><br>\" + strHtmlBody;\t\t\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar strEmailBody =\"\\n\\n-----Original Message-----\";\n\t\t\tstrEmailBody +=\"\\nFrom: \"+ xmlmc.GetParam(\"senderName\");\n\t\t\tstrEmailBody +=\"\\nSent: \" + strTimeSent;\n\t\t\tstrEmailBody +=\"\\nTo: \" + xmlmc.GetParam(\"recipientName\");\n\t\t\tstrEmailBody +=\"\\nSubject: \" + strSubject;\n\t\t\tstrEmailBody +=\"\\n\\n\" + strBody;\n\t\t}\n\t\t\n\t\tif(_swdoc._use_html_template)\n\t\t{\n\t\t\tWYSIWYG.SwSetHTMLValue(\"tb_body\",strEmailBody);\n\t\t\t_eva(tb_body , WYSIWYG.SwGetTextContent(\"tb_body\"));\n\t\t\t\n\t\t\t\/\/-- check inline images to make sure they have a swcid\n\t\t\tvar arrImageSrcs = new Array();\n\t\t\tvar arrImages = WYSIWYG.getEditorWindow(\"tb_body\").document.getElementsByTagName(\"img\");\n\t\t\tfor(var i=0;i<arrImages.length;i++) \n\t\t\t{\n\t\t\t\tvar swcid = arrImages[i].getAttribute(\"swcid\");\n\t\t\t\tif(swcid==null || swcid==\"\")\n\t\t\t\t{\n\t\t\t\t\tvar strSrc = arrImages[i].getAttribute(\"src\");\n\t\t\t\t\tfor(strCID in _swdoc._email_inline_attachments)\n\t\t\t\t\t{\t\n\t\t\t\t\t\tvar boolMatch = (app.pfu(unescape(strSrc.toLowerCase()))==app.pfu(_swdoc._email_inline_attachments[strCID].wwwpath.toLowerCase()));\n\t\t\t\t\t\tif(boolMatch)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tarrImages[i].setAttribute(\"swcid\",strCID);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\t_eva(tb_body , strEmailBody);\n\t\t\ttb_body.element.focus();\n\t\t}\n\t}\n\t\n\t\n\t\n\t\n}"},{"name":"btn_to_OnPressed","code":"btn_to_OnPressed()\n{\n\t\/\/--\n    var strParam = \"\";\n    var oForm = app._open_system_form(\"_sys_email_namepicker\", \"mail\", \"\", strParam, true, null,null,window);\t\n    if(oForm.document._selected_email_address!=\"\")\n    {\n\t\tvar strValue = app.trim(tb_to.value);\n\t\tif(strValue!=\"\")\n\t\t{\n\t\t\tvar lastChar = strValue.substring(strValue.length-1);\n\t\t\tif(lastChar!=\";\")\n\t\t\t{\n\t\t\t\tstrValue += \"; \";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstrValue += \" \";\n\t\t\t}\n\t\t}\n\n\t\tstrValue += oForm.document._selected_email_name +\";\";\n\n\t\t\/\/-- store in validated array\n\t\tvar oAddress = new Object();\n\t\toAddress.email = oForm.document._selected_email_address;\n    \toAddress.name =oForm.document._selected_email_name;\n    \toAddress.transport = oForm.document._selected_email_transport;\n\t\t_swdoc._arrValidatedAddresses[oForm.document._selected_email_name] =  oAddress;\n\t\t\n\t\t_eva(tb_to , strValue);\n\t\ttb_to_OnValueChanged(strValue);\n\n\t}\n}"},{"name":"btn_cc_OnPressed","code":"btn_cc_OnPressed()\n{\n\t\/\/--\n    var strParam = \"\";\n    var oForm = app._open_system_form(\"_sys_email_namepicker\", \"mail\", \"\", strParam, true, null,null,window);\t\n    if(oForm.document._selected_email_address!=\"\")\n    {\n\t\tvar strValue = app.trim(tb_cc.value);\n\t\tif(strValue!=\"\")\n\t\t{\n\t\t\tvar lastChar = strValue.substring(strValue.length-1);\n\t\t\tif(lastChar!=\";\")\n\t\t\t{\n\t\t\t\tstrValue += \"; \";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstrValue += \" \";\n\t\t\t}\n\n\t\t}\n\t\tstrValue +=oForm.document._selected_email_name +\";\";\n\t\t\n\t\t\/\/-- store in validated array\n\t\tvar oAddress = new Object();\n\t\toAddress.email = oForm.document._selected_email_address;\n    \toAddress.name =oForm.document._selected_email_name;\n    \toAddress.transport = oForm.document._selected_email_transport;\n\t\t_swdoc._arrValidatedAddresses[oForm.document._selected_email_name] =  oAddress;\n\t\t\n\t\t\n\t\t_eva(tb_cc , strValue);\n\t\ttb_cc_OnValueChanged(strValue);\n\t\n\t}\n}"},{"name":"btn_bcc_OnPressed","code":"btn_bcc_OnPressed()\n{\n\t\/\/--\n    var strParam = \"\";\n    var oForm = app._open_system_form(\"_sys_email_namepicker\", \"mail\", \"\", strParam, true, null,null,window);\t\n    if(oForm.document._selected_email_address!=\"\")\n    {\n\t\tvar strValue = app.trim(tb_bcc.value);\n\t\tif(strValue!=\"\")\n\t\t{\n\t\t\tvar lastChar = strValue.substring(strValue.length-1);\n\t\t\tif(lastChar!=\";\")\n\t\t\t{\n\t\t\t\tstrValue += \"; \";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstrValue += \" \";\n\t\t\t}\n\n\t\t}\n\t\tstrValue +=oForm.document._selected_email_name +\";\";\n\n\t\t\/\/-- store in validated array\n\t\tvar oAddress = new Object();\n\t\toAddress.email = oForm.document._selected_email_address;\n    \toAddress.name =oForm.document._selected_email_name;\n    \toAddress.transport = oForm.document._selected_email_transport;\n\t\t_swdoc._arrValidatedAddresses[oForm.document._selected_email_name] =  oAddress;\n\t\t\n\t\t\n\t\t_eva(tb_bcc , strValue);\n\t\ttb_bcc_OnValueChanged(strValue);\n\n\t}\n}"},{"name":"btn_send_OnPressed","code":"btn_send_OnPressed()\n{\n\t\t\n\tif(_swdoc._intMessageCount>1)\n\t{\t\n\t\t_swdoc._send_mail_merge();\n\t\treturn;\n\t}\n\telse if(_swdoc._intMessageCount==1)\n\t{\n\t\t\/\/-- send message normally and delete temp table\n\t\tvar xmlmc = new XmlMethodCall();\t\n\t\txmlmc.SetParam(\"tableName\", _swdoc._form['_mergedtable']);\n\t\txmlmc.Invoke(\"mail\", \"freeMailMergeTable\");\n\n\t\t_swdoc._intMessageCount=0;\n\t\t\n\t\t\/\/-- check to address\n\t\ttb_to_OnValueChanged(tb_to.text);\n\t\tif(tb_to.text==\"\")return;\n\t}\n\n\tvar xmlmc = new XmlMethodCall();\n\tvar strName = app.global.GetMailboxNameByPos(lb_from.value);\n\txmlmc.SetParam(\"mailbox\", strName);\n\t\n\t\/\/-- TO\n\tboolSet = false;\n\tfor(strEmailAddress in _swdoc._array_TO)\n\t{\n\t\tboolSet = true;\n\t\t\/\/-- call new xml method to validate email address\n\t\tvar oAddress = _swdoc._array_TO[strEmailAddress];\n\t\tvar strXML = \"<class>to<\/class>\";\n\t\t    strXML += \"<address>\"+ app.global.PrepareForXML(strEmailAddress)+\"<\/address>\";\t\n\t\t    strXML += \"<name>\"+app.global.PrepareForXML(oAddress.name)+\"<\/name>\"; \n\t\t    strXML += \"<transport>\" + oAddress.transport + \"<\/transport>\"; \n\t\t\n\t\txmlmc.SetParamAsComplexType(\"recipient\", strXML)\t\n\t}\n\n\t\/\/-- ensure we have a to address\n\tif(!boolSet)\n\t{\n\t\tMessageBox(\"Please specify a valid [To] email address before sending.\");\n\t\treturn false;\n\t}\n\n\t\/\/-- CC\n\tfor(strEmailAddress in _swdoc._array_CC)\n\t{\n\t\t\/\/-- call new xml method to validate email address\n\t\tvar oAddress = _swdoc._array_CC[strEmailAddress];\n\t\tvar strXML = \"<class>cc<\/class>\";\n\t\t    strXML += \"<address>\"+ app.global.PrepareForXML(strEmailAddress)+\"<\/address>\";\t\n\t\t    strXML += \"<name>\"+app.global.PrepareForXML(oAddress.name)+\"<\/name>\"; \n\t\t    strXML += \"<transport>\" + oAddress.transport + \"<\/transport>\"; \n\t\t\n\t\txmlmc.SetParamAsComplexType(\"recipient\", strXML)\t\n\t}\n\n\t\/\/-- BCC\n\tfor(strEmailAddress in _swdoc._array_BCC)\n\t{\n\t\t\/\/-- call new xml method to validate email address\n\t\tvar oAddress = _swdoc._array_BCC[strEmailAddress];\n\t\tvar strXML = \"<class>bcc<\/class>\";\n\t\t    strXML += \"<address>\"+ app.global.PrepareForXML(strEmailAddress)+\"<\/address>\";\t\n\t\t    strXML += \"<name>\"+app.global.PrepareForXML(oAddress.name)+\"<\/name>\"; \n\t\t    strXML += \"<transport>\" + oAddress.transport + \"<\/transport>\"; \n\t\t\n\t\txmlmc.SetParamAsComplexType(\"recipient\", strXML)\t\n\t}\t\n\t\/\/-- subject \/ priority and body\n\txmlmc.SetParam(\"subject\", tb_subject.text);\n\txmlmc.SetParam(\"priority\", _swdoc.emailpriority);\n\n\txmlmc.SetParam(\"body\", tb_body.text);\t\t\n\tif(_swdoc._use_html_template)xmlmc.SetParam(\"htmlBody\", WYSIWYG.SwGetHtmlContent('tb_body'));\t\t\n\t\n\t\/\/-- normal file attachments\n\tfor(strFileName in _swdoc._email_attachments)\n\t{\n\t\tvar strListFile = _swdoc._email_attachments[strFileName].origfilename\n\t\tvar strFileXML = \"<fileName>\" + app.global.PrepareForXML(strListFile) + \"<\/fileName><wcFileSrcName>\" + app.global.PrepareForXML(strFileName) + \"<\/wcFileSrcName>\";\n\t\txmlmc.SetParamAsComplexType(\"fileAttachment\", strFileXML);\n\t}\n\t\n\t\/\/-- inline content file attachments (inline images)\n\tfor(strCID in _swdoc._email_inline_attachments)\n\t{\n\t\tvar strListFile = _swdoc._email_inline_attachments[strCID].origfilename\n\t\tvar strSrcFile = _swdoc._email_inline_attachments[strCID].srcfilename;\t\n\t\tvar strFileXML = \"<fileName>\" + app.global.PrepareForXML(strListFile) + \"<\/fileName><wcFileSrcName>\" + app.global.PrepareForXML(strSrcFile) + \"<\/wcFileSrcName>\";\n\t\t\tstrFileXML += \"<contentId>\" + app.global.PrepareForXML(strCID) + \"<\/contentId>\";\t\t\n\t\txmlmc.SetParamAsComplexType(\"fileAttachment\", strFileXML);\n\t}\n\t\n\t\/\/-- determine if using sendMessage or bulk message - have to handle multiple messages (??)\t\n\tif(xmlmc.Invoke(\"mail\", \"sendMessage\"))\n\t{\n\t\t_swdoc.attachMessageToCallProcess(xmlmc);\t\n\t\t_swdoc.CloseForm();\n\t}\n\telse\n\t{\n\t\tMessageBox(\"There was a problem sending this email. Please contact your Administator.\");\n\t}\n\t\n}"},{"name":"btn_attach_OnPressed","code":"btn_attach_OnPressed()\n{\n\t\n\tvar strPrefixFileWith = \"att.\"+ app.global.GetCurrentEpocTime() + \".\";\n\tfl_attachments.AddFiles(\"mail\",strPrefixFileWith);\n\n}"},{"name":"btn_high_OnPressed","code":"btn_high_OnPressed()\n{\n\t\/\/-- 1 = highest\n\tvar arrPriorities = new Array(\"\",\"Highest\",\"High\",\"Normal\",\"Low\",\"Lowest\");\n\tif(_swdoc.emailpriority>1)\n\t{\n\t\t_swdoc.emailpriority--;\n\t\t_ete(lbl_notice , \"Priority : \" + arrPriorities[_swdoc.emailpriority]);\n\t}\n\n}"},{"name":"btn_low_OnPressed","code":"btn_low_OnPressed()\n{\n\t\/\/-- 5 = lowest\n\tvar arrPriorities = new Array(\"\",\"Highest\",\"High\",\"Normal\",\"Low\",\"Lowest\");\t\n\tif(_swdoc.emailpriority<5)\n\t{\n\t\t_swdoc.emailpriority++;\n\t\t_ete(lbl_notice , \"Priority : \" + arrPriorities[_swdoc.emailpriority]);\t\n\t}\n\n\n}"},{"name":"lb_attachments_OnValueChanged","code":"lb_attachments_OnValueChanged(strValue)\n{\n\tif(strValue!=\"\")\n\t{\n\t\t_een(btn_remove_attach , true);\n\t\t_een(btn_view , true);\n\t}\n\telse\n\t{\n\t\t_een(btn_remove_attach , false);\n\t\t_een(btn_view , false);\n\t}\n\n}"},{"name":"btn_remove_attach_OnPressed","code":"btn_remove_attach_OnPressed()\n{\n\t\/\/-- remove selected file from email\n\tif(!confirm(\"Are you sure you want to remove the selected attachment?\")) return;\n\t\n\t\/\/-- construct file name;\n\tvar intFilePos = lb_attachments.value;\n\tvar strFileName = lb_attachments.display;\n\tvar strDeleteFile = \"att.\"+ intFilePos +\".\"+ strFileName\n\t\t\n\t\/\/-- delete and then refresh\n\tfl_attachments.DeleteFile(-1,false,strDeleteFile);\n\tfl_attachments.Refresh();\n\n\t\/\/-- recreate picklist\n\tvar strOrigPickList = lb_attachments.pickList;\n\tvar srchString = strFileName + \"^\" + intFilePos;\n\tstrOrigPickList = strOrigPickList.replace(\"|\"+srchString, \"\");\n\tstrOrigPickList = strOrigPickList.replace(srchString, \"\");\n\tlb_attachments.pickList = strOrigPickList;\n\n\t\/\/-- recreate email atts array\n\tvar intDefaultItem = 0;\n\tvar tmpArray = new Array();\n\tfor(strFileName in _swdoc._email_attachments)\n\t{\n\t\tif(strFileName!=strDeleteFile)\n\t\t{\n\t\t\tintDefaultItem = _swdoc._email_attachments[strFileName].attvalue;\n\t\t\ttmpArray[strFileName] = _swdoc._email_attachments[strFileName];\n\t\t}\t\t\n\t}\t\n\t_swdoc._email_attachments = tmpArray;\n\t_eva(lb_attachments,intDefaultItem);\n\t\n\tif(intDefaultItem==0)\n\t{\n\t\t_een(btn_remove_attach,false);\n\t\t_een(btn_view,false);\t\n\t}\n\t\n}"},{"name":"tb_to_OnValueChanged","code":"tb_to_OnValueChanged(strValue)\n{\n\n\t\/\/-- check if address values are valid...use xmlmc to check against address book\n\t_swdoc._array_TO = new Array();\t\n\tif(strValue==\"\")return;\n\n\t_swdoc.resolve_email_addresschange(strValue, tb_to, _swdoc._array_TO);\n\t\t\n}"},{"name":"tb_cc_OnValueChanged","code":"tb_cc_OnValueChanged(strValue)\n{\n\n\t\/\/-- check if address values are valid...use xmlmc to check against address book\n\t_swdoc._array_CC = new Array();\t\n\tif(strValue==\"\")return;\n\t\n\t_swdoc.resolve_email_addresschange(strValue, tb_cc, _swdoc._array_CC);\t\n\t\n\n\t\t\n}"},{"name":"tb_bcc_OnValueChanged","code":"tb_bcc_OnValueChanged(strValue)\n{\n\n\t\/\/-- check if address values are valid...use xmlmc to check against address book\n\t_swdoc._array_BCC = new Array();\t\n\tif(strValue==\"\")return;\n\t_swdoc.resolve_email_addresschange(strValue, tb_bcc, _swdoc._array_BCC);\t\t\n\n\n\t\t\n}"},{"name":"tb_subject_OnValueChanged","code":"tb_subject_OnValueChanged(strValue)\n{\n\tif(strValue==\"\")strValue=\"Untitled\";\n\t_swdoc.SetTitle(strValue + \" - Message\");\n\t\n\tif(_swdoc._intMessageCount>0)_swdoc._modify_merge_message(_swdoc._current_merge_message,\"\",WYSIWYG);\n\n}"},{"name":"lb_from_OnValueChanged","code":"lb_from_OnValueChanged(strValue)\n{\n\tif(strValue>999) strValue = strValue - 1000;\n\t\n\tvar strName = app.global.GetMailboxNameByPos(strValue);\n\t_evi(btn_attach , app._email_checkright(app._EM_CANATTACH,strName));\n}"},{"name":"btn_view_OnPressed","code":"btn_view_OnPressed()\n{\n\t\/\/-- find file and delete;\n\tvar intFilePos = lb_attachments.value;\n\tvar strFileName = lb_attachments.display;\n\tvar strViewFile = \"att.\"+ intFilePos +\".\"+ strFileName\n\tif(_swdoc._email_attachments[strViewFile])\n\t{\n\t\tvar origFileName = _swdoc._email_attachments[strViewFile].origfilename;\n\t}\n\telse\n\t{\n\t\tvar origFileName = strFileName;\n\t}\n\t\n\tfl_attachments.OpenFile(-1,true,strViewFile,origFileName);\n}"},{"name":"btn_next_msg_OnPressed","code":"btn_next_msg_OnPressed()\n{\n\n\t_een(mainform.btn_prev_msg , true);\n\tif(_swdoc._current_merge_message==(_swdoc._intMessageCount-2))_een(mainform.btn_next_msg,false);\n\n\t\/\/-- store current message html body before moving on\n\tif(_swdoc._use_html_template)\n\t{\n\t\t_swdoc.currentHTMLContent = WYSIWYG.getEditorWindow('tb_body').document.body.innerHTML;\n\t\t_eva(tb_body , WYSIWYG.SwGetTextContent('tb_body'));\n\t}\n\t\n\t\/\/_swdoc._modify_merge_message(_swdoc._current_merge_message,WYSIWYG.SwGetHtmlContent('tb_body'));\n\t\n\tif(_swdoc._use_html_template)\t\n\t{\n\t\tWYSIWYG.SwSetHTMLValue(\"tb_body\",_swdoc._load_merge_message(_swdoc._current_merge_message + 1));\n\t\t\n\t\t\/\/-- check inline images to make sure they have a swcid\n\t\tvar arrImageSrcs = new Array();\n\t\tvar arrImages = WYSIWYG.getEditorWindow(\"tb_body\").document.getElementsByTagName(\"img\");\n\t\tfor(var i=0;i<arrImages.length;i++) \n\t\t{\n\t\t\tvar swcid = arrImages[i].getAttribute(\"swcid\");\n\t\t\tif(swcid==null || swcid==\"\")\n\t\t\t{\n\t\t\t\tvar strSrc = arrImages[i].getAttribute(\"src\");\n\t\t\t\tfor(strCID in _swdoc._email_inline_attachments)\n\t\t\t\t{\n\t\t\t\t\tif(app.pfu(strSrc.toLowerCase())==app.pfu(_swdoc._email_inline_attachments[strCID].wwwpath.toLowerCase()))\n\t\t\t\t\t{\n\t\t\t\t\t\tarrImages[i].setAttribute(\"swcid\",strCID);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t}\n\telse\n\t{\n\t\t_swdoc._load_merge_message(_swdoc._current_merge_message + 1);\t\n\t}\n\t\t\n}"},{"name":"btn_prev_msg_OnPressed","code":"btn_prev_msg_OnPressed()\n{\n\t_een(mainform.btn_next_msg , true);\n\tif(_swdoc._current_merge_message==1)_een(mainform.btn_prev_msg , false);\n\n\n\t\/\/-- store current message html body before moving on\n\tif(_swdoc._use_html_template)\n\t{\n\t\t_swdoc.currentHTMLContent = WYSIWYG.getEditorWindow('tb_body').document.body.innerHTML;\n\t\t_eva(tb_body , WYSIWYG.SwGetTextContent('tb_body'));\n\t}\n\t\n\t\/\/_swdoc._modify_merge_message(_swdoc._current_merge_message);\n\t\n\tif(_swdoc._use_html_template)\t\n\t{\n\t\tWYSIWYG.SwSetHTMLValue(\"tb_body\",_swdoc._load_merge_message(_swdoc._current_merge_message - 1));\n\t\t\n\t\t\/\/-- check inline images to make sure they have a swcid\n\t\tvar arrImageSrcs = new Array();\n\t\tvar arrImages = WYSIWYG.getEditorWindow(\"tb_body\").document.getElementsByTagName(\"img\");\n\t\tfor(var i=0;i<arrImages.length;i++) \n\t\t{\n\t\t\tvar swcid = arrImages[i].getAttribute(\"swcid\");\n\t\t\tif(swcid==null || swcid==\"\")\n\t\t\t{\n\t\t\t\tvar strSrc = arrImages[i].getAttribute(\"src\");\n\t\t\t\tfor(strCID in _swdoc._email_inline_attachments)\n\t\t\t\t{\n\t\t\t\t\tif(app.pfu(strSrc.toLowerCase())==app.pfu(_swdoc._email_inline_attachments[strCID].wwwpath.toLowerCase()))\n\t\t\t\t\t{\n\t\t\t\t\t\tarrImages[i].setAttribute(\"swcid\",strCID);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t_swdoc._load_merge_message(_swdoc._current_merge_message - 1);\t\n\t}\n\n}"},{"name":"tb_body_OnValueChanged","code":"tb_body_OnValueChanged(strValue)\n{\n\tif(_swdoc._intMessageCount>0) \n\t{\n\t\t_swdoc._modify_merge_message(_swdoc._current_merge_message,\"\",WYSIWYG);\n\t}\n}"},{"name":"mb_format_OnMenuItem","code":"mb_format_OnMenuItem(strName, nItemID)\n{\n\tvar strBody = \"\";\n\tif(nItemID==1)\n\t{\n\t\tapp._UseHtmlEmailFormat = \"\";\n\t\t_swdoc._use_html_template = false;\n\t\tWYSIWYG.SwPlainTextOnlyMode('tb_body',true);\t\n\t}\n\telse\n\t{\n\t\tapp._UseHtmlEmailFormat = \"1\";\t\n\t\t_swdoc._use_html_template = true;\t\n\t\tWYSIWYG.SwPlainTextOnlyMode('tb_body',false);\n\t}\n\t\n}"},{"name":"OnTimer","code":"OnTimer(nTimer)\n{\n\t\/\/ TODO: Add your event handler code here\n\t_form.KillTimer(nTimer);\n\tif(nTimer==1)\n\t{\n\t\t_swdoc.resolve_email_addresschange(_swdoc._resolveaddress_value,_swdoc._resolveaddress_ele,_swdoc._resolveaddress_array,true,_swdoc._resolveaddress_name);\n\t}\n\t\n}"}]}}},{"appearance":{"width":"360","height":"220","backgroundColor":"#ffffff","fillColour":"#ffffff","textColour":"#000000","font":{"@size":"8","#text":"Arial"}},"javascript":{}}]}}}