{"espForm":{"configuration":{"settings":{"name":"_wc_acceptcall","title":"Accept Options","description":"popup for for basic accept call","options":{"allowResize":"true","showMenubar":"false","showToolbar":"false","showStatusBar":"false"}},"javascript":{"methods":{"method":{"name":"(Globals)","code":"var _refresh = false;\nvar dtCurrentTime = null;\nvar _bChangedDate = false;"}}}},"layouts":{"layout":[{"appearance":{"width":"181","height":"141","backgroundColor":"#eaeaea","fillColour":"#ffffff","textColour":"#000000","font":{"@size":"8","#text":"Arial"}},"controls":{"control":[{"general":{"name":"btn_ar","type":"EventButton"},"appearance":{"index":"0","caption":"Accept and Respond","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"51","left":"16","right":"167","bottom":"76"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900"}}},{"general":{"name":"btn_a","type":"EventButton"},"appearance":{"index":"1","caption":"Accept","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"79","left":"16","right":"167","bottom":"104"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900"}}},{"general":{"name":"btn_cancel","type":"EventButton"},"appearance":{"index":"2","caption":"Cancel","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"107","left":"16","right":"167","bottom":"132"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor":"#ff9900"}}},{"general":{"name":"tb_date","type":"Field"},"appearance":{"index":"3","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"26","left":"16","right":"167","bottom":"44"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Date\/Time Control","textLineCount":"0","textInputFormat":"Text","properties":{"borderColor":"#000000","image":"#eeeeee","disabledBackgroundColor":"#eeeeee","dateFormatMode":"3","dateFormat":"yyyy-MM-dd hh:mm:ss"}}},{"general":{"name":"Text1","type":"Text","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"4","caption":"Accept Date \/ Time","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"6","left":"12","right":"165","bottom":"22"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default"}}]},"javascript":{"methods":{"method":[{"name":"btn_cancel_OnPressed","code":"btn_cancel_OnPressed()\n{\n\t_swdoc._refresh = false;\n\t_swdoc.CloseForm();\n\t\n\n\n}"},{"name":"btn_a_OnPressed","code":"btn_a_OnPressed()\n{\n\t\/\/-- accept only\n\tvar xmlmc = new XmlMethodCall();\n\tvar arrCallrefs = _swdoc.GetArg(\"_callrefs\").split(\",\");\n\tfor(var x=0;x<arrCallrefs.length;x++)\n\t{\n\t\txmlmc.SetValue(\"callref\",arrCallrefs[x]);\n\t}\n\n\t\n\t\/\/var UTCDATE = app._utcdate_from_epoch(tb_date.value);\n\t\/\/var strDateTime = app._formatDate(UTCDATE,\"yyyy-MM-dd HH:mm:ss\");\n\t\t\n\txmlmc.SetValue(\"markAsSLAResponse\",false);\n\tif(_swdoc._bChangedDate)xmlmc.SetValue(\"timeOfAction\", tb_date.display);\n\t\n\tif(xmlmc.Invoke(\"helpdesk\",\"acceptCalls\"))\n\t{\n\t\n\t\t_swdoc._refresh = true;\n\t\t_swdoc.CloseForm();\t\n\n\t}\n\telse\n\t{\n\t\tMessageBox(xmlmc.GetLastError())\n\t}\n\n}"},{"name":"btn_ar_OnPressed","code":"btn_ar_OnPressed()\n{\n\t\/\/-- accept only\n\tvar xmlmc = new XmlMethodCall();\n\tvar arrCallrefs = _swdoc.GetArg(\"_callrefs\").split(\",\");\n\tfor(var x=0;x<arrCallrefs.length;x++)\n\t{\n\t\txmlmc.SetValue(\"callref\",arrCallrefs[x]);\n\t}\n\t\n\t\n\t\/\/var UTCDATE = app._parseDate(tb_date.display,\"yyyy-MM-dd HH:mm:ss\");\n\t\/\/var strDateTime = app._formatDate(UTCDATE,\"yyyy-MM-dd HH:mm:ss\");\n\t\t\n\txmlmc.SetValue(\"markAsSLAResponse\",true);\n\tif(_swdoc._bChangedDate)xmlmc.SetValue(\"timeOfAction\", tb_date.display);\n\t\n\tif(xmlmc.Invoke(\"helpdesk\",\"acceptCalls\"))\n\t{\n\t\n\t\t_swdoc._refresh = true;\n\t\t_swdoc.CloseForm();\t\n\n\t}\n\telse\n\t{\n\t\tMessageBox(xmlmc.GetLastError())\n\t}\n\n}"},{"name":"tb_date_OnValueChanged","code":"tb_date_OnValueChanged(strValue)\n{\n\t\/\/ Find out what time the date\/time is being changed.  This number will be used to make sure that the analyst is\n\t\/\/ not trying to change the update to a time in the future.\n\t\/\/ The time the form was opened will be checked against the user's maximum backdate period\n\t\/\/ to make sure that they are not trying to backdate this update too far.  The reason for this is that the analyst\n\t\/\/ may ostensibly backdate from the max period before the form was opened, but for checking times in the future,\n\t\/\/ this would error if they spend any time editing the form.  \n\t\n\t\/\/-- Get the backdate period that the analyst is trying to backdate to\n\tvar dtBackdatePeriod = _swdoc.dtCurrentTime.getTime() - (tb_date.value * 1000);\n\t\n\t\n\t\/\/-- GetMaxiumumBackdatePeriodAllowed is stored in seconds.  Convert to milliseconds to obtain actual maximum backdate time.\t\n\tvar dtMaxBDTime = new Date();\n\tdtMaxBDTime.setTime(_swdoc.dtCurrentTime.getTime() - (app.session.GetMaxBackdatePeriodAllowed() * 1000));\n\t\n\n\t\/\/-- ensure that the backdate time entered is not in the future\n\tif(tb_date.value > app.global.GetCurrentEpocTime())\n\t{\n\t\tvar message = \"Forwarding call updates is not permitted.\";\n\t\tMessageBox(message, MB_ICONEXCLAMATION | MB_OK);\n\t\t_swdoc._bChangedDate = false;\t\n\t\t_eva(tb_date , _swdoc.dtCurrentTime.getTime() \/ 1000);\n\t\treturn;\n\t}\n\n\t\/\/ ensure that the backdate period does not exceed the analyst's rights\n\tif((dtBackdatePeriod\/1000) > app.session.GetMaxBackdatePeriodAllowed())\n\t{\n\t\tvar message = \"The earliest time to which you can backdate calls is \"+dtMaxBDTime.toLocaleString()+\".\\n\\nDo you want to use this time and date?\";\n\t\tif(MessageBox(message, MB_ICONQUESTION | MB_YESNO) == 6)\n\t\t{\n\t\t\t_swdoc._bChangedDate = true;\n\t\t\t\/\/ 6 = YES\n\t\t\t_eva(tb_date , dtMaxBDTime.getTime()\/1000);\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\t_swdoc._bChangedDate = false;\t\n\t\t\t_eva(tb_date , _swdoc.dtCurrentTime.getTime() \/ 1000);\n\t\t}\n\t}\n\t\n\t\/\/-- make sure that the backdate time is not prior to the last previous update time for any of the calls being updated\n\tvar SqlRecordSetObj = new SqlQuery;\n\tSqlRecordSetObj.Query(\"SELECT max(updatetimex) AS dtthemaxtime FROM updatedb WHERE callref IN (\" + _swdoc.GetArg(\"_callrefs\") + \")\", \"sw_systemdb\");\n\tif(SqlRecordSetObj.Fetch())\n\t{\n\t\tvar dtLastUpdate = new Date();\n\t\tdtLastUpdate.setTime(SqlRecordSetObj.GetValueAsNumber(0));\n\t\t\n\t\tif(dtLastUpdate > (tb_date.value * 1000))\n\t\t{\n\t\t\tvar message = \"You have chosen to backdate this action \\nto a time before than the last action was carried out against one of the selected calls. This is not allowed!\\n\\n\\nThe last action was carried out on \";\n\t\t\tMessageBox(message + dtLastUpdate.toLocaleString(), MB_ICONQUESTION | MB_OK);\t\t\n\t\t\t_eva(tb_date , _swdoc.dtCurrentTime.getTime() \/ 1000);\t\n\t\t\t_swdoc._bChangedDate = false;\t\t\n\t\t\treturn;\n\t\t}\n\t}\n\t_swdoc._bChangedDate = true;\t\n\t\n}"},{"name":"OnFormLoaded","code":"OnFormLoaded(bDataReloaded)\n{\n\t_swdoc.dtCurrentTime = new Date();\n\t_eva(mainform.tb_date , _swdoc.dtCurrentTime.getTime() \/ 1000);\n}"}]}}},{"appearance":{"width":"360","height":"220","backgroundColor":"#ffffff","fillColour":"#ffffff","textColour":"#000000","font":{"@size":"8","#text":"Arial"}},"javascript":{}}]}}}