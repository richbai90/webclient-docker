<?xml version="1.0" encoding="utf-8" ?>
<espForm>
	<configuration>
		<settings>
			<name>EfLogResolveCloseCallForm</name>
			<title>Resolve Close Call Form</title>
			<printTemplates>
			</printTemplates>
			<options>
				<allowResize>true</allowResize>
				<showMenubar>true</showMenubar>
				<showToolbar>false</showToolbar>
				<showStatusBar>false</showStatusBar>
			</options>
		</settings>
		<tables>
			<table>
				<name>updatedb</name>
				<type>Main Details Table</type>
				<flags>5</flags>
				<assignments>
				</assignments>
			</table>
			<table>
				<name>opencall</name>
				<type>Extended Details Table</type>
				<mainDetailsColumn>callref</mainDetailsColumn>
				<flags>0</flags>
				<assignments>
				</assignments>
			</table>
		</tables>
		<showMeItems>
		</showMeItems>
		<javascript>
			<methods>
				<method>
					<name>OnAdviseActionCompleted</name>
					<code>
						<![CDATA[OnAdviseActionCompleted(nAction, stActionResultValues)
{
	var res = new String(stActionResultValues);
	var ar = res.split("&");
	if(nAction == LOG_CALL_ACTION)
	{
		var i=0; 
		for( ; i< ar.length; i++)
		{
			var pos = ar[i].indexOf("callref=");
			if(pos != -1)
			{
				var arCallref = ar[i].split("=");
				var strLogCallRef = arCallref[1];
				mainform.ResolveClose(strLogCallRef,function(boolSuccess)
				{
					if(boolSuccess) 
					{
						//mainform.onformloaded();
						return true;
					}	
					else
					{
						if (confirm("There was a problem resolving the call you just logged. Would you like to view the call details?"))
						{
							app.global.OpenCallDetailsView(strLogCallRef);
							return true;						
						}
					}
				});
			}
			else
			{
				return false;
			}
		}
	}
	else
	{
		return false;	
	}
}]]>
					</code>
				</method>
				<method>
					<name>(User Defined Functions)</name>
					<code>
						<![CDATA[var boolLogMode = false; //-- boolean - is the form being displayed in a logcall forn
var boolClosing = false; //-- boolean - is the call action to close calls/s (if false resolving)
var arrSurveyNameSurvIDs = new Array(); //-- array - holds list of survey ids 
var arrCallStatuss 		 = new Array(); //-- array - holds list of the all the calls status
var arrCallOpenTasks 	 = new Array(); //-- araray - holds list of all the calls tasks
var boolFormFieldChanged = false;	//-- boolean - set to true when formfield is changed. Used when closing form
var boolSourceEmail = false; //-- from opened from email
var boolHaveSubject = false; //-- Is there a subject
var boolHaveSurveys = false; //-- are there surveys available
var nBackdatePeriod = 0;

var boolIsQuickLogCall = false;
var boolSetToMaxBackdatePeriod = false;
var intGetCurrentEpocTime = app.global.GetCurrentEpocTime();

//-- reset bound record so we dont get messages when leaving
function resetData()
{
	_swdoc.ResetModiedFlag("updatedb");
	_swdoc.ResetModiedFlag("opencall");
}

//-- validate form data that user has set
function ValidateForm()
{
	if((_swdoc.updatedb.timespent < 1 || _swdoc.updatedb.timespent > 60000) && (mainform.tb_timespent.mandatory))
	{
		MessageBox("You must enter the amount of time you spent on this action", MB_OK);
		return false;	// Make sure that the time spent is within range
	}

	if((_swdoc.updatedb.updatetxt == "") && (mainform.tb_updatetext.text==""))
	{
		MessageBox("You must enter a description in the Action Description tab.", MB_OK | MB_ICONINFORMATION );
		return false;	// Make sure we have some update text
	}

	//-- check other required fields
	if (!_swdoc.check_mandatory_fields("updatedb",mainform))return false;		
	if (!_swdoc.check_mandatory_fields("opencall",mainform))return false;
	
	//-- check profile levels
	if(!mainform.check_profile_levels()) return false;
	
	return TRUE;
}


//-- 08.02.2007 - NWJ - Check mandatory fields on the form for a given table
//--					alert user if need be and return false						
function check_mandatory_fields(strTable,oForm)
{
    for (var x = 0; x<oForm.elements.length;x++)
    {
        var element = oForm.elements[x];
        
        if ((element.mandatory) && (element.text ==""))
        {
            var colName = "";
            var fieldName = "(not specified)";
            if(element.dataRef!="")
            {
            	var arrInfo = element.dataRef.split(".");
            	var strTable = arrInfo[0];
            	var colName = arrInfo[1];
            	var fieldName = dd.tables[strTable].columns[colName.toLowerCase()].DisplayName;
            }
        	MessageBox("The field '" + fieldName + "' is a mandatory field and must be completed.");
            return false;
        }
    }
    return true;
}


function setup_form_mode()
{
	//-- always make sure fixcode desc is disabled
	app._een(mainform.tb_fixcodedescription,false);
			
	var bResolveByDefault = app.session.IsDefaultOption(ANALYST_DEFAULT_RESOLVEBYDEFAULT);			
	//-- if user does not have the right to close calls then only allow resolve
	if(!app.session.HaveRight(ANALYST_RIGHT_A_GROUP,ANALYST_RIGHT_A_CANCLOSECALLS))
	{
		app._een(mainform.cb_callaction,false);
		bResolveByDefault = true;
	}

	//-- do they have option to resolve
	if(!app.session.HaveRight(ANALYST_RIGHT_A_GROUP,ANALYST_RIGHT_A_CANRESOLVECALLS))
	{
		app._een(mainform.cb_callaction,false);
		bResolveByDefault = false;
	}
	
	//-- set the default selection for the call action pick list based on the DD entry 
	if(bResolveByDefault)
	{
		if(_swdoc.boolIsQuickLogCall==false)
		{
			app._ete(mainform.cb_callaction , "Resolve Call");
		}
	}
	else
	{
		app._ete(mainform.cb_callaction , "Close Call");
		
		//-- sandra 30-07-2007 -- Bug 58558 set to close if ResolveByDefault is switched off. 
		_swdoc.boolClosing = true;
	}		

	//-- we are in a quicklog
	if(_swdoc.boolIsQuickLogCall!=false)
	{
		//-- quick log states close call
		if(mainform.cb_callaction.text == "Close Call")
		{
			_swdoc.boolClosing = true;
		}
	}
	
	//--
	//-- disable / enable form fields
	app._een(mainform.dt_actiontime , (app.session.CanBackdateCallActions())); //-- can backdate ?
	app._een(mainform.btnGetProfileText , false);			
	app._een(mainform.btnBrowseProfile,true);

	//-- setup various flags	
	_swdoc.setup_charge_flag(true);
	_swdoc.setup_kbase_flag();	
	_swdoc.setup_email_flag();
	_swdoc.setup_public_flag();
	_swdoc.setup_survey_options();

	//-- if we have a fixcode - see if we need to enable text button
	app._een(mainform.btnGetProfileText , false);
	if(_swdoc.opencall.fixcode!="")
	{
		//-- nwj if it has a dec text enable button to copy
		var currentResProfileDesc = app.global.GetResolutionProfileDescription(_swdoc.opencall.fixcode);	
		app._een(mainform.btnGetProfileText,(currentResProfileDesc.strDescription!=""));
	}
}


//-- 08.02.2007 - NWJ - One function to handle which standard check boxes should be enabled/disabled
//--					checked or unchecked, as old code fglas were set all over the place
function setup_public_flag()
{
	app._een(mainform.flg_updatepublic,true);
	if(_swdoc.boolIsQuickLogCall==false)
	{
		app._ete(mainform.flg_updatepublic , app.session.IsDefaultOption(ANALYST_DEFAULT_CLOSEPRIVATE) ? "1":"0");
	}
}

function setup_kbase_flag()
{
	//-- does the user have the right to add to the kbase or we are worknig with multiple calls so dont add
	if(!app.session.HaveRight(ANALYST_RIGHT_C_GROUP,ANALYST_RIGHT_C_CANADDTOKNOWLEDGEBASE))
	{
		app._ete(mainform.flg_addKBase 	, "0");
		app._een(mainform.flg_addKBase , false);
	}
	else
	{
		if(_swdoc.boolIsQuickLogCall==false)
		{
        	app._ete(mainform.flg_addKBase , app.session.IsDefaultOption(ANALYST_DEFAULT_CLOSEKNOWLEDGEBASE) ? "1":"0");
        }
        app._een(mainform.flg_addKBase,true);	
	}
}

function setup_charge_flag(boolOnload)
{
	if (_swdoc.boolClosing)
	{
		//-- if not a quicklog call then set default
		app._een(mainform.flg_chargeable,true);
		if((_swdoc.boolIsQuickLogCall==false)||(boolOnload==false))
		{
			app._ete(mainform.flg_chargeable , app.session.IsDefaultOption(ANALYST_DEFAULT_CLOSECHARGABLE) ? "1":"0");		
		}
	}
	else
	{
		//-- resolving
		app._een(mainform.flg_chargeable,false);
		app._ete(mainform.flg_chargeable,0);		
	}
}

function setup_email_flag()
{
	//--
	//-- if we have a mailserver and can send mail set flg
	if(app.global.IsConnectedToMailServer() && app.global.CanSendMail())
	{
		//-- if not a quicklog call then set default
		if(_swdoc.boolIsQuickLogCall==false)
		{
			app._een(mainform.flg_emailcustomer , true);
			app._ete(mainform.flg_emailcustomer , (app.session.IsDefaultOption(ANALYST_DEFAULT_CLOSESENDEMAIL)) ? "1":"0");
		}
	}
	else
	{
		app._een(mainform.flg_emailcustomer , false);
		app._ete(mainform.flg_emailcustomer , "0");
	}
}

//--
//-- initialise the surveys options
function setup_survey_options()
{
	//-- if they do not have surveys hide options
	if(!app.global.IsSurveyModuleEnabled())
	{
		app._ete(mainform.flg_customersurvey , "0");	
		app._evi(mainform.flg_customersurvey , false);
		app._evi(mainform.cb_surveys , false);
	}
	else
	{
		//-- get survey options
		_swdoc.load_survey_list();	

		//-- if we dont have surveys on the system then hide
		if(!_swdoc.boolHaveSurveys)	
		{
			app._ete(mainform.flg_customersurvey , "0");	
			app._een(mainform.flg_customersurvey , false);				
			app._evi(mainform.cb_surveys , false);		
			return false;
		}
		
		//-- have to set to true because if you set to hidden in code and then dev form it saves the state
		app._evi(mainform.flg_customersurvey , true);						
		app._evi(mainform.cb_surveys , true);	
			
		//-- not allowed to change send survey options or there arent any surveys to send
		if(app.session.IsDefaultOption(ANALYST_DEFAULT_DISABLESENDSURVEY)) 
		{
			//--code change DavidJH 09.06.05
			app._een(mainform.flg_customersurvey , false);
			app._ete(mainform.flg_customersurvey,"0");
			return false;
		}
		else
		{
			app._een(mainform.flg_customersurvey , true);
		}
		
		//-- default ticked setting
		//-- if not a quicklog call then set default
		if(_swdoc.boolIsQuickLogCall==false)
		{
			if(app.session.IsDefaultOption(ANALYST_DEFAULT_SETSENDSURVEY))
			{
				app._ete(mainform.flg_customersurvey , "1");
				app._een(mainform.cb_surveys , true);						
			}
			else
			{
				app._ete(mainform.flg_customersurvey , "0");
				app._een(mainform.cb_surveys , false);						
			}
		}
	}
}

function load_survey_list()
{
	//-- empty the picklist
	mainform.cb_surveys.pickList = "";
	
	//-- select all of the system mailboxes and add all shared mailboxes to an array
	var SqlRecordSetObj	= new SqlQuery;
	
	//-- select all of the surveys and the mailbox they are associated to
	SqlRecordSetObj.Reset();
	SqlRecordSetObj.Query("Select DISTINCT surveyname,surveyid,Mailbox from survey_config", "sw_systemdb");
		
	var str = "";
	var selected = "";
	var strTemps = new Array();
	bselecteddefaultsurvey = false;
	
	//-- loop through the surveys and and match those associated to shared mailboxes
	//-- for each survey add it into an array and to the pick list string and when the 
	//-- first survey is found identify it as the default option for the survey picklist
	while(SqlRecordSetObj.Fetch())
	{
		//-- get the recordset value for survey name and id
		var surveyname = SqlRecordSetObj.GetValueAsString("surveyName");
		var surveyid = SqlRecordSetObj.GetValueAsString("surveyid");
		
		//-- add the survey name/id pair into the array
		_swdoc.arrSurveyNameSurvIDs[surveyname] = surveyid;
		
		//-- build the picklist	options string	
		str += surveyname + "|";
		//MessageBox(surveyname)
		_swdoc.boolHaveSurveys=true;
		//-- identify the default survey (currently the first one added)
		for(ID in _swdoc.arrSurveyNameSurvIDs)
		{
			if(_swdoc.arrSurveyNameSurvIDs[ID])
			{
				if(!bselecteddefaultsurvey)
				{
					bselecteddefaultsurvey = true;
					selected = surveyname;
				}
			}
		}
			
	}
	//-- populate the surveys pick list
	mainform.cb_surveys.pickList = str;
	
	//-- set the default selected survey
	app._ete(mainform.cb_surveys , selected);
}]]>
					</code>
				</method>
				<method>
					<name>OnExecuteAction</name>
					<code>
						<![CDATA[OnExecuteAction(nAction)
{
	//-- trigger an action from a menu bar (shortcusts)		
	//-- attaching a call to the action.
	if(nAction == ATTACHFILETOCALL_ACTION)
	{
		mainform.btnAddFile_OnPressed();
		return true;
	}

	return true;
}]]>
					</code>
				</method>
				<method>
					<name>OnValidate</name>
					<code>
						<![CDATA[OnValidate()
{
	//-- validate the form
	if(!_swdoc.ValidateForm())return VALIDATE_FAIL;
		
	return VALIDATE_DEFAULT;
}]]>
					</code>
				</method>
				<method>
					<name>(Globals)</name>
					<code>
						<![CDATA[//-- ALL vars and funcs are in the userdefined js area]]>
					</code>
				</method>
				<method>
					<name>OnFormLoading</name>
					<code>
						<![CDATA[OnFormLoading(strFormName, strClass)
{
	//-- set the logmode and is quick call
	if(_swdoc._form["logmode"])_swdoc.boolLogMode = true;
	if(_swdoc._form["preloadtype"]==3)_swdoc.boolIsQuickLogCall = true;

	
								

}]]>
					</code>
				</method>
				<method>
					<name>OnFormClosing</name>
					<code>
						<![CDATA[OnFormClosing()
{
	if(!_swdoc.boolFormFieldChanged)_swdoc.resetData();
	return true;
}]]>
					</code>
				</method>
			</methods>
		</javascript>
	</configuration>
	<layouts>
		<layout>
			<appearance>
				<width>561</width>
				<height>408</height>
				<backgroundColor>#ffffff</backgroundColor>
				<fillColour>#ffffff</fillColour>
				<textColour >#000000</textColour >
				<font  size="8">Arial</font>
			</appearance>
			<controls>
				<control>
					<general>
						<name>tb_updatetext</name>
						<type>Field</type>
						<group>Tab1:0</group>
					</general>
					<appearance>
						<index>0</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>Rectangle</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>248</top>
							<left>14</left>
							<right>539</right>
							<bottom>388</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>100</right>
							<bottom>100</bottom>
						</scaling>
					</objectPlacement>
					<data>
						<binding>updatedb.updatetxt</binding>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Text Edit</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>true</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>true</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<autoCompleteField>false</autoCompleteField>
							<editUnlimitedText>true</editUnlimitedText>
							<url>false</url>
						</flags>
						<textLineCount>4</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>this is resolution two</displayColumnValue>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
							<borderColor>#c0c0c0</borderColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>CaptionPanel2</name>
						<type>CaptionBar</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>true</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>1</index>
						<caption>Details</caption>
						<backgroundColor>#f1f1f1</backgroundColor>
						<foregroundColor>#003366</foregroundColor>
						<font  size="10" bold="1">Trebuchet (MS)</font>
						<alignment>Left</alignment>
						<fillStyle>Vertical Gradient</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>29</top>
							<left>4</left>
							<right>395</right>
							<bottom>183</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>50</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<properties>
							<backgroundColor2>#d8d8d8</backgroundColor2>
							<imageHSpace>10</imageHSpace>
							<slope>12</slope>
							<borderColor>#d3c9b6</borderColor>
							<headerHeight>23</headerHeight>
							<hasBorder>1</hasBorder>
							<panelBorderColor>#d3c9b6</panelBorderColor>
							<fillStyle>0</fillStyle>
							<panelBackgroundColor>#f2eedd</panelBackgroundColor>
							<panelBackgroundColor2>#000000</panelBackgroundColor2>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>dt_actiontime</name>
						<type>Field</type>
					</general>
					<appearance>
						<index>2</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>Rectangle</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>73</top>
							<left>9</left>
							<right>216</right>
							<bottom>91</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>25</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
						<binding>updatedb.updatetimex</binding>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Date/Time Control</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<colorDateIndicator>false</colorDateIndicator>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>1166205163</displayColumnValue>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
							<dateFormatMode>0</dateFormatMode>
							<borderColor>#c0c0c0</borderColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>tb_timespent</name>
						<type>Field</type>
					</general>
					<appearance>
						<index>3</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>Rectangle</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>73</top>
							<left>225</left>
							<right>284</right>
							<bottom>91</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>25</left>
							<right>25</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
						<binding>updatedb.timespent</binding>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Minute Time Period</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>11</displayColumnValue>
						<properties>
							<defaultValue>5</defaultValue>
							<activeTextColor>#eeeeee</activeTextColor>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
							<borderColor>#c0c0c0</borderColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>cb_actionsource</name>
						<type>Field</type>
					</general>
					<appearance>
						<index>4</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>Rectangle</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>110</top>
							<left>9</left>
							<right>216</right>
							<bottom>128</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>25</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
						<binding>updatedb.udsource</binding>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Pick List</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<comboAutoUpdate>false</comboAutoUpdate>
							<comboNewValues>true</comboNewValues>
							<useDDPickList>true</useDDPickList>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>E-mail</displayColumnValue>
						<properties>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
							<defaultValue>Telephone</defaultValue>
							<distinctTable>updatedb</distinctTable>
							<distinctColumn>udsource</distinctColumn>
							<borderColor>#c0c0c0</borderColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>tb_actiontype</name>
						<type>Field</type>
					</general>
					<appearance>
						<index>5</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>Rectangle</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>110</top>
							<left>225</left>
							<right>386</right>
							<bottom>128</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>25</left>
							<right>50</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
						<binding>updatedb.udcode</binding>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Pick List</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<comboAutoUpdate>false</comboAutoUpdate>
							<comboNewValues>true</comboNewValues>
							<useDDPickList>true</useDDPickList>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>Called Customer</displayColumnValue>
						<properties>
							<defaultValue>General Update</defaultValue>
							<listItems>General Update|Called Customer|E-mailed Customer|</listItems>
							<activeTextColor>#eeeeee</activeTextColor>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
							<borderColor>#c0c0c0</borderColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>btnBrowseProfile</name>
						<type>EventButton</type>
						<flags>
							<transparent>false</transparent>
							<xpStyle>true</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>6</index>
						<caption>...</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
					</appearance>
					<objectPlacement>
						<position>
							<top>156</top>
							<left>366</left>
							<right>392</right>
							<bottom>177</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>50</left>
							<right>50</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<flags>
							<invisible>false</invisible>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<multiLine>false</multiLine>
						</flags>
						<properties>
							<commands>-1</commands>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>tb_fixcodedescription</name>
						<type>Field</type>
					</general>
					<appearance>
						<index>7</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>Rectangle</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>158</top>
							<left>9</left>
							<right>368</right>
							<bottom>176</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>50</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Text Edit</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>true</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<autoCompleteField>false</autoCompleteField>
							<editUnlimitedText>false</editUnlimitedText>
							<url>false</url>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>Resolution 1 -&gt; Resoltuon 2</displayColumnValue>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
							<borderColor>#c0c0c0</borderColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>CaptionPanel3</name>
						<type>CaptionBar</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>true</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>8</index>
						<caption>Options</caption>
						<backgroundColor>#f1f1f1</backgroundColor>
						<foregroundColor>#003366</foregroundColor>
						<font  size="10" bold="1">Trebuchet (MS)</font>
						<alignment>Left</alignment>
						<fillStyle>Vertical Gradient</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>29</top>
							<left>402</left>
							<right>556</right>
							<bottom>183</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>50</left>
							<right>100</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<properties>
							<backgroundColor2>#d8d8d8</backgroundColor2>
							<imageHSpace>10</imageHSpace>
							<slope>12</slope>
							<borderColor>#d3c9b6</borderColor>
							<headerHeight>23</headerHeight>
							<hasBorder>1</hasBorder>
							<panelBorderColor>#d3c9b6</panelBorderColor>
							<fillStyle>0</fillStyle>
							<panelBackgroundColor>#f2eedd</panelBackgroundColor>
							<panelBackgroundColor2>#000000</panelBackgroundColor2>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>flg_emailcustomer</name>
						<type>Field</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>9</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<borderStyle>None</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>76</top>
							<left>404</left>
							<right>520</right>
							<bottom>95</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>50</left>
							<right>50</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Form Flags</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<comboAutoUpdate>false</comboAutoUpdate>
							<comboNewValues>false</comboNewValues>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>1</displayColumnValue>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<flagItems>E-mail customer^1|</flagItems>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>flg_updatepublic</name>
						<type>Field</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>10</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<borderStyle>None</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>57</top>
							<left>404</left>
							<right>533</right>
							<bottom>75</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>50</left>
							<right>50</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Form Flags</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<comboAutoUpdate>false</comboAutoUpdate>
							<comboNewValues>false</comboNewValues>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>1</displayColumnValue>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<flagItems>Update to be public^1|</flagItems>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>flg_chargeable</name>
						<type>Field</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>11</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<borderStyle>None</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>96</top>
							<left>404</left>
							<right>545</right>
							<bottom>114</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>50</left>
							<right>50</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Form Flags</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<comboAutoUpdate>false</comboAutoUpdate>
							<comboNewValues>false</comboNewValues>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>1</displayColumnValue>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<flagItems>Call to be chargeable^1|</flagItems>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
							<defaultValue>0</defaultValue>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>flg_addKBase</name>
						<type>Field</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>12</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<borderStyle>None</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>116</top>
							<left>404</left>
							<right>546</right>
							<bottom>135</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>50</left>
							<right>50</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Form Flags</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<comboAutoUpdate>false</comboAutoUpdate>
							<comboNewValues>false</comboNewValues>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>0</displayColumnValue>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<flagItems>Add to KnowledgeBase^1|</flagItems>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>flg_customersurvey</name>
						<type>Field</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>13</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<borderStyle>None</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>135</top>
							<left>404</left>
							<right>562</right>
							<bottom>156</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>50</left>
							<right>50</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Form Flags</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>true</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<comboAutoUpdate>false</comboAutoUpdate>
							<comboNewValues>false</comboNewValues>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>0</displayColumnValue>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<flagItems>Send customer survey:^1|</flagItems>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>cb_surveys</name>
						<type>Field</type>
					</general>
					<appearance>
						<index>14</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>Rectangle</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>158</top>
							<left>408</left>
							<right>538</right>
							<bottom>176</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>50</left>
							<right>100</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Pick List</type>
						<flags>
							<invisible>true</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>true</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<comboAutoUpdate>false</comboAutoUpdate>
							<comboNewValues>true</comboNewValues>
							<useDDPickList>false</useDDPickList>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
							<borderColor>#c0c0c0</borderColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>Rect1</name>
						<type>Rectange</type>
						<flags>
							<transparent>false</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>true</toolbarButtonStyle>
							<cache>true</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>15</index>
						<backgroundColor>#d4d0c8</backgroundColor>
						<foregroundColor>#dddddd</foregroundColor>
						<font  size="0"/>
						<borderStyle>Rectangle</borderStyle>
						<fillStyle>Solid</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>0</top>
							<left>0</left>
							<right>566</right>
							<bottom>25</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>100</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<properties>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>cb_callaction</name>
						<type>Field</type>
					</general>
					<appearance>
						<index>16</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>3-D Sunken</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>4</top>
							<left>71</left>
							<right>218</right>
							<bottom>20</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>0</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Pick List</type>
						<flags>
							<invisible>false</invisible>
							<readOnly>false</readOnly>
							<mandatory>true</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<comboAutoUpdate>false</comboAutoUpdate>
							<comboNewValues>true</comboNewValues>
							<useDDPickList>false</useDDPickList>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>Close Call</displayColumnValue>
						<properties>
							<activeTextColor>#eeeeee</activeTextColor>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
							<listItems>Close Call|Resolve Call|Close Call|Resolve Call|</listItems>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>btnGetProfileText</name>
						<type>EventButton</type>
						<flags>
							<transparent>false</transparent>
							<xpStyle>true</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>17</index>
						<caption>Get Profile Text</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#0000ff</foregroundColor>
						<font  size="8">Arial</font>
					</appearance>
					<objectPlacement>
						<position>
							<top>189</top>
							<left>451</left>
							<right>543</right>
							<bottom>210</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>100</left>
							<right>100</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<flags>
							<invisible>false</invisible>
							<skipTabStop>false</skipTabStop>
							<disabled>true</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<multiLine>false</multiLine>
						</flags>
						<properties>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>Tab1</name>
						<type>TabControl</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>18</index>
						<caption>Tab1</caption>
						<backgroundColor>#ded7ce</backgroundColor>
						<foregroundColor>#ffffff</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>None</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>217</top>
							<left>4</left>
							<right>550</right>
							<bottom>398</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>100</right>
							<bottom>100</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<tabStyle>Top</tabStyle>
					<tabSize>19</tabSize>
					<items>
						<item>
							<name>Description</name>
							<properties>56=#d1e0ee|_flags=0</properties>
							<textBorder>None</textBorder>
							<textBackgroundColor>#ffffff</textBackgroundColor>
							<controlInfo>
								<mouseOverCursor>Window Default</mouseOverCursor>
								<properties>
									<tabColor>#d1e0ee</tabColor>
								</properties>
							</controlInfo>
						</item>
						<item>
							<name>File Attachment</name>
							<properties>56=#ffcc66|_flags=0</properties>
							<textBorder>None</textBorder>
							<textBackgroundColor>#ffffff</textBackgroundColor>
							<controlInfo>
								<mouseOverCursor>Window Default</mouseOverCursor>
								<properties>
									<tabColor>#ffcc66</tabColor>
								</properties>
							</controlInfo>
						</item>
					</items>
					<selectedTextFont  size="8">Arial</selectedTextFont>
					<selectedTextColor>#000000</selectedTextColor>
					<deselectedTextColor>#000000</deselectedTextColor>
					<tabSlopeLeft>2</tabSlopeLeft>
					<tabSlopeRight>2</tabSlopeRight>
					<deselectedTabHeightOffset>1</deselectedTabHeightOffset>
					<tabSpacing>0</tabSpacing>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<flags>
							<invisible>false</invisible>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<multiLine>false</multiLine>
						</flags>
						<properties>
							<tabStyle>0</tabStyle>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>fl_attachments</name>
						<type>FileListTable</type>
						<flags>
							<transparent>false</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
							<showHeader>true</showHeader>
							<verticalGridLines>true</verticalGridLines>
							<horizontalGridLines>true</horizontalGridLines>
							<autoLoad>true</autoLoad>
							<allowMultiSelect>true</allowMultiSelect>
						</flags>
						<group>Tab1:1</group>
					</general>
					<appearance>
						<index>19</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>Rectangle</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>245</top>
							<left>12</left>
							<right>470</right>
							<bottom>389</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>100</right>
							<bottom>100</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<columns>
						<controlInfo>
							<mouseOverCursor>Window Default</mouseOverCursor>
							<type>Text Edit</type>
							<flags>
								<invisible>false</invisible>
								<readOnly>false</readOnly>
								<mandatory>false</mandatory>
								<mandatoryLabelBackground>false</mandatoryLabelBackground>
								<mandatoryLabelText>false</mandatoryLabelText>
								<allowNullValue>false</allowNullValue>
								<skipTabStop>false</skipTabStop>
								<disabled>false</disabled>
								<protected>false</protected>
								<noMacroExpand>false</noMacroExpand>
								<readOnlyInit>false</readOnlyInit>
								<autoCompleteField>false</autoCompleteField>
								<editUnlimitedText>false</editUnlimitedText>
								<url>false</url>
								<hidden>false</hidden>
								<allowResize>true</allowResize>
								<allowSort>true</allowSort>
							</flags>
							<textLineCount>0</textLineCount>
							<textInputFormat>Text</textInputFormat>
							<properties>
							</properties>
							<name>File Name</name>
							<width>160</width>
							<image>-1</image>
							<dataColumn>0</dataColumn>
						</controlInfo>
						<controlInfo>
							<mouseOverCursor>Window Default</mouseOverCursor>
							<type>Text Edit</type>
							<flags>
								<invisible>false</invisible>
								<readOnly>false</readOnly>
								<mandatory>false</mandatory>
								<mandatoryLabelBackground>false</mandatoryLabelBackground>
								<mandatoryLabelText>false</mandatoryLabelText>
								<allowNullValue>false</allowNullValue>
								<skipTabStop>false</skipTabStop>
								<disabled>false</disabled>
								<protected>false</protected>
								<noMacroExpand>false</noMacroExpand>
								<readOnlyInit>false</readOnlyInit>
								<autoCompleteField>false</autoCompleteField>
								<editUnlimitedText>false</editUnlimitedText>
								<url>false</url>
								<hidden>false</hidden>
								<allowResize>true</allowResize>
								<allowSort>true</allowSort>
							</flags>
							<textLineCount>0</textLineCount>
							<textInputFormat>Text</textInputFormat>
							<properties>
							</properties>
							<name>Size</name>
							<width>80</width>
							<image>-1</image>
							<dataColumn>1</dataColumn>
						</controlInfo>
						<controlInfo>
							<mouseOverCursor>Window Default</mouseOverCursor>
							<type>Text Edit</type>
							<flags>
								<invisible>false</invisible>
								<readOnly>false</readOnly>
								<mandatory>false</mandatory>
								<mandatoryLabelBackground>false</mandatoryLabelBackground>
								<mandatoryLabelText>false</mandatoryLabelText>
								<allowNullValue>false</allowNullValue>
								<skipTabStop>false</skipTabStop>
								<disabled>false</disabled>
								<protected>false</protected>
								<noMacroExpand>false</noMacroExpand>
								<readOnlyInit>false</readOnlyInit>
								<autoCompleteField>false</autoCompleteField>
								<editUnlimitedText>false</editUnlimitedText>
								<url>false</url>
								<hidden>false</hidden>
								<allowResize>true</allowResize>
								<allowSort>true</allowSort>
							</flags>
							<textLineCount>0</textLineCount>
							<textInputFormat>Text</textInputFormat>
							<properties>
							</properties>
							<name>Last Modified</name>
							<width>120</width>
							<image>-1</image>
							<dataColumn>2</dataColumn>
						</controlInfo>
						<controlInfo>
							<mouseOverCursor>Window Default</mouseOverCursor>
							<type>Text Edit</type>
							<flags>
								<invisible>false</invisible>
								<readOnly>false</readOnly>
								<mandatory>false</mandatory>
								<mandatoryLabelBackground>false</mandatoryLabelBackground>
								<mandatoryLabelText>false</mandatoryLabelText>
								<allowNullValue>false</allowNullValue>
								<skipTabStop>false</skipTabStop>
								<disabled>false</disabled>
								<protected>false</protected>
								<noMacroExpand>false</noMacroExpand>
								<readOnlyInit>false</readOnlyInit>
								<autoCompleteField>false</autoCompleteField>
								<editUnlimitedText>false</editUnlimitedText>
								<url>false</url>
								<hidden>false</hidden>
								<allowResize>true</allowResize>
								<allowSort>true</allowSort>
							</flags>
							<textLineCount>0</textLineCount>
							<textInputFormat>Text</textInputFormat>
							<properties>
							</properties>
							<name>Full Local Path</name>
							<width>100</width>
							<image>-1</image>
							<dataColumn>3</dataColumn>
						</controlInfo>
					</columns>
					<sortColumn>2</sortColumn>
					<sortDescending>false</sortDescending>
					<headerHeight>16</headerHeight>
					<rowHeight>16</rowHeight>
					<selectedColor>#00008b</selectedColor>
					<selectedTextColor>#ffffff</selectedTextColor>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<flags>
							<invisible>false</invisible>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<multiLine>false</multiLine>
						</flags>
						<properties>
							<content>NAME=css-bug-raising.gif;PATH=C:\Documents and Settings\NeilWJ\My Documents\css\css-bug-raising.gif;SIZE=18746;LASTMODIFIED=1091525370</content>
							<borderColor>#c0c0c0</borderColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>btnAddFile</name>
						<type>EventButton</type>
						<flags>
							<transparent>false</transparent>
							<xpStyle>true</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
						<group>Tab1:1</group>
					</general>
					<appearance>
						<index>20</index>
						<caption>Add</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
					</appearance>
					<objectPlacement>
						<position>
							<top>245</top>
							<left>479</left>
							<right>543</right>
							<bottom>269</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>100</left>
							<right>100</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<flags>
							<invisible>false</invisible>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<multiLine>false</multiLine>
						</flags>
						<properties>
							<commands>74</commands>
							<eventButtonIcon>74</eventButtonIcon>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>btnRemove</name>
						<type>EventButton</type>
						<flags>
							<transparent>false</transparent>
							<xpStyle>true</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
						<group>Tab1:1</group>
					</general>
					<appearance>
						<index>21</index>
						<caption>Remove</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
					</appearance>
					<objectPlacement>
						<position>
							<top>275</top>
							<left>479</left>
							<right>543</right>
							<bottom>299</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>100</left>
							<right>100</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<flags>
							<invisible>false</invisible>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<multiLine>false</multiLine>
						</flags>
						<properties>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<type>FieldName</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>22</index>
						<caption>Action Source</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<alignment>Right</alignment>
						<borderStyle>None</borderStyle>
						<fillStyle>Solid</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>94</top>
							<left>7</left>
							<right>80</right>
							<bottom>106</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>0</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
						<binding>updatedb.udsource</binding>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<properties>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>LabelCode</name>
						<type>FieldName</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>23</index>
						<caption>Action Type</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<alignment>Left</alignment>
						<borderStyle>None</borderStyle>
						<fillStyle>Solid</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>94</top>
							<left>223</left>
							<right>289</right>
							<bottom>106</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>25</left>
							<right>25</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
						<binding>updatedb.udcode</binding>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<properties>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>Text1</name>
						<type>Text</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>24</index>
						<caption>Date/Time of Action</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<alignment>Left</alignment>
						<borderStyle>None</borderStyle>
						<fillStyle>Solid</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>57</top>
							<left>6</left>
							<right>118</right>
							<bottom>71</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>0</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<properties>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>Label2</name>
						<type>FieldName</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>25</index>
						<caption>Time Spent</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<alignment>Left</alignment>
						<borderStyle>None</borderStyle>
						<fillStyle>Solid</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>57</top>
							<left>223</left>
							<right>287</right>
							<bottom>71</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>25</left>
							<right>25</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
						<binding>updatedb.timespent</binding>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<properties>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>ResolProfile</name>
						<type>Text</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>26</index>
						<caption>Resolution Profile</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<alignment>Left</alignment>
						<borderStyle>None</borderStyle>
						<fillStyle>Solid</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>140</top>
							<left>6</left>
							<right>206</right>
							<bottom>154</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>0</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<properties>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>btnAddFile</name>
						<type>EventButton</type>
						<flags>
							<transparent>false</transparent>
							<xpStyle>true</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>true</toolbarButtonStyle>
							<cache>true</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>27</index>
						<caption>Attach File</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
					</appearance>
					<objectPlacement>
						<position>
							<top>1</top>
							<left>442</left>
							<right>538</right>
							<bottom>24</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>100</left>
							<right>100</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<flags>
							<invisible>false</invisible>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<multiLine>false</multiLine>
						</flags>
						<properties>
							<commands>74</commands>
							<eventButtonIcon>74</eventButtonIcon>
							<backgroundColor>#ff9900</backgroundColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>LabelAction</name>
						<type>Text</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>false</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>28</index>
						<caption>Call Action:</caption>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Trebuchet MS</font>
						<alignment>Left</alignment>
						<borderStyle>None</borderStyle>
						<fillStyle>Solid</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>4</top>
							<left>6</left>
							<right>68</right>
							<bottom>21</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>0</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<flags>
							<invisible>false</invisible>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<multiLine>false</multiLine>
						</flags>
						<properties>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>tb_fixcode</name>
						<type>Field</type>
					</general>
					<appearance>
						<index>29</index>
						<backgroundColor>#ffffff</backgroundColor>
						<foregroundColor>#000000</foregroundColor>
						<font  size="8">Arial</font>
						<borderStyle>3-D Sunken</borderStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>70</top>
							<left>338</left>
							<right>367</right>
							<bottom>87</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>0</right>
							<bottom>0</bottom>
						</scaling>
					</objectPlacement>
					<data>
						<binding>opencall.fixcode</binding>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<type>Text Edit</type>
						<flags>
							<invisible>true</invisible>
							<readOnly>false</readOnly>
							<mandatory>false</mandatory>
							<mandatoryLabelBackground>false</mandatoryLabelBackground>
							<mandatoryLabelText>false</mandatoryLabelText>
							<allowNullValue>false</allowNullValue>
							<skipTabStop>false</skipTabStop>
							<disabled>false</disabled>
							<protected>true</protected>
							<noMacroExpand>false</noMacroExpand>
							<readOnlyInit>false</readOnlyInit>
							<autoCompleteField>false</autoCompleteField>
							<editUnlimitedText>false</editUnlimitedText>
							<url>false</url>
						</flags>
						<textLineCount>0</textLineCount>
						<textInputFormat>Text</textInputFormat>
						<displayColumnValue>RSLT-RSLT</displayColumnValue>
						<properties>
							<content>#eeeeee</content>
							<disabledBackgroundColor>#eeeeee</disabledBackgroundColor>
						</properties>
					</controlInfo>
				</control>
				<control>
					<general>
						<name>cp_summary1</name>
						<type>CaptionBar</type>
						<flags>
							<transparent>true</transparent>
							<xpStyle>false</xpStyle>
							<hasShadow>false</hasShadow>
							<toolbarButtonStyle>false</toolbarButtonStyle>
							<cache>false</cache>
							<hasBorder>true</hasBorder>
							<hasCheckbox>false</hasCheckbox>
						</flags>
					</general>
					<appearance>
						<index>30</index>
						<caption>Other information</caption>
						<backgroundColor>#f1f1f1</backgroundColor>
						<foregroundColor>#003366</foregroundColor>
						<font  size="10" bold="1">Trebuchet (MS)</font>
						<alignment>Left</alignment>
						<fillStyle>Vertical Gradient</fillStyle>
					</appearance>
					<objectPlacement>
						<position>
							<top>188</top>
							<left>4</left>
							<right>558</right>
							<bottom>404</bottom>
						</position>
						<scaling>
							<top>0</top>
							<left>0</left>
							<right>100</right>
							<bottom>100</bottom>
						</scaling>
					</objectPlacement>
					<data>
					</data>
					<controlInfo>
						<mouseOverCursor>Window Default</mouseOverCursor>
						<properties>
							<backgroundColor2>#d8d8d8</backgroundColor2>
							<imageHSpace>10</imageHSpace>
							<slope>12</slope>
							<borderColor>#d3c9b6</borderColor>
							<headerHeight>23</headerHeight>
							<hasBorder>1</hasBorder>
							<panelBorderColor>#d3c9b6</panelBorderColor>
							<fillStyle>0</fillStyle>
							<panelBackgroundColor>#f2eedd</panelBackgroundColor>
							<panelBackgroundColor2>#000000</panelBackgroundColor2>
						</properties>
					</controlInfo>
				</control>
			</controls>
			<formActions>
			</formActions>
			<javascript>
				<methods>
					<method>
						<name>OnFormLoaded</name>
						<code>
							<![CDATA[OnFormLoaded()
{
	
	//-- set up the form mode
	_swdoc.setup_form_mode();
	
	//-- set updatetime	
	_swdoc.updatedb.updatetimex = app.global.GetCurrentEpocTime();			
	_swdoc.UpdateFormFromData();
		
}]]>
						</code>
					</method>
					<method>
						<name>btnBrowseProfile_OnPressed</name>
						<code>
							<![CDATA[btnBrowseProfile_OnPressed()
{
	//-- get resolution profile filter
	
	//-- NWJ - 29.06.2006 - get close filter or resolve filter depending on call closure option (requested by Dan 47766)
	if (cb_callaction.text == "Resolve Call")
	{
		var Filter = dd.GetGlobalParamAsString("Close Call Form/ResolveProfileFilter");
	}
	else if (cb_callaction.text == "Close Call")
	{
		var Filter = dd.GetGlobalParamAsString("Close Call Form/CloseProfileFilter");
	}
	else
	{
		var Filter = dd.GetGlobalParamAsString("Close Call Form/ProfileCodeFilter");
	}
	
	var pc = new ChooseProfileCodeDialog;
	//-- default analyst permission to auto fill the resolution text on resolve/close call is set

    pc.useDescriptionText =  app.session.IsDefaultOption(ANALYST_DEFAULT_AUTOFILLRESOLUTIONTEXT); 
    
    pc.Open(true, true, _swdoc.opencall.fixcode, Filter, function(objPC)
	{
		if (typeof objPC == "object")
		{
		 	//-- Get the fix code and split it into an array
			var strCodeDesc = objPC.codeDescription;
			var strCode = objPC.code;
			
			//-- If no codes are found then stop or same as current code
			if(strCode==_swdoc.opencall.fixcode) return;
			
			//-- F0092364
			if(strCode=="")
			{
				_swdoc.opencall.fixcode = "";       
				app._ete(tb_fixcodedescription , "");
				_swdoc.bUserSelectedFixCode = true;
				app._een(btnGetProfileText ,false);
				return;
			}
			
			//-- Set the text in the resolution profile text box
			//-- 08.02.2007 - NWJ - set the opencall record value instead of the element name 
			_swdoc.opencall.fixcode = strCode;       
			app._ete(tb_fixcodedescription , strCodeDesc);
			_swdoc.bUserSelectedFixCode = true;
			
			//-- Attempt to add the resolution profile description to the Action Description box if the
			//-- default analyst permission to auto fill the resolution text on resolve/close call is set
			if(objPC.useDescriptionText)
			{
				//-- 08.02.2007 - NWJ - set the opencall record value instead of the element name 
				var strCurrentUpdateText = _swdoc.updatedb.updatetxt;
				
				if(objPC.description.length)
				{
					//if(tb_updatetext.text.length)
					if(strCurrentUpdateText.length)
					{
						var Message = "You have chosen to transfer the default profile text into the description field of the close call form. However, you have already entered some text into this field. Do you want to append the text you have typed?\n\nTo append the default text to the text you have already typed, click Yes\nTo transfer the default text and overwrite what you have already typed, click No\nTo ignore the default text and leave the text you have typed alone, click Cancel";
						switch(MessageBox(Message, MB_ICONQUESTION | MB_YESNOCANCEL))
						{
							case IDYES:
								if(_swdoc.updatedb.updatetxt.length)
								{
												//-- add a line feed
												strCurrentUpdateText += "\r\n";
												//tempText = _swdoc.updatedb.updatetxt + "\r\n"; 
								}
								strCurrentUpdateText += objPC.description;
								break;
							case IDNO:
								strCurrentUpdateText = objPC.description;
								break;
							case IDCANCEL:
								break;
						}
					}
					else
					{
						strCurrentUpdateText = objPC.description;
					}
				}
					
				//-- add back to update record
				_swdoc.updatedb.updatetxt = strCurrentUpdateText;
				_swdoc.UpdateFormFromData();        
			}
	
			//-- if we are working with webclient
			if(app.bWebClient)
			{
							app._een(btnGetProfileText , false);
			}
			else
			{
				//-- enable / disable button if it has text
				app._een(btnGetProfileText ,(objPC.description!=""));
	
				//btnGetProfileText.enable = (_swdoc.updatedb.updatetxt? true:false);
			}
		}
	});
}]]>
						</code>
					</method>
					<method>
						<name>btnAddFile_OnPressed</name>
						<code>
							<![CDATA[btnAddFile_OnPressed()
{
	//-- add files
	//fl_attachments.newFile = InvokeCallAttachmentFileDialog();
	fl_attachments.AddFiles();

}]]>
						</code>
					</method>
					<method>
						<name>btnRemove_OnPressed</name>
						<code>
							<![CDATA[btnRemove_OnPressed()
{
	// -- remove selected files
	for(i=fl_attachments.rowCount()-1; i>=0;i--)
    {
    	if(fl_attachments.IsRowSelected(i))
    	{
    		//-- remove
    		fl_attachments.RemoveRow(i);
    	}
    }

}]]>
						</code>
					</method>
					<method>
						<name>btnGetProfileText_OnPressed</name>
						<code>
							<![CDATA[btnGetProfileText_OnPressed()
{
	var funcProcessing = function()
	{			
		//-- get resolution profile description	
		var currentResProfileDesc = app.global.GetResolutionProfileDescription(_swdoc.opencall.fixcode);
		_swdoc.updatedb.updatetxt = currentResProfileDesc.strDescription;
		_swdoc.UpdateFormFromData();
	}
	
	if(_swdoc.updatedb.updatetxt.length)
	{
		MessageBox("If you retrieve the default text description from the profile database you will overwrite the current Action Description text.\n\nDo you wish to continue?", MB_ICONQUESTION | MB_YESNO,function(intDecision)
		{		
			if(intDecision != IDYES)
			{
				return;
			}
			funcProcessing();
		});	
	}
	else
	{
		funcProcessing();
	}
	
}]]>
						</code>
					</method>
					<method>
						<name>checkCustomerSurvey_OnValueChanged</name>
						<code>
							<![CDATA[checkCustomerSurvey_OnValueChanged(strValue)
{
	var bChecked = checkCustomerSurvey.text == "1";
	app._een(Surveys , bChecked);
}]]>
						</code>
					</method>
					<method>
						<name>(User Defined Functions)</name>
						<code>
							<![CDATA[
//-- function to check that user has selected correct number of profile codes
function check_profile_levels()
{
	//-- get the number of profile levels the analyst HAS to choose
	var nLevelNeeded = app.session.GetCloseProfileLevelRequired();

	//-- determine the number of Profile levels the user has selected
	//-- NWJ - can we turn this into a app.global.i.e. app.global.returnProfileLevelCount(strProfileCode);
	var strTempProfileCodes = new String(_swdoc.opencall.fixcode);
	var nLevels = 0;
	while(strTempProfileCodes.indexOf('-') != -1)
	{
		nLevels++;
		strTempProfileCodes = strTempProfileCodes.substr((strTempProfileCodes.indexOf('-')+1),strTempProfileCodes.length);
	}
	
	if(strTempProfileCodes.length)nLevels++;
	
	//-- If insufficient profile levels are specified then alert the user
	if(nLevels < nLevelNeeded)
	{
		MessageBox("You must profile this call resolution. Your access control rights require you to choose at least " + nLevelNeeded + " profile level(s)", MB_ICONSTOP);
		return false;
	}
	
	return true;
}

//-- add call to kbase
function add_call_to_knowledgebase(nFirstCallref)
{
	var strProbText = "";
	var strProbCode = "";
	//-- get the problem text and problem code from updatedb/opencall
	
	var aRSInfo = new SqlQuery;
	aRSInfo.Query("SELECT updatetxt, probcode FROM updatedb,opencall WHERE udindex = 0 AND updatedb.callref = opencall.callref and opencall.callref = " + nFirstCallref, "sw_systemdb");
	if(aRSInfo.Fetch())
	{
		strProbText = aRSInfo.GetValueAsString(0);
		strProbCode = aRSInfo.GetValueAsString(1);		
	}
	aRSInfo.Reset();	
	
	//-- call api
	//MessageBox("Add KB " + _swdoc.updatedb.updatetxt)
   	app.global.AddResolutionToKnowledgeBase(strProbText, strProbCode, _swdoc.updatedb.updatetxt, _swdoc.opencall.fixcode, nFirstCallref);
}

//--
//-- resolve or close the call
function ResolveClose(intLoggedCallref, funcCallback)
{	
	// -- Validate the form
	if(!_swdoc.ValidateForm())
	{
		funcCallback(false);
		return;
	}
	// -- Check profile levels
	if(!mainform.check_profile_levels())
	{
		funcCallback(false);
		return;
	}	
	// -- Determine status
	var nStatus = CS_CLOSED;
	if(!_swdoc.boolClosing)
	{
		nStatus = CS_RESOLVED;
	}
	else
	{
		if(flg_chargeable.text == "1")	nStatus = CS_CLOSEDCHARGABLE;
	}
		
	// -- Handle the Web Client
	if((app.bWebClient && app.global==undefined)&&(_swdoc.boolClosing))
	{
	 	nStatus = CS_CLOSED;
	 	flg_chargeable.text == "0"
	}	

	// -- Check if we should send a Survey	
	var bSendSurveyToCustomer = false;
	var SurveyID = 0;
	var SurveyName = "";
	if(app.global.IsSurveyModuleEnabled() && flg_customersurvey.text == "1" && cb_surveys.text.length)
	{
		// -- Get surveyId from the SurveyNameSurvIdMap
		SurveyName = cb_surveys.text;		
		SurveyID = _swdoc.arrSurveyNameSurvIDs[SurveyName]; 
		if(SurveyID!=undefined)
			bSendSurveyToCustomer = true;
	
		// -- Determined that a Survey should be sent to the customer
		if (bSendSurveyToCustomer)
		{
			// -- Send a Survey using survey::sendCustomerCallSurvey API
			var xmlmc = new XmlMethodCall;
			xmlmc.SetValue("surveyId", SurveyID);
			xmlmc.SetValue("callref", intLoggedCallref);
			// -- Invoke XMLMC API
			if(!xmlmc.Invoke("survey","sendCustomerCallSurvey"))
			{
				// -- Failed to Invoke XMLMC API
				// -- Display the error message
				(app.bWebClient)? MessageBox(xmlmc._lastresult):MessageBox(xmlmc.GetReturnXml());
			}
		}
	}
		
	// -- Find modified values in OPENCALL table
	var boolUpdatedValues = true;
	var arrUpdateCallValues = new Array();
	var strUpdateCallValues = "";
	if(rec = _swdoc.GetRecord("opencall"))
	{
		var nColCount = rec.GetCount();
		for(x = 0; x < nColCount; x++)
		{
			if(!rec.IsModified(x))
				continue;
			arrUpdateCallValues[rec.GetColumnName(x)] = rec.GetValue(x);
		}
	}
	for (fieldName in arrUpdateCallValues)
	{
		strUpdateCallValues += "<"+fieldName+">"+ app.global.PrepareForXML(arrUpdateCallValues[fieldName])+"</"+fieldName+">";
	}
	// -- Update call values using XMLMC API if we found modified values in OPENCALL table 
	if(strUpdateCallValues!="")
	{
		strUpdateCallValues = "<opencall>"+strUpdateCallValues+"</opencall>";
		// -- Update call values using helpdesk::updateCallValues API 
		var xmlmc = new XmlMethodCall;
		var strMethod = "updateCallValues";
		xmlmc.SetValue("callref", intLoggedCallref);
		xmlmc.SetParamAsComplexType("additionalCallValues", strUpdateCallValues);	
		if(xmlmc.Invoke("helpdesk", strMethod))
		{
	    	var strXML = (app.bWebClient)? xmlmc._lastresult:xmlmc.GetReturnXml();
			var objRes = app.XMCResult(strXML);
			if(!objRes.success)
			{
				boolUpdatedValues = false;
				MessageBox("The " + strMethod + " API method was rejected by the server.");
				funcCallback(false);
				return;
			}
		}
		else
		{
			boolUpdatedValues = false;
			(app.bWebClient)? MessageBox(xmlmc._lastresult):MessageBox(xmlmc.GetReturnXml());
			funcCallback(false);
			return;
		}
	}
	
	// -- Resolve/Close the call using XMLMC API
	var xmlmc = new XmlMethodCall;
	// -- API method
	var strMethod = "closeCalls";
	if(nStatus == CS_RESOLVED)
		strMethod = "resolveCalls";
	// -- Find modified values in UPDATEDB table
	var arrExtraUpdateDbValues = new Array();
	var strUpdateDbValues = "";
	if(rec = _swdoc.GetRecord("updatedb"))
	{
		var nColCount = rec.GetCount();
		for(x = 0; x < nColCount; x++)
		{
			if(!rec.IsModified(x))
				continue;
			arrExtraUpdateDbValues[rec.GetColumnName(x)] = rec.GetValue(x);
		}
	}
	for (fieldName in arrExtraUpdateDbValues)
	{
		strUpdateDbValues += "<"+fieldName+">"+ app.global.PrepareForXML(arrExtraUpdateDbValues[fieldName])+"</"+fieldName+">";
	}
	
	// -- Workout "timeOfAction" value
	var strBackDate = app.g.convert_epoch_isodate(_swdoc.nBackdatePeriod);
	
	// ** API params ** //
	xmlmc.SetValue("callref", intLoggedCallref);
	xmlmc.SetValue("timeSpent", mainform.tb_timespent.value);
	xmlmc.SetValue("description", rec.updatetxt);
	xmlmc.SetValue("timeOfAction", strBackDate);
	var boolPublicUpdate = (flg_updatepublic.text == "1" )? true : false;
	xmlmc.SetValue("publicUpdate", boolPublicUpdate);
	if(rec.udsource!="")
		xmlmc.SetValue("updateSource", rec.udsource);
	if(rec.udcode!="")
		xmlmc.SetValue("updateCode", rec.udcode);
	
	app.itsm.addAttachmentsToCallXmlmc(mainform.fl_attachments,xmlmc);
	
	if(strUpdateDbValues!="")
		xmlmc.SetParamAsComplexType("extraUpdateDbValues", strUpdateDbValues);	
	// ** EO API params ** //
	
	//-- funciton required for modeless email template dialog
	var funcCloseForm = function(funcCloseCallback)
	{
		// -- Close Form
		_swdoc.boolFormFieldChanged = false;		
		_swdoc.resetData();    			
    	_swdoc.CloseForm();
    	funcCloseCallback(true);
		return;
	}
	
	
	// -- Invoke XMLMC API
	if(xmlmc.Invoke("helpdesk",strMethod))
	{
		var strXML = (app.bWebClient)? xmlmc._lastresult:xmlmc.GetReturnXml();
		var objRes = app.XMCResult(strXML);
		if(!objRes.success)
		{
			MessageBox("The " + strMethod + " API method was rejected by the server.");
			funcCallback(false);
			return;
	    }
		else
		{
			var myXmlFile = new XmlFile(); 
			bRet = myXmlFile.loadFromString(strXML); 
			var arrChildCallInfo = null;
			var arrCallInfo = new Array();
			var strDocs = "";
			for (count = 0; count < myXmlFile.methodCallResult.params.length; count ++) 
			{
				if(myXmlFile.methodCallResult.params[count].nodeName=="callActionStatus")
				{  
					var boolSuccess = myXmlFile.methodCallResult.params[count]['success'].nodeValue;
					if(boolSuccess=="false")
					{
						var strMessage =  myXmlFile.methodCallResult.params[count]['message'].nodeValue;
						MessageBox(strMessage);
						funcCallback(false);
						return;
					}
					var strCallref = myXmlFile.methodCallResult.params[count]['callref'].nodeValue;
					var strIndex = myXmlFile.methodCallResult.params[count]['udIndex'].nodeValue;
					
					arrCallInfo[strCallref] = strIndex;
				}
				else if(myXmlFile.methodCallResult.params[count].nodeName=="callFileAttachment")
				{
					var intCount = app.array_count(arrCallInfo);
					if(intCount==1)
					{
						try
						{
							var updateId = myXmlFile.methodCallResult.params[count]['updateId'].nodeValue;
							if(updateId==arrCallInfo[strCallref])
							{
								var pathName = myXmlFile.methodCallResult.params[count]['pathName'].nodeValue;
								var fileName = myXmlFile.methodCallResult.params[count]['fileName'].nodeValue;
								var fileSize = myXmlFile.methodCallResult.params[count]['fileSize'].nodeValue;
								if(strDocs!="") strDocs +="\r\n";
								strDocs +='displayname="'+fileName+'"; path="'+pathName+'"; size="'+fileSize+'";';
							}
						}
						catch(e)
						{
							// --
						}
					}
				}
			}
			
			//-- add knowledge base	but only if we have one call
    		if(flg_addKBase.text == "1")
    		{
    			add_call_to_knowledgebase(intLoggedCallref);
    		}
    			
			// If we have been invoked to update a call from an e-mail message, this update will 
			// only relate to a single call. We can only handle e-mail audit trail if we are working
			// on a single-call update. 
			if(_swdoc._form["messagesource"] && 	// Are we working from an e-mail message?
				dd.GetGlobalParamAsNumber("Email Audit Trail/StoreEmailAuditTrail")) // Are we configured?
			{
				app.g.attach_message_to_call(_swdoc._form,intLoggedCallref,arrCallInfo[intLoggedCallref]);
			}
	
    		// if we want to send an email to the customer AND there are file attachments, obtain the 
    		// attachments to attach to the email as well
    		var flSessionFilesInfo = "";
    		if(mainform.flg_emailcustomer.value && app.global.IsConnectedToMailServer())
    		{
				// Now, compose an email to the customer				
				app.global.ComposeCallUpdateEmail(arrCallInfo, 					// Array: Call reference-UdIndex
										_swdoc.updatedb.updatetxt, 	// Message text
										strDocs, 		// File attachments
										_swdoc.updatedb.timespent,
										"CloseCallMailTemplate", 		// Template name
										TEMPLATE_CLOSECALL,				// Template type
										function()
										{
											funcCloseForm(function()
											{
												funcCallback(true);
												return;
											});
											
										});
			}
			else
			{
				funcCloseForm(function()
				{
					funcCallback(true);
					return;
				});
			}
		}
	}
	else
	{
		(app.bWebClient)? MessageBox(xmlmc._lastresult):MessageBox(xmlmc.GetReturnXml());
		funcCallback(false);
		return;
	}
}

function getReadableDatefromEpoch(dt_epochdate)
{
	var strFormattedDate = "";
	var theDate = new Date(dt_epochdate);
	dateString = theDate.toString();
	arrDateStr = dateString.split(" ");
	strFormattedDate = arrDateStr[2] + "/" + getNumericMonth(arrDateStr[1]) + "/" + arrDateStr[3] + " " + arrDateStr[4].substr(0,2) + ":";
	strFormattedDate += arrDateStr[4].substr(3,2) + ":" + arrDateStr[4].substr(6,2);
	return strFormattedDate;
}

function getNumericMonth(strMonth)
{
	var arrMonth = new Array("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");
	for(i=0; i<arrMonth.length; i++)
	{
		if(strMonth == arrMonth[i])
			return i+1;
	}
}

function replaceIllegalFileCharacters(strText)
{
	//-- This function is used to replace characters in the passed in string that 
	//-- are not suitable for use in filenames and return the modified string 
	
	strOutput = strText;
	strReplacement = "-";
	var i = 0;
	
	while(i < strOutput.length)
	{
		strOutput = strOutput.replace('/', strReplacement);
		strOutput = strOutput.replace(':', strReplacement);
		strOutput = strOutput.replace('*', strReplacement);
		strOutput = strOutput.replace('?', strReplacement);
		strOutput = strOutput.replace('"', strReplacement);
		strOutput = strOutput.replace('\'', strReplacement);
		strOutput = strOutput.replace('<', strReplacement);
		strOutput = strOutput.replace('>', strReplacement);
		
		i++;
	}
	
	return strOutput;
}]]>
						</code>
					</method>
					<method>
						<name>cb_callaction_OnValueChanged</name>
						<code>
							<![CDATA[cb_callaction_OnValueChanged(strValue)
{
	//-- set mode and then setup defaults for that mode
	_swdoc.boolClosing = (strValue!="Resolve Call");
	_swdoc.setup_charge_flag(false);

}]]>
						</code>
					</method>
					<method>
						<name>flg_customersurvey_OnValueChanged</name>
						<code>
							<![CDATA[flg_customersurvey_OnValueChanged(strValue)
{
	//-- enable disable
	var bChecked = flg_customersurvey.text == "1";
	app._een(cb_surveys , bChecked);

}]]>
						</code>
					</method>
					<method>
						<name>OnFieldValueChanged</name>
						<code>
							<![CDATA[OnFieldValueChanged(strName, strValue)
{
	//-- This value is set when a field value has been changed.
	//-- We check this variable on from closing to see if there are any data changes that need to be saved.
	_swdoc.boolFormFieldChanged = true;


}]]>
						</code>
					</method>
					<method>
						<name>dt_actiontime_OnValueChanged</name>
						<code>
							<![CDATA[dt_actiontime_OnValueChanged(strValue)
{
	// -- Var used in this to calculate backDatePeriod
	var nBackdatePeriod = 0;
	
	// -- Calculate the backDatePeriod for processing
	var updateDateTime = mainform.dt_actiontime.text;
	var updateDateTimeValue = mainform.dt_actiontime.value;
	nBackdatePeriod = _swdoc.intGetCurrentEpocTime - updateDateTimeValue;
	
	// -- Processing to set "updatedb.updatetimex" and set _swdoc level nBackdatePeriod variable for use in Resolve/Close action
	var funcProcessBackdate = function()
	{
		if(nBackdatePeriod==0)
		{
			_swdoc.updatedb.updatetimex = _swdoc.intGetCurrentEpocTime;
		}
		if(_swdoc.boolSetToMaxBackdatePeriod)
		{
			_swdoc.updatedb.updatetimex = app.global.GetCurrentEpocTime() - app.session.GetMaxBackdatePeriodAllowed();
		}
		_swdoc.nBackdatePeriod = nBackdatePeriod;	
		_swdoc.UpdateFormFromData();
	}
	
	// -- Deny if the user has attempted to forward the Date/Time
	if(nBackdatePeriod < 0)
	{
		MessageBox("You have attempted to forward date this call update which is not allowed.");
		_swdoc.boolSetToMaxBackdatePeriod = false;
		nBackdatePeriod=0;
		funcProcessBackdate();
	}
	else
	{	
		// -- Check that the selected Date/Time value does not exceed the maximum allowed backDatePeriod and prompt with an option to set to allowed Date/Time value
		if(nBackdatePeriod > app.session.GetMaxBackdatePeriodAllowed())
		{
			var dTime = app.global.GetCurrentEpocTime() - app.session.GetMaxBackdatePeriodAllowed();
			var strMsg = "You have attempted to backdate this call update further than you have sufficient privileges to do so.\n\nDo you want to use the oldest date/time that you are allowed: " + app.global.ConvertDateTimeInText(app.global.GetAsISO8601TimeString(dTime));
			MessageBox(strMsg, MB_ICONQUESTION | MB_YESNO, function(intDecision)
			{	
				if(intDecision != IDYES)
				{
					nBackdatePeriod = 0;
					_swdoc.boolSetToMaxBackdatePeriod = false;
				}
				else
				{
					// -- Maximum backdate period allowed should only be calculated when invoking the API otherwise the value will be inacurrate
					nBackdatePeriod = 0;
                    _swdoc.boolSetToMaxBackdatePeriod = true;
				}
				funcProcessBackdate();
			});
		}
		else
		{
			// -- timeOfAction param in resolveCalls API expects .value property of Date/Time control field
			nBackdatePeriod = updateDateTimeValue;
			_swdoc.boolSetToMaxBackdatePeriod = false;
			funcProcessBackdate();
		}
	}	
}]]>
						</code>
					</method>
				</methods>
			</javascript>
		</layout>
		<layout>
			<appearance>
				<width>360</width>
				<height>220</height>
				<backgroundColor>#ffffff</backgroundColor>
				<fillColour>#ffffff</fillColour>
				<textColour >#000000</textColour >
				<font  size="8">Arial</font>
			</appearance>
			<controls>
			</controls>
			<formActions>
			</formActions>
			<javascript>
				<methods>
				</methods>
			</javascript>
		</layout>
	</layouts>
</espForm>
