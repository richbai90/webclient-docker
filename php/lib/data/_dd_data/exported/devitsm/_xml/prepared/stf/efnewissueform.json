{"espForm":{"configuration":{"settings":{"name":"EfNewIssueForm","title":"Issue","options":{"allowResize":"true","showMenubar":"true","showToolbar":"false","showStatusBar":"false"}},"tables":{"table":{"name":"swissues","type":"Main Details Table","flags":"5"}},"javascript":{"methods":{"method":[{"name":"(Globals)","code":"var boolFormFieldChanged = false;\nvar boolInserting = false;\nvar intMasterCallref = 0;\nvar strAttachedCallrefs = \"\";\n\n\n\/\/--\nfunction MF()\n{\n\treturn _swdoc.mainform;\n}\n\nfunction Issue()\n{\n\treturn _swdoc.swissues;\n}\n\n\/\/-- function to check mandaotry fields as this formw orks in wonderful ways so cant rely on system check\nfunction check_mandatory_fields()\n{\n\t\/\/-- check non-bound fields\n\tvar strCheckFields = _swdoc.MF().sys_nobinding_mandatory_checks.value;\n\tvar arrCheckFields = strCheckFields.split(\",\");\n\tfor(var x=0;x<arrCheckFields.length;x++)\n\t{\n\t\tvar arrCheck = arrCheckFields[x].split(\"^\");\n\t\tvar strFieldName = arrCheck[0];\n\t\tvar strFieldLabel = arrCheck[1];\n\t\t\n\t\tvar oEle = app.g.get_element_by_id(_swdoc.MF(),strFieldName);\n\t\tif(oEle!=null && oEle.mandatory && oEle.value==\"\")\n\t\t{\n\t\t\tMessageBox(\"The field '\" + strFieldLabel + \"' is a mandatory field and must be completed.\")\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tvar res = app.g.check_mandatory_fields(\"swissues\",_swdoc.MF(),false);\n\treturn res;\n}\n\/\/--\nfunction setup_form_elements(boolAfterSave)\n{\n\tif(!_swdoc.boolInserting)\n\t{\n\t\t\/\/-- updating\n\t\t_swdoc.strFormTitle = \"View\/Edit \" + _swdoc.swissues.issueref;\n\t}\n\telse \n\t{\n\t\t\/\/-- inserting\n\t\t_swdoc.strFormTitle = \"Create New\";\t\t\n\t\t_swdoc.swissues.issuetype = ISSUE_TYPE_HOT;\n\t\t_swdoc.Issue().status = ISSUE_STATUS_OPEN;\n\t\t\n\t\t_swdoc.Issue().starttimex = app.global.GetCurrentEpocTime();\n\t\t_swdoc.Issue().resolvebyx = app.global.GetCurrentEpocTime() + 3600;\n\t\t_swdoc.Issue().mastercallref = \"0\";\n\t\t_swdoc.Issue().rfc_callref= \"0\";\n\t\t_swdoc.Issue().description = \"\";\n\t\t\n\t\t_swdoc.check_passedin_calls();\n\t}\n\t\n\t\n\t\/\/-- set title and update form data then reset modified flag\n\tvar strStatus = dd.tables[\"swissues\"].columns[\"status\"].FormatValue(_swdoc.Issue().status);\n\t_swdoc.SetTitle(_swdoc.strFormTitle + \" (\" + strStatus + \")\");\n\t\n\t_swdoc.UpdateFormFromData();\n\t_swdoc.ResetModiedFlag(\"swissues\");\n\t\t\n\t\/\/-- setup the form\t\t\t\n\t_swdoc.setup_form_fields(boolAfterSave);\n\tif(!boolAfterSave)_swdoc.refresh_sqllists();\n}\n\n\/\/-- handle event where calls are being passed in\nfunction check_passedin_calls()\n{\n\tvar strLinkedCallrefs = _swdoc._form[\"callrefs\"];\t\n\tif(strLinkedCallrefs!=\"\")\n\t{\n\t\t_swdoc.boolFormFieldChanged = true;\n\t\t\n\t\tvar arrLinkedCallrefs = strLinkedCallrefs.split(\",\");\n\t\tvar intFirstCallref = arrLinkedCallrefs[0];\n\t\t\n\t\t\/\/-- set master callref and description\n\t\t_swdoc.Issue().mastercallref = intFirstCallref;\n\t\t\n\t\t\n    \tvar rsCall\t= new SqlQuery;\n    \tif(!rsCall.Query(\"SELECT prob_text FROM opencall WHERE callref = \" + intFirstCallref, \"sw_systemdb\"))\n    \t{\n     \t\tMessageBox(\"Unable to query opencall table on system database. Please contact your Supportworks Administrator.\", MB_ICONSTOP);\n     \t\treturn false;\n     \t}\n    \n\t    \/\/-- set the variable for use later in retrieving the issue summary and description\n    \tif(rsCall.Fetch())\n    \t{\n    \t\t_swdoc.Issue().description = rsCall.GetValueAsString(0);\n    \t}\t\t\n\t}\n\n}\n\n\/\/-- refresh sqllists\nfunction refresh_sqllists()\n{\n\t_swdoc.load_issue_calllist();\n\t_swdoc.load_issue_custlist();\n\t_swdoc.load_issue_assetlist();\n\t\/\/-- store attached callrefs\n\t_swdoc.strAttachedCallrefs = \t_swdoc.sl_listvalues(_swdoc.MF().sl_issuecallslist,0,false);\n}\n\nfunction load_issue_assetlist()\n{\n\tvar strAssetIds = _swdoc.sl_listvalues(_swdoc.MF().sl_issuecallslist,\"equipment\",true);\n\tif(strAssetIds==\"\")strAssetIds=\"-1\";\n\t\n\t_slf(_swdoc.MF().sl_asset , \"equipid in (\" +  strAssetIds + \")\");\n}\n\n\/\/-- using reocrds inthe call list determine which customers are impacted\nfunction load_issue_custlist()\n{\n\tvar strCallrefs = \"0\";\n\tvar strCustIDs = \"\";\n\tfor(var x=0; x < _swdoc.MF().sl_issuecallslist.rowCount(); x++)\n\t{\n\t\tvar strcustID = \"'\" + _swdoc.MF().sl_issuecallslist.GetItemTextRaw(x,'cust_id') + \"'\";\n\t\tif(strCustIDs.indexOf(strcustID)==-1)\n\t\t{\n\t\t\t\/\/-- not in list yet\n\t\t\tif(strCustIDs!=\"\")strCustIDs +=\",\";\n\t\t\tstrCustIDs += strcustID;\n\t\t\t\n\t\t\tif(strCallrefs!=\"\")strCallrefs += \",\";\n\t\t\tstrCallrefs += _swdoc.MF().sl_issuecallslist.GetItemTextRaw(x,'callref');\n\t\t}\n\t}\n\t\n\t_slf(_swdoc.MF().sl_affectedcustomerslist , \"callref in (\" + strCallrefs + \")\");\n\t\n}\n\nfunction load_issue_calllist()\n{\n\t\/\/-- Empty the _swdoc.Issue Calls List and affected customer lists\n\t_swdoc.MF().sl_issuecallslist.Reset();\n\t_swdoc.MF().sl_affectedcustomerslist.Reset(); \t\n\t_slf(_swdoc.MF().sl_issuecallslist , \"callref=-1\");\n\t_slf(_swdoc.MF().sl_affectedcustomerslist , \"callref=-1\");\n\t\n\t\/\/-- depending on mode depends on filter\n\tif(_swdoc.boolInserting)\n\t{\n\t\t\/\/-- filter the Calls List to show just the calls that are associated to this issue\n\t\tvar strLinkedCallrefs = _swdoc.strAttachedCallrefs;\t\t\n\t\tif(strLinkedCallrefs!=\"\")\n\t\t{\n\t\t\t_slf(_swdoc.MF().sl_issuecallslist , \"callref IN (\" + strLinkedCallrefs + \")\");\n\t\t}\n\t}\n\telse\n\t{\n\t\t_slf(_swdoc.MF().sl_issuecallslist , \"issueref = '\" + _swdoc.Issue().issueref + \"'\");\n\t}\n\t\t\t\n\treturn;\t\t\t\t\t\t\t\t\t\t\t\n}\n\nfunction setup_form_fields(boolAfterSave)\n{\n\tif(boolAfterSave==undefined)boolAfterSave=false;\n\t\/\/-- format rfc field\n\t_swdoc.set_rfccall_field();\n\t\n\t\/\/-- set the master call value\n\t_swdoc.set_mastercall_field();\n\t\/\/-- set the summary and desc fields\n\t_swdoc.set_issue_summarydescription(); \t\t\n\t\n\t\/\/-- show resolve tab details if type is know error - i.e. can only resolve an issue if you know that the cause is\n\tvar currTab = mainform.TabIssue.tab;\n\tvar boolShowRes = (_swdoc.Issue().issuetype==2);\n\t_swdoc.MF().TabIssue.ShowTabItem(4, boolShowRes);\n\tif(!boolShowRes && currTab==4)currTab=0;\n\t_etab(_swdoc.MF().TabIssue,currTab);\n\t_ema(_swdoc.MF().tb_ressum , (_swdoc.Issue().issuetype==2));\n\t_ema(_swdoc.MF().tb_resdesc,(_swdoc.Issue().issuetype==2));\n\n\t\/\/-- set rfc action button text\n\t _ete(_swdoc.MF().btnLogRFC , (_swdoc.Issue().rfc_callref>0)?\"View RFC\":\"Raise RFC\");\n\n\t\n\t\/\/-- setup the toolbar\n\t_swdoc.setup_form_toolbar();\n\t\n\tif(!boolAfterSave)\n\t{\n\t\t\/\/-- enable \/ disable flg to resolve incs\t \n\t\t_een(_swdoc.MF().flg_resolveincs,_swdoc.MF().btnResolveIssue.enable);\n\t\t_eva(_swdoc.MF().flg_resolveincs,(_swdoc.MF().flg_resolveincs.enable)?\"1\":\"0\");\t\n\t}\n}\n\nfunction set_mastercall_field()\n{\n\tvar strMasterCall = dd.tables[\"opencall\"].columns[\"callref\"].FormatValue(_swdoc.Issue().mastercallref);\n\t_eva(_swdoc.MF().tb_mastercall , (_swdoc.Issue().mastercallref==\"0\")?\"<Not Identified>\":strMasterCall);\n}\n\nfunction set_rfccall_field()\n{\n\tvar strRFCCall = dd.tables[\"opencall\"].columns[\"callref\"].FormatValue(_swdoc.Issue().rfc_callref);\n\t_eva(_swdoc.MF().tb_rfccallref , (_swdoc.Issue().rfc_callref==\"0\")?\"<Not Identified>\":strRFCCall);\n}\n\n\n\/\/-- spolit issue description and put into mainform\nfunction set_issue_summarydescription()\n{\n\tvar strTemp = new String(_swdoc.Issue().description);\n\tvar nLoc = strTemp.indexOf(\"\\n\");\n\tif(nLoc >= 0 && nLoc < strTemp.length)\n\t{\n\t\t_eva(_swdoc.MF().tb_summary , strTemp.substr(0,nLoc));;\n\t\t_eva(_swdoc.MF().tb_description , strTemp.substr(nLoc+1, strTemp.length - nLoc+1));\n\t}\n\telse\n\t{\n\t\t_eva(_swdoc.MF().tb_summary , \"\");\n\t\t_eva(_swdoc.MF().tb_description , strTemp);\n\t}\n}\n\n\/\/-- concat summary and description\nfunction merge_issue_description()\n{\n\tvar strTempDesc = _swdoc.MF().tb_summary.text + \"\\r\\n\" + _swdoc.MF().tb_description.text;\n\tif(_swdoc.Issue().description != strTempDesc)_swdoc.Issue().description = strTempDesc;\n\t\n\treturn _swdoc.Issue().description;\n}\n\nfunction setup_form_toolbar()\n{\n\t\/\/-- user permissions\n\tvar boolCanCreate = app.session.HaveRight(ANALYST_RIGHT_B_GROUP,ANALYST_RIGHT_B_CANCREATEISSUES);\n\tvar boolCanModify = app.session.HaveRight(ANALYST_RIGHT_B_GROUP,ANALYST_RIGHT_B_CANMODIFYISSUES);\n\tvar boolCanClose = app.session.HaveRight(ANALYST_RIGHT_B_GROUP,ANALYST_RIGHT_B_CANCLOSEISSUES);\n\tvar boolCanResolve = app.session.HaveRight(ANALYST_RIGHT_B_GROUP,ANALYST_RIGHT_B_CANRESOLVEISSUES);\n\tvar boolResovable = ( (_swdoc.Issue().status != ISSUE_STATUS_RESOLVED) && (_swdoc.Issue().issuetype==2))\n\t\n\t\t\n\t\/\/-- can they save the issue\n\tvar boolEnableInsertSave = ((boolCanCreate)&&(_swdoc.boolFormFieldChanged));\n\tvar boolEnableUpdateSave = ((boolCanModify)&&(_swdoc.boolFormFieldChanged));\n\t_een(_swdoc.MF().btnSaveIssue , (_swdoc.boolInserting)?boolEnableInsertSave:boolEnableUpdateSave);\n\n\t\/\/-- can they perform actions\n\t_een(_swdoc.MF().btnLogCall , ((!_swdoc.boolInserting) && (boolCanModify)));\n\t_een(_swdoc.MF().btnCloseIssue , ((!_swdoc.boolInserting) && (boolCanClose)));\t\n\t\/\/-- enable \/ disable flg to close incs\t \n\t_een(_swdoc.MF().flg_closeincs,_swdoc.MF().btnCloseIssue.enable);\n\t\n\t_een(_swdoc.MF().btnRemoveCall , ((boolCanModify) && (_swdoc.MF().sl_issuecallslist.curSel>-1)));\n\t_een(_swdoc.MF().btnAddCall , ( ((!_swdoc.boolInserting) && (boolCanModify)) || ((_swdoc.boolInserting) && (boolCanCreate)) ));\n\t\n\t\/\/-- is status not already set to resolve then enable button and type is known error\n\t_een(_swdoc.MF().btnResolveIssue , ((!_swdoc.boolInserting) && (boolCanResolve) && (boolResovable)));\n\t\n\t\/\/-- enable btnRFC if not pending - i.e. once logged\n\t_een(_swdoc.MF().btnLogRFC , (_swdoc.Issue().status!=ISSUE_STATUS_OPEN));\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ This checks a comma separated list of Call Refs and determines which ones \/\/\n\/\/ cannot be closed as they do not have a status from which a call can be closed. The \/\/\n\/\/ analyst will be alerted with a list of call refs that cannot be closed.\t\t\t  \/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nfunction CanCloseCalls(CallrefsCommaString)\n{\n\tvar strInvalidCallRefs = \"\";\n\tvar strValidCloseCallStatuses = \"1,2,3,5,6,7,8,9,10,11,12,13,14\";\n\tfor(var i=0; i < mainform.sl_issuecallslist.rowCount(); i++)\n\t{\n\t\tvar strStatus = mainform.sl_issuecallslist.GetItemTextRaw(i,1);\n\t\tstrStatus++;\n\t\tstrStatus--;\n\t\tswitch(strStatus)\n\t\t{\n\t\t\tcase CS_PENDING:\n\t\t\tcase CS_UNASSIGNED:\n\t\t\tcase CS_UNACCEPTED:\n\t\t\tcase CS_OFFHOLD:\n\t\t\tcase CS_ONHOLD:\n\t\t\tcase CS_RESOLVED:\n\t\t\tcase CS_ESCALATEDOWNER:\n\t\t\tcase CS_ESCALATEDGROUP:\n\t\t\tcase CS_ESCALATEDALL:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\tif(strInvalidCallRefs.length)\n\t\t\t\t\tstrInvalidCallRefs += \", \";\n\t\t\t\t\t\n\t\t\t\tstrInvalidCallRefs += mainform.sl_issuecallslist.GetItemText(i,0);\n\t\t\t\tstrInvalidCallRefs += \" (\" + mainform.sl_issuecallslist.GetItemText(i,1) + \")\";\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(strInvalidCallRefs.length)\n\t{\n\t\tMessageBox(\"The following calls cannot be closed due to them having invalid statuses. Please modify the(se) calls so that they can be closed or detach them from the issue before attempting to close it again.\\n(the valid statuses for closing calls attached to issues are \" \n\t\t+ strValidCloseCallStatuses + \"\\r\\n\\r\\n\" + strInvalidCallRefs, MB_ICONSTOP);\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\n\n\/\/--\n\/\/-- for a given slqlist return , string of values\nfunction sl_listvalues(oList,nCol,boolQuote)\n{\n\tvar strEncap = (boolQuote)?\"'\":\"\";\n\tvar strValueList = \"\";\n\tfor(var x=0; x < oList.rowCount();x++)\n\t{\n\t\tif(strValueList!=\"\")strValueList+=\",\"\n\t\tstrValueList += strEncap +  app.global.PrepareForSQL(oList.GetItemTextRaw(x,nCol)) + strEncap;\n\t\t\n\t}\n\treturn strValueList;\n}\n\nfunction ManuallyAcceptLinkedIssueCalls()\n{\n\t\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\t\/\/ -- New Code Added - DavidJH - 21.06.2005\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \/\/\n\t\/\/ This function is called from _swdoc.CloseIssue() as part of the process of closing an issue. \/\/ \n\t\/\/ This function has been added to check if any calls associated to this issue currently have the \/\/\n\t\/\/ status \"unassigned\" or \"unaccepted in which case they should be implicitly accepted by the     \/\/\n\t\/\/ analyst carrying out the operation before we close the call(s).  This resolves the problem     \/\/\n\t\/\/ where an issue and its related calls would fail to be closed when any one or more calls have   \/\/\n\t\/\/ an \"unassigned\" or \"unaccepted\" status\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \/\/\n\t\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\tvar swHDSession = new HelpdeskSession;\t\n\tif(swHDSession.Connect()) \n\t{\n\t\t\/\/-- Iterate through the list of calls associated to the issue\n\t\tfor(x=0; x<_swdoc.MF().sl_issuecallslist.rowCount();x++)\n\t\t{\n\t\t\t\/\/-- Get numeric callref from the current row in the _swdoc.Issue Calls List\n\t\t\tvar nCallRef = _swdoc.MF().sl_issuecallslist.GetItemTextRaw(x, 0) ;\n\t\t\n\t\t\t\/\/-- Get the call status string (e.g. \"Unaccepted\") for the current row in the _swdoc.Issue Calls List\n\t\t\tvar strCallStatus = _swdoc.MF().sl_issuecallslist.GetItemTextRaw(x, 1) ;\n\t\t\t\n\t\t\t\/\/-- If the call is currently unassigned or unaccepted then change the call status so that \n\t\t\t\/\/-- the call is implicitly accepted by the logged on analyst closing the issue\n\t\t\t\n\t\t\t\/\/-- NWJ - accept all calls that are not resolved or closed already\n\t\t\tif((strCallStatus != 6) || (strCallStatus < 15 ))\n\t\t\t{\n\t\t\t\tswHDSession.AcceptCall(nCallRef);\n\t\t\t} \n\t\t}\n\tswHDSession.Close();\t\t\n\t}\n}"},{"name":"OnFormLoading","code":"OnFormLoading(strFormName, strClass)\n{\n\tMessageBox(\"Issues are not supported in this application\");\n\treturn false;\n\n\t\/*\n\t\tCreated by Hornbill Systems\n\t\t\n\t\tUpdates\n\t\t-------\n\t\t\n\t\tCode\tBug\t\tDate\t\tAuthor\t\t\t\t\tDescription\n\t\t-----------------------------------------------------------------------------------------\n\t\tind01\t57263\t17\/05\/07\tIvan Nicholas Dorosh\tEnsure that status is still open\n\t\n\t*\/\n\t\n\t\/\/ind01 - query the cache for updated information\n\t\/\/Recover status from cache if exists as their database may not refresh quickly enough.\n\t\n\tif (_swdoc.swissues.issueref) {\n\t\n\t\tvar conCache = new SqlQuery;\n\t\t\n\t\t\/\/ query the database\n\t\tvar strSQL = \"\";\n\t\tstrSQL = \"SELECT * FROM swissues WHERE issueref = '\"+_swdoc.swissues.issueref+\"'\";\n\t\tconCache.Query(strSQL, \"sw_systemdb\");\n\t\t\n\t\t\/\/Check if \"swissues\" is still in the cache\n\t\t\n\t\tif(!conCache.Fetch())\n\t\t{\n\t\t\t\t\/\/This call must be closed\n\t\t\t\tMessageBox(\"This issue has been closed since your Supportworks Today page was last updated.\\nPlease refresh this page to review your current issues\");\n\t\t\t\treturn false;\n\n\t\t}\n\t\tconCache.Reset();\n\t}\n\t_swdoc.strAttachedCallrefs = _swdoc._form[\"callrefs\"];\n\treturn true;\n}"},{"name":"OnLoadRecord","code":"OnLoadRecord(strTable, strKeyValue)\n{\n\t\/\/-- Attempt to the load the record data from cache to avoid the time delay \n\t\/\/-- in retrieving the data from the database.  If this is not successful then \n\t\/\/-- we return true to continue with the load from the database\n\tif(_swdoc.LoadRecordData(\"syscache\", strTable, strKeyValue))return false;\n\t\t\n\treturn true;\n\t\t\n}"},{"name":"OnFormClosing","code":"OnFormClosing()\n{\n\t\/\/-- remove from global _swdoc array\n\tapp.g.remove_me_document(\"issue\",_swdoc.Issue().issueref);\n\n\treturn true;\n}"}]}}},"layouts":{"layout":[{"appearance":{"width":"624","height":"393","backgroundColor":"#ffffff","fillColour":"#ffffff","textColour":"#000000","font":{"@size":"8","#text":"Arial"}},"controls":{"control":[{"general":{"name":"CaptionPanel2","type":"CaptionBar","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"true","hasCheckbox":"false"}},"appearance":{"index":"0","caption":"Options","backgroundColor":"#f1f1f1","foregroundColor":"#003366","font":{"@size":"10","@bold":"1","#text":"Trebuchet (MS)"},"alignment":"Left","fillStyle":"Vertical Gradient"},"objectPlacement":{"position":{"top":"29","left":"2","right":"421","bottom":"170"},"scaling":{"top":"0","left":"0","right":"50","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor2":"#d8d8d8","imageHSpace":"10","slope":"12","borderColor":"#d3c9b6","headerHeight":"23","hasBorder":"1","panelBorderColor":"#d3c9b6","fillStyle":"0","panelBackgroundColor":"#f2eedd","panelBackgroundColor2":"#000000"}}},{"general":{"name":"tb_issuetype","type":"Field"},"appearance":{"index":"1","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"73","left":"11","right":"218","bottom":"91"},"scaling":{"top":"0","left":"0","right":"50","bottom":"0"}},"data":{"binding":"swissues.issuetype"},"controlInfo":{"mouseOverCursor":"Window Default","type":"Pick List (Numeric Mode)","flags":{"invisible":"false","readOnly":"false","mandatory":"true","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","readOnlyInit":"false","comboAutoUpdate":"false","comboNewValues":"true","useDDPickList":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","disabledBackgroundColor":"#eeeeee","listItems":"Problem^1|Known Error^2|","defaultValue":"1","borderColor":"#c0c0c0"}}},{"general":{"name":"dt_starttime","type":"Field"},"appearance":{"index":"2","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"73","left":"227","right":"387","bottom":"91"},"scaling":{"top":"0","left":"50","right":"50","bottom":"0"}},"data":{"binding":"swissues.starttimex"},"controlInfo":{"mouseOverCursor":"Window Default","type":"Date\/Time Control","flags":{"invisible":"false","readOnly":"false","mandatory":"true","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","colorDateIndicator":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","disabledBackgroundColor":"#eeeeee","dateFormatMode":"0","borderColor":"#c0c0c0"}}},{"general":{"name":"dt_resolvetime","type":"Field"},"appearance":{"index":"3","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"110","left":"227","right":"387","bottom":"128"},"scaling":{"top":"0","left":"50","right":"50","bottom":"0"}},"data":{"binding":"swissues.resolvebyx"},"controlInfo":{"mouseOverCursor":"Window Default","type":"Date\/Time Control","flags":{"invisible":"false","readOnly":"false","mandatory":"true","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"true","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","colorDateIndicator":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","disabledBackgroundColor":"#eeeeee","dateFormatMode":"0","borderColor":"#c0c0c0"}}},{"general":{"name":"CaptionPanel3","type":"CaptionBar","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"true","hasCheckbox":"false"}},"appearance":{"index":"4","caption":"Actions","backgroundColor":"#f1f1f1","foregroundColor":"#003366","font":{"@size":"10","@bold":"1","#text":"Trebuchet (MS)"},"alignment":"Left","fillStyle":"Vertical Gradient"},"objectPlacement":{"position":{"top":"29","left":"427","right":"620","bottom":"170"},"scaling":{"top":"0","left":"50","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor2":"#d8d8d8","imageHSpace":"10","slope":"12","borderColor":"#d3c9b6","headerHeight":"23","hasBorder":"1","panelBorderColor":"#d3c9b6","fillStyle":"0","panelBackgroundColor":"#f2eedd","panelBackgroundColor2":"#000000"}}},{"general":{"name":"CaptionPanel1","type":"CaptionBar","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"true","hasCheckbox":"false"}},"appearance":{"index":"5","caption":"Summary","backgroundColor":"#f1f1f1","foregroundColor":"#003366","font":{"@size":"10","@bold":"1","#text":"Trebuchet (MS)"},"alignment":"Left","fillStyle":"Vertical Gradient"},"objectPlacement":{"position":{"top":"175","left":"2","right":"620","bottom":"391"},"scaling":{"top":"0","left":"0","right":"100","bottom":"100"}},"controlInfo":{"mouseOverCursor":"Window Default","properties":{"backgroundColor2":"#d8d8d8","imageHSpace":"10","slope":"12","borderColor":"#d3c9b6","headerHeight":"23","hasBorder":"1","panelBorderColor":"#d3c9b6","fillStyle":"0","panelBackgroundColor":"#f2eedd","panelBackgroundColor2":"#000000"}}},{"general":{"name":"tb_summary","type":"Field","group":"TabIssue:0"},"appearance":{"index":"6","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"244","left":"18","right":"607","bottom":"262"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"true","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","disabledBackgroundColor":"#eeeeee","borderColor":"#c0c0c0"}}},{"general":{"name":"tb_description","type":"Field","group":"TabIssue:0"},"appearance":{"index":"7","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"283","left":"18","right":"607","bottom":"375"},"scaling":{"top":"0","left":"0","right":"100","bottom":"100"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"true","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"true","url":"false"},"textLineCount":"4","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","disabledBackgroundColor":"#eeeeee","borderColor":"#c0c0c0"}}},{"general":{"name":"flg_markpublic","type":"Field","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"8","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"},"borderStyle":"None"},"objectPlacement":{"position":{"top":"57","left":"430","right":"620","bottom":"75"},"scaling":{"top":"0","left":"50","right":"100","bottom":"0"}},"data":{"binding":"swissues.flags"},"controlInfo":{"mouseOverCursor":"Window Default","type":"Form Flags","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","readOnlyInit":"false","comboAutoUpdate":"false","comboNewValues":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","flagItems":"Display in SelfService^1|","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"TabIssue","type":"TabControl","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"9","caption":"Tab1","backgroundColor":"#ded7ce","foregroundColor":"#ffffff","font":{"@size":"8","#text":"Arial"},"borderStyle":"None"},"objectPlacement":{"position":{"top":"204","left":"8","right":"615","bottom":"385"},"scaling":{"top":"0","left":"0","right":"100","bottom":"100"}},"tabStyle":"Top","tabSize":"19","items":{"item":[{"name":"Problem Details","properties":"56=#d1e0ee|_flags=0","textBorder":"None","textBackgroundColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","properties":{"tabColor":"#d1e0ee"}}},{"name":"Associated Incidents","properties":"56=#ffcc66|_flags=0","textBorder":"None","textBackgroundColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","properties":{"tabColor":"#ffcc66"}}},{"name":"Affected Customers","properties":"56=#c2cca2|_flags=0","textBorder":"None","textBackgroundColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","properties":{"tabColor":"#c2cca2"}}},{"name":"Affected Assets","properties":"56=#baa6e1|_flags=0","textBorder":"None","textBackgroundColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","properties":{"tabColor":"#baa6e1"}}},{"name":"Resolution Details","properties":"56=#f09e9f|_flags=0","textBorder":"None","textBackgroundColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","properties":{"tabColor":"#f09e9f"}}}]},"selectedTextFont":{"@size":"8","#text":"Arial"},"selectedTextColor":"#000000","deselectedTextColor":"#000000","tabSlopeLeft":"2","tabSlopeRight":"2","deselectedTabHeightOffset":"1","tabSpacing":"0","controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","multiLine":"false"},"properties":{"tabStyle":"0"}}},{"general":{"name":"btnSaveIssue","type":"EventButton","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"10","caption":"Save","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"}},"objectPlacement":{"position":{"top":"1","left":"3","right":"59","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"true","protected":"true","noMacroExpand":"false","multiLine":"false"},"properties":{"eventButtonIcon":"ImageList=Issue;IconIndex=0","backgroundColor":"#ff9900"}}},{"general":{"name":"btnAddCall","type":"EventButton","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"11","caption":"Add Incident(s)","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"}},"objectPlacement":{"position":{"top":"1","left":"66","right":"177","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","multiLine":"false"},"properties":{"eventButtonIcon":"ImageList=Issue;IconIndex=1","backgroundColor":"#ff9900"}}},{"general":{"name":"btnRemoveCall","type":"EventButton","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"12","caption":"Remove Incident(s)","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"}},"objectPlacement":{"position":{"top":"1","left":"177","right":"303","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"true","protected":"true","noMacroExpand":"false","multiLine":"false"},"properties":{"eventButtonIcon":"ImageList=Issue;IconIndex=2","backgroundColor":"#ff9900"}}},{"general":{"name":"btnLogCall","type":"EventButton","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"13","caption":"Log Incident","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"}},"objectPlacement":{"position":{"top":"1","left":"303","right":"397","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"true","protected":"true","noMacroExpand":"false","multiLine":"false"},"properties":{"eventButtonIcon":"ImageList=Issue;IconIndex=3","backgroundColor":"#ff9900"}}},{"general":{"name":"btnCloseIssue","type":"EventButton","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"14","caption":"Close","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"}},"objectPlacement":{"position":{"top":"1","left":"565","right":"624","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"true","protected":"true","noMacroExpand":"false","multiLine":"false"},"properties":{"eventButtonIcon":"ImageList=Issue;IconIndex=4","backgroundColor":"#ff9900"}}},{"general":{"name":"lbl_summary","type":"Text","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"},"group":"TabIssue:0"},"appearance":{"index":"15","caption":"Summary","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"227","left":"13","right":"69","bottom":"241"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"lbl_description","type":"Text","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"},"group":"TabIssue:0"},"appearance":{"index":"16","caption":"Description","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"265","left":"13","right":"213","bottom":"279"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"btn_SetMasterCall","type":"EventButton","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"},"group":"TabIssue:1"},"appearance":{"index":"17","caption":"Set as Master","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"}},"objectPlacement":{"position":{"top":"235","left":"508","right":"608","bottom":"259"},"scaling":{"top":"0","left":"100","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"true","protected":"true","noMacroExpand":"false","multiLine":"false"}}},{"general":{"name":"sl_issuecallslist","type":"SqlTable","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false","showHeader":"true","verticalGridLines":"true","horizontalGridLines":"true","autoLoad":"true","allowMultiSelect":"false"},"group":"TabIssue:1"},"appearance":{"index":"18","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"235","left":"18","right":"502","bottom":"375"},"scaling":{"top":"0","left":"0","right":"100","bottom":"100"}},"columns":{"controlInfo":[{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"callref"},"name":"Reference","width":"120","image":"-1","dataColumn":"0"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"status"},"name":"Status","width":"120","image":"-1","dataColumn":"1"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"itsm_title"},"name":"Summary","width":"199","image":"-1","dataColumn":"2"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"companyname"},"name":"Organisation","width":"120","image":"-1","dataColumn":"3"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"cust_name"},"name":"Customer Name","width":"120","image":"-1","dataColumn":"4"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"true","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"cust_id"},"name":"Cust ID","width":"120","image":"-1","dataColumn":"5"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"true","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"equipment"},"name":"EquipID","width":"120","image":"-1","dataColumn":"6"}]},"sortColumn":"2","sortDescending":"true","headerHeight":"16","rowHeight":"16","selectedColor":"#00008b","selectedTextColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","multiLine":"false"},"properties":{"sqlSource":"syscache","table":"opencall","listFilter":"callref=-1","borderColor":"#c0c0c0"}}},{"general":{"name":"sl_affectedcustomerslist","type":"SqlTable","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false","showHeader":"true","verticalGridLines":"true","horizontalGridLines":"true","autoLoad":"true","allowMultiSelect":"false"},"group":"TabIssue:2"},"appearance":{"index":"19","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"235","left":"17","right":"608","bottom":"375"},"scaling":{"top":"0","left":"0","right":"100","bottom":"100"}},"columns":{"controlInfo":[{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"cust_id"},"name":"Customer ID","width":"150","image":"-1","dataColumn":"0"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"cust_name"},"name":"Customer Name","width":"223","image":"-1","dataColumn":"1"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"companyname"},"name":"Organisation","width":"192","image":"-1","dataColumn":"2"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"site"},"name":"Site","width":"171","image":"-1","dataColumn":"3"}]},"sortColumn":"1","sortDescending":"false","headerHeight":"16","rowHeight":"16","selectedColor":"#00008b","selectedTextColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","multiLine":"false"},"properties":{"sqlSource":"syscache","table":"opencall","listFilter":"callref in (0)","borderColor":"#c0c0c0"}}},{"general":{"name":"Label1","type":"FieldName","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"20","caption":"Resolve By","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"94","left":"225","right":"287","bottom":"106"},"scaling":{"top":"0","left":"50","right":"50","bottom":"0"}},"data":{"binding":"swissues.resolvebyx"},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"Label3","type":"FieldName","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"21","caption":"Started on","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"57","left":"225","right":"337","bottom":"69"},"scaling":{"top":"0","left":"50","right":"50","bottom":"0"}},"data":{"binding":"swissues.starttimex"},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"Label4","type":"FieldName","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"22","caption":"Master Incident Reference","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"94","left":"8","right":"218","bottom":"108"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"data":{"binding":"swissues.mastercallref"},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"Label5","type":"FieldName","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"23","caption":"Type","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"57","left":"9","right":"82","bottom":"69"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"data":{"binding":"swissues.issuetype"},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"tb_mastercall","type":"Field"},"appearance":{"index":"24","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"110","left":"11","right":"218","bottom":"128"},"scaling":{"top":"0","left":"0","right":"50","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"true","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"content":"#eeeeee","disabledBackgroundColor":"#eeeeee","borderColor":"#c0c0c0"}}},{"general":{"name":"btnResolveIssue","type":"EventButton","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"25","caption":"Resolve","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"}},"objectPlacement":{"position":{"top":"1","left":"494","right":"564","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"true","protected":"true","noMacroExpand":"false","multiLine":"false"},"properties":{"eventButtonIcon":"ImageList=Issue;IconIndex=4","backgroundColor":"#ff9900"}}},{"general":{"name":"Rect1","type":"Rectange","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"26","backgroundColor":"#d4d0c8","foregroundColor":"#dddddd","font":{"@size":"0"},"borderStyle":"Rectangle","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"-1","left":"0","right":"629","bottom":"24"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"tb_resdesc","type":"Field","group":"TabIssue:4"},"appearance":{"index":"27","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"290","left":"18","right":"607","bottom":"375"},"scaling":{"top":"0","left":"0","right":"100","bottom":"100"}},"data":{"binding":"swissues.solution"},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"true","url":"false"},"textLineCount":"4","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","disabledBackgroundColor":"#eeeeee","borderColor":"#c0c0c0"}}},{"general":{"name":"Text2","type":"Text","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"},"group":"TabIssue:4"},"appearance":{"index":"28","caption":"Resolution Profiling :","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"},"alignment":"Right","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"268","left":"124","right":"230","bottom":"286"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"lb_resprofile","type":"Field","group":"TabIssue:4"},"appearance":{"index":"29","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"268","left":"235","right":"607","bottom":"286"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"data":{"binding":"swissues.rescode"},"controlInfo":{"mouseOverCursor":"Window Default","type":"Distinct Pick List","flags":{"invisible":"false","readOnly":"true","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","comboAutoUpdate":"false","comboNewValues":"false","pickListOrderDesc":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"hintText":"Select a resolution profile for this known error","activeTextColor":"#eeeeee","disabledBackgroundColor":"#eeeeee","borderColor":"#c0c0c0","sqlSource":"swdata","distinctTable":"rcdesc","distinctColumn":"code","displayColumn":"info","dropdownButtonType":"1"}}},{"general":{"name":"Text3","type":"Text","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"},"group":"TabIssue:4"},"appearance":{"index":"30","caption":"Solution","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"268","left":"14","right":"86","bottom":"286"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"tb_ressum","type":"Field","group":"TabIssue:4"},"appearance":{"index":"31","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"244","left":"18","right":"607","bottom":"262"},"scaling":{"top":"0","left":"0","right":"100","bottom":"0"}},"data":{"binding":"swissues.solutionsummary"},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","disabledBackgroundColor":"#eeeeee","borderColor":"#c0c0c0"}}},{"general":{"name":"Label6","type":"FieldName","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"32","caption":"RFC Reference","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"132","left":"8","right":"218","bottom":"146"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"data":{"binding":"swissues.rfc_callref"},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"tb_rfccallref","type":"Field"},"appearance":{"index":"33","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"148","left":"11","right":"218","bottom":"166"},"scaling":{"top":"0","left":"0","right":"50","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"true","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"content":"#eeeeee","disabledBackgroundColor":"#eeeeee","borderColor":"#c0c0c0"}}},{"general":{"name":"Label7","type":"FieldName","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"},"group":"TabIssue:4"},"appearance":{"index":"34","caption":"Resolution Summary","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"227","left":"13","right":"223","bottom":"241"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"data":{"binding":"swissues.solutionsummary"},"controlInfo":{"mouseOverCursor":"Window Default"}},{"general":{"name":"tb_nobinding_mandatory_checks","type":"Field"},"appearance":{"index":"35","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"548","left":"132","right":"843","bottom":"596"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"true","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"true","url":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"borderColor":"#d3c9b6","image":"#eeeeee","hintText":"add comma seperated field names and label to use in mandatory check on non bound fields i.e. tb_summary^Summary,tb_description^description","defaultValue":"tb_summary^Summary,tb_description^Description","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"sys_nobinding_mandatory_checks","type":"Text"},"appearance":{"index":"36","caption":"tb_summary^Summary,tb_description^Description","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Arial"},"alignment":"Left","borderStyle":"None","fillStyle":"Solid"},"objectPlacement":{"position":{"top":"443","left":"132","right":"843","bottom":"546"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"true","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","multiLine":"true"}}},{"general":{"name":"sl_asset","type":"SqlTable","flags":{"transparent":"false","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false","showHeader":"true","verticalGridLines":"true","horizontalGridLines":"true","autoLoad":"false","allowMultiSelect":"false"},"group":"TabIssue:3"},"appearance":{"index":"37","backgroundColor":"#ffffff","foregroundColor":"#333333","font":{"@size":"8","#text":"Trebuchet MS"},"borderStyle":"Rectangle"},"objectPlacement":{"position":{"top":"235","left":"17","right":"608","bottom":"375"},"scaling":{"top":"0","left":"0","right":"100","bottom":"100"}},"columns":{"controlInfo":[{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"equipid"},"name":"Asset ID","width":"120","image":"-1","dataColumn":"0"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"asset_title"},"name":"Description","width":"187","image":"-1","dataColumn":"1"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"generic"},"name":"Generic Type","width":"136","image":"-1","dataColumn":"2"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"currstatus"},"name":"Status","width":"120","image":"-1","dataColumn":"4"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"manufactur"},"name":"Make","width":"120","image":"-1","dataColumn":"5"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"model"},"name":"Model","width":"120","image":"-1","dataColumn":"6"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"serialno"},"name":"Serial No.","width":"120","image":"-1","dataColumn":"7"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"companyname"},"name":"Organisation","width":"120","image":"-1","dataColumn":"8"},{"mouseOverCursor":"Window Default","type":"Text Edit","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"false","noMacroExpand":"false","readOnlyInit":"false","autoCompleteField":"false","editUnlimitedText":"false","url":"false","hidden":"false","allowResize":"true","allowSort":"true"},"textLineCount":"0","textInputFormat":"Text","properties":{"column":"owner"},"name":"Owner","width":"120","image":"-1","dataColumn":"9"}]},"sortColumn":"1","sortDescending":"false","headerHeight":"16","rowHeight":"16","selectedColor":"#000099","selectedTextColor":"#ffffff","controlInfo":{"mouseOverCursor":"Window Default","properties":{"sqlSource":"swdata","table":"equipmnt","listFilter":"equipid='-1'","newRecordForm":"TfAsset","editRecordForm":"Form.TfAsset","controlGroup":"`","borderColor":"#c0c0c0"}}},{"general":{"name":"flg_resolveincs","type":"Field","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"38","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"},"borderStyle":"None"},"objectPlacement":{"position":{"top":"77","left":"430","right":"620","bottom":"95"},"scaling":{"top":"0","left":"50","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Form Flags","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","readOnlyInit":"false","comboAutoUpdate":"false","comboNewValues":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","flagItems":"Resolve associated incidents^1|","defaultValue":"1","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"flg_closeincs","type":"Field","flags":{"transparent":"true","xpStyle":"false","hasShadow":"false","toolbarButtonStyle":"false","cache":"false","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"39","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"},"borderStyle":"None"},"objectPlacement":{"position":{"top":"97","left":"430","right":"620","bottom":"115"},"scaling":{"top":"0","left":"50","right":"100","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","type":"Form Flags","flags":{"invisible":"false","readOnly":"false","mandatory":"false","mandatoryLabelBackground":"false","mandatoryLabelText":"false","allowNullValue":"false","skipTabStop":"false","disabled":"false","protected":"true","noMacroExpand":"false","readOnlyInit":"false","comboAutoUpdate":"false","comboNewValues":"false"},"textLineCount":"0","textInputFormat":"Text","properties":{"activeTextColor":"#eeeeee","flagItems":"Close associated incidents^1|","defaultValue":"0","disabledBackgroundColor":"#eeeeee"}}},{"general":{"name":"btnLogRFC","type":"EventButton","flags":{"transparent":"false","xpStyle":"true","hasShadow":"false","toolbarButtonStyle":"true","cache":"true","hasBorder":"false","hasCheckbox":"false"}},"appearance":{"index":"40","caption":"Raise RFC","backgroundColor":"#ffffff","foregroundColor":"#000000","font":{"@size":"8","#text":"Trebuchet MS"}},"objectPlacement":{"position":{"top":"1","left":"400","right":"481","bottom":"24"},"scaling":{"top":"0","left":"0","right":"0","bottom":"0"}},"controlInfo":{"mouseOverCursor":"Window Default","flags":{"invisible":"false","skipTabStop":"false","disabled":"true","protected":"false","noMacroExpand":"false","multiLine":"false"},"properties":{"eventButtonIcon":"ImageList=Helpdesk Tools;IconIndex=0","backgroundColor":"#ff9900"}}}]},"javascript":{"methods":{"method":[{"name":"btnAddCall_OnPressed","code":"btnAddCall_OnPressed()\n{\n\t\/\/-- Check that there is an _swdoc.Issue Reference to attach call to, if not then quit\n\t\/\/if(_swdoc.swissues.issueref.length == 0)\n\t\/\/return false;\n\n\n\t\/\/-- open select calls dialog so user can select 1 or more calls to add to the issue\n\tvar strURL = \"in_filter=callclass='Incident'\";\n\tvar oForm = app.OpenForm(\"browse_calls\", strURL, true);\n\tif (oForm.document.strselectedpfskeys==\"\") return;\n\n\tvar strCommaSepCallrefs = oForm.document.strselectedpfskeys;\n\t\n\t\/\/-- can add calls when inserting - we just update them when we create the issue\n\tif(_swdoc.boolInserting)\n\t{\n\t\t\/\/-- add calls to list then get out\n\t\tif(_swdoc.strAttachedCallrefs!=\"\")_swdoc.strAttachedCallrefs+=\",\";\n\t\t_swdoc.strAttachedCallrefs += strCommaSepCallrefs\n\t\t_swdoc.refresh_sqllists();\n\t}\n\telse\n\t{\n\t\t\/\/-- Check that we have a HelpdeskSession connection to attach the call, if not then quit\t\n\t\tvar con = new HelpdeskSession;\n\t\tif(!con.Connect())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\n\t\t\/\/-- Add the call(s) to the issue, if this fails then close the connection and quit\n\t\tif(con.AddCallToIssue(_swdoc.swissues.issueref, strCommaSepCallrefs))\n\t\t{\n\t\t\t_swdoc.refresh_sqllists();\n\t\t}\n\t\n\t\t\/\/-- If call successfully added to _swdoc.Issue then we close the HelpdeskSession connection here\n\t\tcon.Close();\n\t}\n\t\t\n\t\/\/ If there is only one call now in the list then it must be the one we have just added so\n\t\/\/ we will make this the master call....\n\t\/\/ -- OR --\n\t\/\/ If there is more than one call in the list but the mastercall record is not set then make\n\t\/\/ the lowest numbered call the master call record\n\tif((sl_issuecallslist.rowCount() == 1) || ((sl_issuecallslist.rowCount() > 1) && ((tb_mastercall.text == \"\") || (tb_mastercall.text == \"<Not Identified>\"))))\n\t{\n\t\t_ete(tb_mastercall , sl_issuecallslist.GetItemText(0,0));\n\t\t_swdoc.swissues.mastercallref = sl_issuecallslist.GetItemTextRaw(0,0);\n\t}\t\t\n\t\n}"},{"name":"btnRemoveCall_OnPressed","code":"btnRemoveCall_OnPressed()\n{\n\t\/\/-- Set a control variable to determine if we are removing the master call, default it to false\n\tvar boolRemovingMasterCall = false;\n\tvar intSelectedCall = sl_issuecallslist.GetItemTextRaw(sl_issuecallslist.curSel, 0);\n\t\/\/-- just remove from list (not in db yet)\n\tsl_issuecallslist.RemoveRow(sl_issuecallslist.curSel);\n\n\tif(_swdoc.boolInserting)\n\t{\n\t\t_swdoc.strAttachedCallrefs = _swdoc.sl_listvalues(sl_issuecallslist,0,false);\n\t}\n\telse\n\t{\n\t\t\/\/-- remove the call using helpdesk\n\t\tvar con = new HelpdeskSession;\n\t\tif(!con.Connect())return false;\n\t\t\n\t\t\/\/-- Remove call(s) from the _swdoc.Issue\n\t\tcon.RemoveCallFromIssue(_swdoc.swissues.issueref, intSelectedCall);\n\t\tcon.Close();\n\t}\n\t\n\t\/\/--\n\t\/\/-- removing master call\n\tif(intSelectedCall==_swdoc.swissues.mastercallref)\n\t{\n\t\t\/\/-- need to set a new master call if any rows left\n\t\tvar intCallref\t= 0;\n\t\tvar strCallref = \"<Not Identified>\";\n\t\tif(sl_issuecallslist.rowCount()>0)\t\t\n\t\t{\n\t\t\tintCallref = sl_issuecallslist.GetItemTextRaw(0, 0);\n\t\t\tstrCallref = sl_issuecallslist.GetItemText(0, 0);\n\t\t}\n\n\t\t_ete(tb_mastercall , strCallref);\n\t\t_swdoc.swissues.mastercallref = intCallref;\n\n\t\t_swdoc.boolFormFieldChanged = true;\n\t}\n\t\n\t_swdoc.refresh_sqllists();\n\t_swdoc.setup_form_toolbar();\t\n}"},{"name":"btnCloseIssue_OnPressed","code":"btnCloseIssue_OnPressed()\n{\n\t\t\/*\n\t\tCreated by Hornbill Systems\n\t\t\n\t\tUpdates\n\t\t-------\n\t\t\n\t\tCode\tBug\t\tDate\t\tAuthor\t\t\t\t\tDescription\n\t\t-----------------------------------------------------------------------------------------\n\t\tind01\t57263\t17\/05\/07\tIvan Nicholas Dorosh\tEnsure that status is still open\n\t\tind02 \t75416 \t18\/05\/07\tIvan Nicholas Dorosh\tSaveIssue() is not a recognised javascript function.\n\t\tnwj01\tn\/a\t\t03\/02\/09\tNeil Wheeler-Jones\t\tadded flag check to see if we want to close incidents\n\t*\/\n\t\n\t\/\/ind01 - query the cache for updated information\n\t\/\/Recover status from cache if exists as their database may not refresh quickly enough.\n\tif (_swdoc.swissues.issueref) {\n\t\n\t\tvar conCache = new SqlQuery;\n\t\t\n\t\t\/\/ query the database\n\t\tvar strSQL = \"\";\n\t\tstrSQL = \"SELECT * FROM swissues WHERE issueref = '\"+_swdoc.swissues.issueref+\"'\";\n\t\tconCache.Query(strSQL, \"sw_systemdb\");\n\t\t\n\t\t\/\/Check if \"swissues\" is still in the cache\n\t\tif(!conCache.Fetch())\n\t\t{\n\t\t\t\t\/\/This call must be closed\n\t\t\t\tMessageBox(\"This record has been closed since you loaded this form.\\n\\nPlease close this form and refresh your Supportworks\\nToday page to review your current issues.\");\n\t\t\t\treturn false;\n\n\t\t}\n\t\tconCache.Reset();\n\t}\n\t\n\t\n\t\/\/-- should never be true\n\tif(_swdoc.swissues.issueref.length == 0)return true;\n\n\t\/\/-- mandatory fields check\n\tif(_swdoc.check_mandatory_fields()==false) return false;\n\n\t\t\t\n\t\/\/-- If there are calls associated to this _swdoc.Issue\n\t\/\/ nwj01 - if(_swdoc.strAttachedCallrefs!=\"\")\n\tif((_swdoc.strAttachedCallrefs!=\"\") &&(_swdoc.MF().flg_closeincs.value==\"1\"))\n\t{\n\t\t\/\/-- Unlock call(s) associated to this issue\n\t\tapp.global.UnlockCalls(_swdoc.strAttachedCallrefs);\n\t\t\n\t\t\/\/-- Line Added DavidJH - 21.06.2005\n\t\t\/\/-- Accept any unassigned or unaccepted calls (if there are any) to enable the issue to be closed\n\t\t_swdoc.ManuallyAcceptLinkedIssueCalls();\n\t\t\n\t\t\/\/-- If call(s) cannot be closed then quit\n\t\tif(!_swdoc.CanCloseCalls(_swdoc.strAttachedCallrefs))return false\n\t\t\n\t\t\/\/-- Set the text to be used in the resolve\/close form\n\t\tvar strCloseUpdateText = \"Incident closed as part of known error \" + _swdoc.swissues.issueref;\n\t\t\t\n\t\t\/\/-- Open the resolve\/close form with the text set above (strCloseUpdateText) and the _swdoc.Issue Ref to be closed\t\n\t\tapp.OpenCallResolveCloseForm(_swdoc.strAttachedCallrefs, strCloseUpdateText, strCloseUpdateText, \"\", _swdoc.swissues.issueref);\n\t\treturn true\n\t}\n\telse \/\/-- No calls associated to this _swdoc.Issue so we simply set _swdoc.Issue Status to \"Closed\" and save change\n\t{\t\n\t\t_swdoc.swissues.status = ISSUE_STATUS_CLOSED;\n\t\t\/\/IND02  original line of code: return _swdoc.SaveIssue(); - \n\t\t\n\t\t\/\/IND02 Replaced above to:\n\t\t\/\/IND02 this save, only saves to swdata not the cache\n\t\t_swdoc.Save();\n\t\t\n\t\t\/* IND01 \n\t\t\n\t\t\/\/ I applied the functionality below, however it has been hidden from 5005 API so \n\t\t   I am implementing temporary fix, with myHDSession.BeginUpdateIssue\n\t\t\t\t\n\t\tvar str_issueref = \"'\"+_swdoc.swissues.issueref+\"'\";\t\n\t\tvar myHDSession = new HelpdeskSession;\n\t\tif (myHDSession.Connect()){\n\t\t\tmyHDSession.BeginCloseIssue(str_issueref);\n\t\t\tmyHDSession.Commit();\n\t\t\n\t\t\t\/\/Close the connection.\n\t\t\tmyHDSession.Close();\n\t\t}\n\t\t*\/\n\t\t\/\/Implemented using:\n\t\t\/\/Connect to the server.\n\t\t \n\t\tvar str_issueref = _swdoc.swissues.issueref; \/\/\n\t\t\t\n\t\tvar myHDSession = new HelpdeskSession;\n\t\tif (myHDSession.Connect())\n\t\t{\n\t\t\tmyHDSession.BeginCloseIssue(str_issueref);\n\t\t\tmyHDSession.Commit();\n\t\t\t\t\n\t\t\t\/\/Close the connection.\n\t\t\tmyHDSession.Close();\n\t\t}\n\t\t\n\t\tCloseForm();\n\t\treturn true;\n\t\t\/\/ind02 end\n\t}\n\n}"},{"name":"btn_SetMasterCall_OnPressed","code":"btn_SetMasterCall_OnPressed()\n{\n\t\/\/-- NWJ - If a call is selected set it as the master call\n\tif(sl_issuecallslist.curSel==-1) \n\t{\n\t\tMessageBox(\"Please select a call to set as the master call for this issue.\");\n\t\treturn;\n\t}\n\t\n\t\/\/-- get text and int\n\tvar intCallref = sl_issuecallslist.GetItemTextRaw(sl_issuecallslist.curSel, 0);\n\tvar strCallref = sl_issuecallslist.GetItemText(sl_issuecallslist.curSel, 0);\n\t\n\t\/\/-- set tb value & databinding\n\t_ete(tb_mastercall , strCallref);\n\t_swdoc.swissues.mastercallref = intCallref;\n\t\t\t\n\t\/\/-- Change flag to signal that a save is required to complete the change\n\t_swdoc.boolFormFieldChanged = true;\n\t_swdoc.setup_form_toolbar();\n}"},{"name":"sl_issuecallslist_OnItemDoubleClicked","code":"sl_issuecallslist_OnItemDoubleClicked(nRow, nCol)\n{\n\tvar nCallRef = sl_issuecallslist.GetItemTextRaw(nRow, 0)\n\tif(nCallRef>0)\n\t{\n\t\tapp.global.OpenCallDetailsView(nCallRef);\n\t\t_swdoc.load_issue_assetlist();\n\t}\n\n\n}"},{"name":"sl_issuecallslist_OnItemSelected","code":"sl_issuecallslist_OnItemSelected(nRow)\n{\n\t\/\/-- When a call is selected from the the list of issue calls then enable the \"Remove Call\" button\n\tvar intCallref = sl_issuecallslist.GetItemTextRaw(nRow, 0);\n\t_een(btnRemoveCall , true);\n\t_een(btn_SetMasterCall , ((sl_issuecallslist.curSel>-1) && (intCallref!=_swdoc.swissues.mastercallref)));\n\n}"},{"name":"sl_affectedcustomerslist_OnItemDoubleClicked","code":"sl_affectedcustomerslist_OnItemDoubleClicked(nRow, nCol)\n{\n\tvar strCust = sl_affectedcustomerslist.GetItemText(nRow,0);\n\tapp.OpenFormForEdit('TfCustomer',strCust);\n\n\n}"},{"name":"btnSaveIssue_OnPressed","code":"btnSaveIssue_OnPressed()\n{\n\t\t\n\tvar con = new HelpdeskSession;\n\tif(!con.Connect())return false;\n\t\n\t\/\/-- mandatory field checks\n\tif(_swdoc.check_mandatory_fields()==false) return false;\t\n\t\n\t\/\/--\n\t\/\/-- NWJ - 14.03.2007 - Create a new issue or update existing issue\n\tif(_swdoc.boolInserting)\n\t{\n\t\t\/\/-- We need to create the issue\n\t\t\/\/-- Advise the server of the create operation to for it to start the transaction\n\t\tif(con.BeginCreateIssue())\n\t\t{\n\t\t\t\/\/-- owner\n\t\t\t_swdoc.swissues.dd = dd.Name;\n\t\t\t_swdoc.swissues.suppgroup = app.session.groupID;\n\n\t\t\t\/\/-- Send each bound value in the swissues table that has been modified\n\t\t\tif(rec = _swdoc.GetRecord(\"swissues\"))\n\t\t\t{\n\t\t\t\tvar nColCount = rec.GetCount();\n\t\t\t\tfor(x = 0; x < nColCount; x++)\n\t\t\t\t{\n\t\t\t\t\tcon.SendValue(\"swissues.\" + rec.GetColumnName(x), rec.GetValue(x));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t\/\/-- Commit transaction data\n\t\t\tif(!con.Commit())\n\t\t\t{\n\t\t\t\tMessageBox(con.GetLastErrorStr(), MB_ICONSTOP);\n\t\t\t\tcon.Close();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t\/\/-- Having created the new issue, we retrieve its properties using GetResultInfo() into\n\t\t\t\/\/-- the array arrResultInfo from which we can obtain the issue reference\n\t\t\tvar arrResultInfo = con.GetResultInfo();\n\t\t\t\t\n\t\t\tif(arrResultInfo && arrResultInfo.length)\n\t\t\t{\n\t\t\t\t\/\/-- set the issue field value\n\t\t\t\t_swdoc.swissues.issueref = arrResultInfo[0].issueref;\n\t\t\t\t\n\t\t\t\t\/\/-- add calls to issue if there are any\n\t\t\t\t\/\/-- Add the call(s) to the issue, if this fails then close the connection and quit\n\t\t\t\tvar strCallrefs = _swdoc.sl_listvalues(_swdoc.MF().sl_issuecallslist,0,false);\n\t\t\t\tif(strCallrefs!=\"\")\n\t\t\t\t{\n\t\t\t\t\tcon.AddCallToIssue(_swdoc.swissues.issueref, strCallrefs);\n\t\t\t\t}\n\t\t\t\n\t\t\t\t\/\/-- NWJ - load record into form so the form switches out of insert mode to update mode.\n\t\t\t\t\/\/--\t   There was an issue where after inserting if you changed a field and tried closing the form and said ok to save it errored because\n\t\t\t\t\/\/--\t   it tried to insert record again.\n\t\t\t\t_swdoc.LoadRecordData(\"syscache\", \"swissues\", _swdoc.swissues.issueref);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t\/\/-- save to syscache\n\t\t\/\/-- We need to create the issue\n\t\t\/\/-- Advise the server of the create operation to for it to start the transaction\n\t\tif(con.BeginUpdateIssue(_swdoc.swissues.issueref))\n\t\t{\n\n\t\t\t\/\/-- Send each bound value in the swissues table that has been modified\n\t\t\tif(rec = _swdoc.GetRecord(\"swissues\"))\n\t\t\t{\n\t\t\t\tvar nColCount = rec.GetCount();\n\t\t\t\tfor(x = 0; x < nColCount; x++)\n\t\t\t\t{\n\t\t\t\t\tif(!rec.IsModified(x))continue;\n\t\t\t\t\tcon.SendValue(\"swissues.\" + rec.GetColumnName(x), rec.GetValue(x));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t\/\/-- Commit transaction data\n\t\t\tif(!con.Commit())\n\t\t\t{\n\t\t\t\tMessageBox(con.GetLastErrorStr(), MB_ICONSTOP);\n\t\t\t\tcon.Close();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\t\n\t}\t\n\t\n\tcon.Close();\n\n\t_swdoc.ResetModiedFlag(\"swissues\");\t\n\t_swdoc.boolInserting=false;\n\t_swdoc.boolFormFieldChanged = false;\n\t_swdoc.setup_form_elements(true);\t\t\n\t\n}"},{"name":"btnLogCall_OnPressed","code":"btnLogCall_OnPressed()\n{\n\t\/\/-- Check that the issue object is available\n\tif(_swdoc.swissues.issueref==\"\")return false;\n\t\n\t\n\t\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\t\/\/ This logs a new call based on the details contained in the master\t\t\/\/\n\t\/\/ call for a customer selected through a Tree Browser dialog and then assigns this \/\/\n\t\/\/ to the _swdoc.Issue\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\/\/\n\t\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\t\n\t\/\/-- Check that the issue has a master call reference set as this will form the basis of the \n\t\/\/-- new call we will be logging and linking to this issue.  If no master call reference is\n\t\/\/-- is set then prompt the analyst that one must be set before carrying out this action.\n\tif(_swdoc.swissues.mastercallref == 0)\n\t{\n\t\tvar strMessage  = \"There is no master call set for this issue, this is used to populate the call logged for this customer.\\r\\n\";\n\t\t    strMessage += \"Select a master call reference from the calls in the issue and try again.\";\n\t\tMessageBox(strMessage);\n\t\treturn false;\n\t}\n\t\n\t\/\/-- Identify the SQL Tree Browser Form we should be opening from the setting in the DD\n\t\/\/-- If there is no value specified in the DD then default to the \"Customer\" form\n\tvar strPickCustomerForm = dd.GetGlobalParamAsString(\"Issue View\/PickCustomerForm\");\n\tif(strPickCustomerForm.length == 0)\tstrPickCustomerForm = \"Customer\";\n\t\n\tvar arrSqlTreeForms = dd.GetSqlTreeBrowsersFormParameters(strPickCustomerForm );\n\n\t\/\/-- Get the CustomerID of the chosen customer from the Sql Tree Browser\n\tvar strCustId = app.global.OpenSqlTreeBrowserForm(strPickCustomerForm, true, true);\n\tif(strCustId.length == 0)\n\t\treturn false;\n\t\n\t\/\/-- Check we have an open HelpdeskSession connection\n\tvar con = new HelpdeskSession;\n\tif(!con.Connect())\n\t{\n\t\treturn false;\n\t}\n\t\n\t\/\/-- Log the new call against the selected customerID and associate it to this issue, if the\n\t\/\/-- action fails then close the HelpdeskSession connection and quit\n\tif(!con.AddCustomerToIssue(_swdoc.swissues.issueref,arrSqlTreeForms[0].table ,strCustId))\n\t{\n\t\tcon.Close();\n\t\treturn false;\n\t}\n\n\t\/\/-- nwj - refresh lists after adding customer call\t\n\t_swdoc.refresh_sqllists();\t\n\t\n\t\/\/-- NWJ - 25.11.2008 - AddCustomerToIssue does not bring across org id so set it here\n\t\/\/-- get customer record and that customers org then update call values\n\t\n\tfor(var x=0; x < sl_issuecallslist.rowCount();x++)\n\t{\n\t\tvar strOrg = sl_issuecallslist.GetItemTextRaw(x, \"companyname\");\n\t\tif(strOrg==\"\")\n\t\t{\n\t\t\tvar oCustRec = new SqlRecord;\n\t\t\tif(oCustRec.GetRecord(\"userdb\",strCustId))\n\t\t\t{\n\t\t\t\tvar intCallref = sl_issuecallslist.GetItemTextRaw(x, \"callref\");\t\t\t\n\t\t\t\tif(con.BeginCallValueUpdates(intCallref, \"Issue - Call Update\"))\n\t\t\t\t{\n\t\t\t\t\tcon.SendString(\"companyname\", oCustRec.companyname);\n\t\t\t\t\tcon.SendString(\"fk_company_id\", oCustRec.fk_company_id);\t\t\n\t\t\t\t\tcon.Commit();\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\/\/-- refresh list again to show update org names\n\t_swdoc.refresh_sqllists();\n\t\n\t\/\/-- If call has been successfully logged and associated to the issue then close the HelpdeskSession connection\n\tcon.Close();\n\n\t\n\treturn true;\n\n}"},{"name":"OnFormLoaded","code":"OnFormLoaded()\n{\n\n\t_swdoc.boolInserting= (_swdoc.swissues.issueref==\"\");\n\t_swdoc.setup_form_elements();\t\n\n}"},{"name":"OnFieldValueChanged","code":"OnFieldValueChanged(strName, strValue)\n{\n\t_swdoc.boolFormFieldChanged = true;\n\t_swdoc.setup_form_toolbar();\n\n}"},{"name":"TabIssue_OnTabSelected","code":"TabIssue_OnTabSelected(nTab)\n{\n\tif(nTab==1)\n\t{\n\t\t_een(btn_SetMasterCall , (sl_issuecallslist.curSel>-1));\n\t}\n\t\n\n}"},{"name":"tb_summary_OnValueChanged","code":"tb_summary_OnValueChanged(strValue)\n{\n\t_swdoc.merge_issue_description();\n\n\n}"},{"name":"tb_description_OnValueChanged","code":"tb_description_OnValueChanged(strValue)\n{\n\t_swdoc.merge_issue_description()\n}"},{"name":"btnResolveIssue_OnPressed","code":"btnResolveIssue_OnPressed()\n{\n\n\tif (_swdoc.swissues.issueref) \n\t{\n\t\n\t\tvar conCache = new SqlQuery;\n\t\t\n\t\t\/\/ query the database\n\t\tvar strSQL = \"\";\n\t\tstrSQL = \"SELECT * FROM swissues WHERE issueref = '\"+_swdoc.swissues.issueref+\"'\";\n\t\tconCache.Query(strSQL, \"sw_systemdb\");\n\t\t\n\t\t\/\/Check if \"swissues\" is still in the cache\n\t\tif(!conCache.Fetch())\n\t\t{\n\t\t\t\t\/\/This call must be closed\n\t\t\t\tMessageBox(\"This record has been closed since you loaded this form.\\n\\nPlease close this form and refresh your Supportworks\\nToday page to review your current issues.\");\n\t\t\t\treturn false;\n\t\t}\n\t\tconCache.Reset();\n\t}\n\t\t\n\t\/\/-- should never be true\n\tif(_swdoc.swissues.issueref.length == 0)return true;\n\t\n\t\/\/--  do mandatory checks\n\tif(_swdoc.check_mandatory_fields()==false) return false;\n\t\t\t\n\t\/\/-- If there are calls associated to this _swdoc.Issue\n\tif((_swdoc.strAttachedCallrefs!=\"\") &&(_swdoc.MF().flg_resolveincs.value==\"1\"))\n\t{\n\t\t\/\/-- Unlock call(s) associated to this issue\n\t\tapp.global.UnlockCalls(_swdoc.strAttachedCallrefs);\n\t\t\n\t\t\/\/-- Line Added DavidJH - 21.06.2005\n\t\t\/\/-- Accept any unassigned or unaccepted calls (if there are any) to enable the issue to be closed\n\t\t_swdoc.ManuallyAcceptLinkedIssueCalls();\n\t\t\n\t\t\/\/-- If call(s) cannot be closed then quit\n\t\tif(!_swdoc.CanCloseCalls(_swdoc.strAttachedCallrefs))return false\n\t\t\n\t\t\/\/-- Set the text to be used in the resolve\/close form\n\t\tvar strCloseUpdateText = \"Incident resolved as part of known error \" + _swdoc.swissues.issueref;\n\t\t\t\n\t\t\/\/-- Open the resolve\/close form with the text set above (strCloseUpdateText) and the _swdoc.Issue Ref to be closed\t\n\t\tapp.OpenCallResolveCloseForm(_swdoc.strAttachedCallrefs, strCloseUpdateText, strCloseUpdateText, \"\", _swdoc.swissues.issueref);\n\t\treturn true\n\t}\n\telse \/\/-- No calls associated to this _swdoc.Issue so we simply set _swdoc.Issue Status to \"Resolved\" and save change\n\t{\t\n\t\t_swdoc.swissues.status = ISSUE_STATUS_RESOLVED;\n\t\t_swdoc.Save();\n\t\t \n\t\t\/\/-- need to ensure mandatory fields have been filled in??\n\t\t \n\t\tvar str_issueref = _swdoc.swissues.issueref; \/\/\n\t\t\t\n\t\tvar myHDSession = new HelpdeskSession;\n\t\tif (myHDSession.Connect()){\n\t\t\tmyHDSession.BeginResolveIssue(str_issueref);\n\t\t\tmyHDSession.Commit();\n\t\t\t\t\n\t\t\t\/\/Close the connection.\n\t\t\tmyHDSession.Close();\n\t\t}\n\t\t\n\t\t\/\/-- CloseForm();\n\t\t\/\/-- before we just closed form ??? instead of jsut re-init fields\n\t\t_swdoc.ResetModiedFlag(\"swissues\");\t\n\t\t_swdoc.boolInserting=false;\n\t\t_swdoc.boolFormFieldChanged = false;\n\t\t_swdoc.setup_form_elements();\t\t\n\t\t\n\t\treturn true;\n\t}\n\n}"},{"name":"tb_resdesc_OnValueChanged","code":"tb_resdesc_OnValueChanged(strValue)\n{\n\t_swdoc.merge_issue_description()\n}"},{"name":"tb_ressum_OnValueChanged","code":"tb_ressum_OnValueChanged(strValue)\n{\n\t_swdoc.merge_issue_description();\n\n\n}"},{"name":"tb_issuetype_OnValueChanged","code":"tb_issuetype_OnValueChanged(strValue)\n{\n\t\n\tvar currTab=_swdoc.MF().TabIssue.tab;\n\t\/\/-- show hide resolve tab & enable resolve button\n\tif(strValue==2)\n\t{\n\t\t\/\/-- known error\n\t\t_swdoc.MF().TabIssue.ShowTabItem(4,true);\n\t\t_etab(_swdoc.MF().TabIssue,4);\n\t\t_ema(_swdoc.MF().tb_ressum , true);\n\t\t_ema(_swdoc.MF().tb_resdesc,true);\n\t}\n\telse\n\t{\n\t\t\/\/-- problem\n\t\tif(currTab==4)currTab=0;\n\t\t_swdoc.Issue().rfc_callref=\"0\";\n\t\t_ete(tb_rfccallref,\"<Not Identified>\");\n\t\t_swdoc.MF().TabIssue.ShowTabItem(4,false);\t\t\n\t\t_etab(_swdoc.MF().TabIssue,currTab);\n\t\t_ema(_swdoc.MF().tb_ressum , false);\n\t\t_ema(_swdoc.MF().tb_resdesc,false);\t\t\n\t}\n\n\t\/\/-- enable resolve button\n\tvar boolCanResolve = app.session.HaveRight(ANALYST_RIGHT_B_GROUP,ANALYST_RIGHT_B_CANRESOLVEISSUES);\n\tvar boolResovable = ( (_swdoc.swissues.status != ISSUE_STATUS_RESOLVED) && (_swdoc.swissues.issuetype==2))\n\t\n\t\/\/-- is status not already set to resolve then enable button and type is known error\n\t _een(_swdoc.MF().btnResolveIssue , ((!_swdoc.boolInserting) && (boolCanResolve) && (boolResovable)));\n\n\t_een(_swdoc.MF().flg_resolveincs,_swdoc.MF().btnResolveIssue.enable);\n\t_eva(_swdoc.MF().flg_resolveincs,(_swdoc.MF().flg_resolveincs.enable)?\"1\":\"0\");\t\t\n\n}"},{"name":"sl_asset1_OnItemChecked","code":"sl_asset1_OnItemChecked(nRow, bChecked)\n{\n\t\/\/-- when row is checked load asset details\n\tif(_swdoc.intCurrentAssetRow>-1) sl_asset1.SetRowChecked(_swdoc.intCurrentAssetRow, false);\n\n\t_swdoc.intCurrentAssetRow=nRow;\n\tvar strAssetID = sl_asset1.GetItemTextRaw(nRow, \"equipid\");\n\t_swdoc.ResolveRecord(\"equipmnt\", \"equipid\", strAssetID);\n\n}"},{"name":"btnLogRFC_OnPressed","code":"btnLogRFC_OnPressed()\n{\n\t\/\/-- view rfc call\n\tif(_swdoc.Issue().rfc_callref>0)\n\t{\n\t\tapp.global.OpenCallDetailsView(_swdoc.Issue().rfc_callref);\n\t\treturn;\n\t}\n\t\t\n\t\/\/-- Check that the issue object is available\n\tif(_swdoc.swissues.issueref==\"\")return false;\n\t\n\t\n\t\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\t\/\/ This lopens a new log rfc call form\t\t\t\t\t\t\t\t\t\t\t\t\/\/\n\t\/\/ set global pointer to this _swdoc which can then be used in the log rfc form\t\/\/\n\t\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\t\n\t\n\t\n\t\/\/-- by default use the customer from the master incident if there is one\n\t\n\t\/\/-- add this issue _swdoc to global array so accessible to other forms opened\n\tapp.g.RAISE_RFC_FROM_ISSUE = _swdoc.Issue().issueref;\n\tapp.g.add_me_document(\"issue\",_swdoc.Issue().issueref,_swdoc);\n\t\n\tapp.global.LogNewCall(\"Change Request\");\n\t\n\t\/\/-- once logged in rfc form we can access objects and change text and set values etc\n\t\/\/btnLogRFC.text = \"View RFC\";\n\t\n\treturn true;\n\n}"},{"name":"lb_resprofile_OnLeftClick","code":"lb_resprofile_OnLeftClick()\n{\n\t\/\/-- select resolution code\n\t_swdoc.Issue().rescode = app.g.pick_resolutionprofile(_swdoc.Issue().rescode,\"\");\n\t_swdoc.UpdateFormFromData();\n\t_een(btnSaveIssue , true);\n\treturn false;\n}"},{"name":"lb_resprofile_OnRightClick","code":"lb_resprofile_OnRightClick()\n{\n\t_swdoc.Issue().rescode = \"\";\n\t_ete(lb_resprofile,\"\");\n\t_swdoc.UpdateFormFromData();\n\t_een(btnSaveIssue , true);\n\n\treturn false;;\n}"}]}}},{"appearance":{"width":"360","height":"220","backgroundColor":"#ffffff","fillColour":"#ffffff","textColour":"#000000","font":{"@size":"8","#text":"Arial"}},"javascript":{}}]}}}